command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	306544	File	/develop/joernDwkProcess/joern-dev/./output/data/CWE119/source-code/119-1400-c/testcases/shared/108/io.c								
ANR	306545	Function	printLine	11:0:174:281							
ANR	306546	FunctionDef	printLine (const char * line)		306545	0					
ANR	306547	CompoundStatement		12:0:210:281	306545	0					
ANR	306548	IfStatement	if ( line != NULL )		306545	0					
ANR	306549	Condition	line != NULL	13:7:220:231	306545	0	True				
ANR	306550	EqualityExpression	line != NULL		306545	0		!=			
ANR	306551	Identifier	line		306545	0					
ANR	306552	Identifier	NULL		306545	1					
ANR	306553	CompoundStatement		3:4:29:29	306545	1					
ANR	306554	ExpressionStatement	"printf ( ""%s\\n"" , line )"	15:8:251:271	306545	0	True				
ANR	306555	CallExpression	"printf ( ""%s\\n"" , line )"		306545	0					
ANR	306556	Callee	printf		306545	0					
ANR	306557	Identifier	printf		306545	0					
ANR	306558	ArgumentList	"""%s\\n"""		306545	1					
ANR	306559	Argument	"""%s\\n"""		306545	0					
ANR	306560	PrimaryExpression	"""%s\\n"""		306545	0					
ANR	306561	Argument	line		306545	1					
ANR	306562	Identifier	line		306545	0					
ANR	306563	ReturnType	void		306545	1					
ANR	306564	Identifier	printLine		306545	2					
ANR	306565	ParameterList	const char * line		306545	3					
ANR	306566	Parameter	const char * line	11:16:190:206	306545	0	True				
ANR	306567	ParameterType	const char *		306545	0					
ANR	306568	Identifier	line		306545	1					
ANR	306569	CFGEntryNode	ENTRY		306545		True				
ANR	306570	CFGExitNode	EXIT		306545		True				
ANR	306571	Symbol	NULL		306545						
ANR	306572	Symbol	line		306545						
ANR	306573	Function	printWLine	19:0:286:400							
ANR	306574	FunctionDef	printWLine (const wchar_t * line)		306573	0					
ANR	306575	CompoundStatement		20:0:326:400	306573	0					
ANR	306576	IfStatement	if ( line != NULL )		306573	0					
ANR	306577	Condition	line != NULL	21:7:336:347	306573	0	True				
ANR	306578	EqualityExpression	line != NULL		306573	0		!=			
ANR	306579	Identifier	line		306573	0					
ANR	306580	Identifier	NULL		306573	1					
ANR	306581	CompoundStatement		3:4:29:29	306573	1					
ANR	306582	Statement	wprintf	23:8:367:373	306573	0	True				
ANR	306583	Statement	(	23:15:374:374	306573	1	True				
ANR	306584	Statement	L	23:16:375:375	306573	2	True				
ANR	306585	Statement	"""%ls\\n"""	23:17:376:382	306573	3	True				
ANR	306586	Statement	","	23:24:383:383	306573	4	True				
ANR	306587	Statement	line	23:26:385:388	306573	5	True				
ANR	306588	Statement	)	23:30:389:389	306573	6	True				
ANR	306589	ExpressionStatement		23:31:390:390	306573	7	True				
ANR	306590	ReturnType	void		306573	1					
ANR	306591	Identifier	printWLine		306573	2					
ANR	306592	ParameterList	const wchar_t * line		306573	3					
ANR	306593	Parameter	const wchar_t * line	19:17:303:322	306573	0	True				
ANR	306594	ParameterType	const wchar_t *		306573	0					
ANR	306595	Identifier	line		306573	1					
ANR	306596	CFGEntryNode	ENTRY		306573		True				
ANR	306597	CFGExitNode	EXIT		306573		True				
ANR	306598	Symbol	NULL		306573						
ANR	306599	Symbol	line		306573						
ANR	306600	Function	printIntLine	27:0:405:475							
ANR	306601	FunctionDef	printIntLine (int intNumber)		306600	0					
ANR	306602	CompoundStatement		28:0:440:475	306600	0					
ANR	306603	ExpressionStatement	"printf ( ""%d\\n"" , intNumber )"	29:4:447:472	306600	0	True				
ANR	306604	CallExpression	"printf ( ""%d\\n"" , intNumber )"		306600	0					
ANR	306605	Callee	printf		306600	0					
ANR	306606	Identifier	printf		306600	0					
ANR	306607	ArgumentList	"""%d\\n"""		306600	1					
ANR	306608	Argument	"""%d\\n"""		306600	0					
ANR	306609	PrimaryExpression	"""%d\\n"""		306600	0					
ANR	306610	Argument	intNumber		306600	1					
ANR	306611	Identifier	intNumber		306600	0					
ANR	306612	ReturnType	void		306600	1					
ANR	306613	Identifier	printIntLine		306600	2					
ANR	306614	ParameterList	int intNumber		306600	3					
ANR	306615	Parameter	int intNumber	27:19:424:436	306600	0	True				
ANR	306616	ParameterType	int		306600	0					
ANR	306617	Identifier	intNumber		306600	1					
ANR	306618	CFGEntryNode	ENTRY		306600		True				
ANR	306619	CFGExitNode	EXIT		306600		True				
ANR	306620	Symbol	intNumber		306600						
ANR	306621	Function	printShortLine	32:0:480:559							
ANR	306622	FunctionDef	printShortLine (short shortNumber)		306621	0					
ANR	306623	CompoundStatement		33:0:521:559	306621	0					
ANR	306624	ExpressionStatement	"printf ( ""%hd\\n"" , shortNumber )"	34:4:528:556	306621	0	True				
ANR	306625	CallExpression	"printf ( ""%hd\\n"" , shortNumber )"		306621	0					
ANR	306626	Callee	printf		306621	0					
ANR	306627	Identifier	printf		306621	0					
ANR	306628	ArgumentList	"""%hd\\n"""		306621	1					
ANR	306629	Argument	"""%hd\\n"""		306621	0					
ANR	306630	PrimaryExpression	"""%hd\\n"""		306621	0					
ANR	306631	Argument	shortNumber		306621	1					
ANR	306632	Identifier	shortNumber		306621	0					
ANR	306633	ReturnType	void		306621	1					
ANR	306634	Identifier	printShortLine		306621	2					
ANR	306635	ParameterList	short shortNumber		306621	3					
ANR	306636	Parameter	short shortNumber	32:21:501:517	306621	0	True				
ANR	306637	ParameterType	short		306621	0					
ANR	306638	Identifier	shortNumber		306621	1					
ANR	306639	CFGEntryNode	ENTRY		306621		True				
ANR	306640	CFGExitNode	EXIT		306621		True				
ANR	306641	Symbol	shortNumber		306621						
ANR	306642	Function	printFloatLine	37:0:564:642							
ANR	306643	FunctionDef	printFloatLine (float floatNumber)		306642	0					
ANR	306644	CompoundStatement		38:0:605:642	306642	0					
ANR	306645	ExpressionStatement	"printf ( ""%f\\n"" , floatNumber )"	39:4:612:639	306642	0	True				
ANR	306646	CallExpression	"printf ( ""%f\\n"" , floatNumber )"		306642	0					
ANR	306647	Callee	printf		306642	0					
ANR	306648	Identifier	printf		306642	0					
ANR	306649	ArgumentList	"""%f\\n"""		306642	1					
ANR	306650	Argument	"""%f\\n"""		306642	0					
ANR	306651	PrimaryExpression	"""%f\\n"""		306642	0					
ANR	306652	Argument	floatNumber		306642	1					
ANR	306653	Identifier	floatNumber		306642	0					
ANR	306654	ReturnType	void		306642	1					
ANR	306655	Identifier	printFloatLine		306642	2					
ANR	306656	ParameterList	float floatNumber		306642	3					
ANR	306657	Parameter	float floatNumber	37:21:585:601	306642	0	True				
ANR	306658	ParameterType	float		306642	0					
ANR	306659	Identifier	floatNumber		306642	1					
ANR	306660	CFGEntryNode	ENTRY		306642		True				
ANR	306661	CFGExitNode	EXIT		306642		True				
ANR	306662	Symbol	floatNumber		306642						
ANR	306663	Function	printLongLine	42:0:647:722							
ANR	306664	FunctionDef	printLongLine (long longNumber)		306663	0					
ANR	306665	CompoundStatement		43:0:685:722	306663	0					
ANR	306666	ExpressionStatement	"printf ( ""%ld\\n"" , longNumber )"	44:4:692:719	306663	0	True				
ANR	306667	CallExpression	"printf ( ""%ld\\n"" , longNumber )"		306663	0					
ANR	306668	Callee	printf		306663	0					
ANR	306669	Identifier	printf		306663	0					
ANR	306670	ArgumentList	"""%ld\\n"""		306663	1					
ANR	306671	Argument	"""%ld\\n"""		306663	0					
ANR	306672	PrimaryExpression	"""%ld\\n"""		306663	0					
ANR	306673	Argument	longNumber		306663	1					
ANR	306674	Identifier	longNumber		306663	0					
ANR	306675	ReturnType	void		306663	1					
ANR	306676	Identifier	printLongLine		306663	2					
ANR	306677	ParameterList	long longNumber		306663	3					
ANR	306678	Parameter	long longNumber	42:20:667:681	306663	0	True				
ANR	306679	ParameterType	long		306663	0					
ANR	306680	Identifier	longNumber		306663	1					
ANR	306681	CFGEntryNode	ENTRY		306663		True				
ANR	306682	CFGExitNode	EXIT		306663		True				
ANR	306683	Symbol	longNumber		306663						
ANR	306684	Function	printLongLongLine	47:0:727:831							
ANR	306685	FunctionDef	printLongLongLine (int64_t longLongIntNumber)		306684	0					
ANR	306686	CompoundStatement		48:0:779:831	306684	0					
ANR	306687	Statement	printf	49:4:786:791	306684	0	True				
ANR	306688	Statement	(	49:10:792:792	306684	1	True				
ANR	306689	Statement	"""%"""	49:11:793:795	306684	2	True				
ANR	306690	Statement	PRId64	49:15:797:802	306684	3	True				
ANR	306691	Statement	"""\\n"""	49:22:804:807	306684	4	True				
ANR	306692	Statement	","	49:26:808:808	306684	5	True				
ANR	306693	Statement	longLongIntNumber	49:28:810:826	306684	6	True				
ANR	306694	Statement	)	49:45:827:827	306684	7	True				
ANR	306695	ExpressionStatement		49:46:828:828	306684	8	True				
ANR	306696	ReturnType	void		306684	1					
ANR	306697	Identifier	printLongLongLine		306684	2					
ANR	306698	ParameterList	int64_t longLongIntNumber		306684	3					
ANR	306699	Parameter	int64_t longLongIntNumber	47:24:751:775	306684	0	True				
ANR	306700	ParameterType	int64_t		306684	0					
ANR	306701	Identifier	longLongIntNumber		306684	1					
ANR	306702	CFGEntryNode	ENTRY		306684		True				
ANR	306703	CFGExitNode	EXIT		306684		True				
ANR	306704	Symbol	longLongIntNumber		306684						
ANR	306705	Function	printSizeTLine	52:0:836:916							
ANR	306706	FunctionDef	printSizeTLine (size_t sizeTNumber)		306705	0					
ANR	306707	CompoundStatement		53:0:878:916	306705	0					
ANR	306708	ExpressionStatement	"printf ( ""%zu\\n"" , sizeTNumber )"	54:4:885:913	306705	0	True				
ANR	306709	CallExpression	"printf ( ""%zu\\n"" , sizeTNumber )"		306705	0					
ANR	306710	Callee	printf		306705	0					
ANR	306711	Identifier	printf		306705	0					
ANR	306712	ArgumentList	"""%zu\\n"""		306705	1					
ANR	306713	Argument	"""%zu\\n"""		306705	0					
ANR	306714	PrimaryExpression	"""%zu\\n"""		306705	0					
ANR	306715	Argument	sizeTNumber		306705	1					
ANR	306716	Identifier	sizeTNumber		306705	0					
ANR	306717	ReturnType	void		306705	1					
ANR	306718	Identifier	printSizeTLine		306705	2					
ANR	306719	ParameterList	size_t sizeTNumber		306705	3					
ANR	306720	Parameter	size_t sizeTNumber	52:21:857:874	306705	0	True				
ANR	306721	ParameterType	size_t		306705	0					
ANR	306722	Identifier	sizeTNumber		306705	1					
ANR	306723	CFGEntryNode	ENTRY		306705		True				
ANR	306724	CFGExitNode	EXIT		306705		True				
ANR	306725	Symbol	sizeTNumber		306705						
ANR	306726	Function	printHexCharLine	57:0:921:994							
ANR	306727	FunctionDef	printHexCharLine (char charHex)		306726	0					
ANR	306728	CompoundStatement		58:0:959:994	306726	0					
ANR	306729	ExpressionStatement	"printf ( ""%02x\\n"" , charHex )"	59:4:966:991	306726	0	True				
ANR	306730	CallExpression	"printf ( ""%02x\\n"" , charHex )"		306726	0					
ANR	306731	Callee	printf		306726	0					
ANR	306732	Identifier	printf		306726	0					
ANR	306733	ArgumentList	"""%02x\\n"""		306726	1					
ANR	306734	Argument	"""%02x\\n"""		306726	0					
ANR	306735	PrimaryExpression	"""%02x\\n"""		306726	0					
ANR	306736	Argument	charHex		306726	1					
ANR	306737	Identifier	charHex		306726	0					
ANR	306738	ReturnType	void		306726	1					
ANR	306739	Identifier	printHexCharLine		306726	2					
ANR	306740	ParameterList	char charHex		306726	3					
ANR	306741	Parameter	char charHex	57:23:944:955	306726	0	True				
ANR	306742	ParameterType	char		306726	0					
ANR	306743	Identifier	charHex		306726	1					
ANR	306744	CFGEntryNode	ENTRY		306726		True				
ANR	306745	CFGExitNode	EXIT		306726		True				
ANR	306746	Symbol	charHex		306726						
ANR	306747	Function	printWcharLine	62:0:999:1254							
ANR	306748	FunctionDef	printWcharLine (wchar_t wideChar)		306747	0					
ANR	306749	CompoundStatement		63:0:1039:1254	306747	0					
ANR	306750	IdentifierDeclStatement	wchar_t s [ 2 ] ;	66:4:1165:1177	306747	0	True				
ANR	306751	IdentifierDecl	s [ 2 ]		306747	0					
ANR	306752	IdentifierDeclType	wchar_t [ 2 ]		306747	0					
ANR	306753	Identifier	s		306747	1					
ANR	306754	PrimaryExpression	2		306747	2					
ANR	306755	ExpressionStatement	s [ 0 ] = wideChar	67:8:1188:1203	306747	1	True				
ANR	306756	AssignmentExpression	s [ 0 ] = wideChar		306747	0		=			
ANR	306757	ArrayIndexing	s [ 0 ]		306747	0					
ANR	306758	Identifier	s		306747	0					
ANR	306759	PrimaryExpression	0		306747	1					
ANR	306760	Identifier	wideChar		306747	1					
ANR	306761	Statement	s	68:8:1214:1214	306747	2	True				
ANR	306762	Statement	[	68:9:1215:1215	306747	3	True				
ANR	306763	Statement	1	68:10:1216:1216	306747	4	True				
ANR	306764	Statement	]	68:11:1217:1217	306747	5	True				
ANR	306765	Statement	=	68:13:1219:1219	306747	6	True				
ANR	306766	Statement	L	68:15:1221:1221	306747	7	True				
ANR	306767	ExpressionStatement	'\\0'	68:16:1222:1226	306747	8	True				
ANR	306768	PrimaryExpression	'\\0'		306747	0					
ANR	306769	ExpressionStatement	"printf ( ""%ls\\n"" , s )"	69:4:1233:1251	306747	9	True				
ANR	306770	CallExpression	"printf ( ""%ls\\n"" , s )"		306747	0					
ANR	306771	Callee	printf		306747	0					
ANR	306772	Identifier	printf		306747	0					
ANR	306773	ArgumentList	"""%ls\\n"""		306747	1					
ANR	306774	Argument	"""%ls\\n"""		306747	0					
ANR	306775	PrimaryExpression	"""%ls\\n"""		306747	0					
ANR	306776	Argument	s		306747	1					
ANR	306777	Identifier	s		306747	0					
ANR	306778	ReturnType	void		306747	1					
ANR	306779	Identifier	printWcharLine		306747	2					
ANR	306780	ParameterList	wchar_t wideChar		306747	3					
ANR	306781	Parameter	wchar_t wideChar	62:20:1019:1034	306747	0	True				
ANR	306782	ParameterType	wchar_t		306747	0					
ANR	306783	Identifier	wideChar		306747	1					
ANR	306784	CFGEntryNode	ENTRY		306747		True				
ANR	306785	CFGExitNode	EXIT		306747		True				
ANR	306786	Symbol	s		306747						
ANR	306787	Symbol	wideChar		306747						
ANR	306788	Symbol	* s		306747						
ANR	306789	Function	printUnsignedLine	72:0:1259:1349							
ANR	306790	FunctionDef	printUnsignedLine (unsigned unsignedNumber)		306789	0					
ANR	306791	CompoundStatement		73:0:1309:1349	306789	0					
ANR	306792	ExpressionStatement	"printf ( ""%u\\n"" , unsignedNumber )"	74:4:1316:1346	306789	0	True				
ANR	306793	CallExpression	"printf ( ""%u\\n"" , unsignedNumber )"		306789	0					
ANR	306794	Callee	printf		306789	0					
ANR	306795	Identifier	printf		306789	0					
ANR	306796	ArgumentList	"""%u\\n"""		306789	1					
ANR	306797	Argument	"""%u\\n"""		306789	0					
ANR	306798	PrimaryExpression	"""%u\\n"""		306789	0					
ANR	306799	Argument	unsignedNumber		306789	1					
ANR	306800	Identifier	unsignedNumber		306789	0					
ANR	306801	ReturnType	void		306789	1					
ANR	306802	Identifier	printUnsignedLine		306789	2					
ANR	306803	ParameterList	unsigned unsignedNumber		306789	3					
ANR	306804	Parameter	unsigned unsignedNumber	72:23:1282:1304	306789	0	True				
ANR	306805	ParameterType	unsigned		306789	0					
ANR	306806	Identifier	unsignedNumber		306789	1					
ANR	306807	CFGEntryNode	ENTRY		306789		True				
ANR	306808	CFGExitNode	EXIT		306789		True				
ANR	306809	Symbol	unsignedNumber		306789						
ANR	306810	Function	printHexUnsignedCharLine	77:0:1354:1464							
ANR	306811	FunctionDef	printHexUnsignedCharLine (unsigned char unsignedCharacter)		306810	0					
ANR	306812	CompoundStatement		78:0:1419:1464	306810	0					
ANR	306813	ExpressionStatement	"printf ( ""%02x\\n"" , unsignedCharacter )"	79:4:1426:1461	306810	0	True				
ANR	306814	CallExpression	"printf ( ""%02x\\n"" , unsignedCharacter )"		306810	0					
ANR	306815	Callee	printf		306810	0					
ANR	306816	Identifier	printf		306810	0					
ANR	306817	ArgumentList	"""%02x\\n"""		306810	1					
ANR	306818	Argument	"""%02x\\n"""		306810	0					
ANR	306819	PrimaryExpression	"""%02x\\n"""		306810	0					
ANR	306820	Argument	unsignedCharacter		306810	1					
ANR	306821	Identifier	unsignedCharacter		306810	0					
ANR	306822	ReturnType	void		306810	1					
ANR	306823	Identifier	printHexUnsignedCharLine		306810	2					
ANR	306824	ParameterList	unsigned char unsignedCharacter		306810	3					
ANR	306825	Parameter	unsigned char unsignedCharacter	77:30:1384:1414	306810	0	True				
ANR	306826	ParameterType	unsigned char		306810	0					
ANR	306827	Identifier	unsignedCharacter		306810	1					
ANR	306828	CFGEntryNode	ENTRY		306810		True				
ANR	306829	CFGExitNode	EXIT		306810		True				
ANR	306830	Symbol	unsignedCharacter		306810						
ANR	306831	Function	printDoubleLine	82:0:1469:1551							
ANR	306832	FunctionDef	printDoubleLine (double doubleNumber)		306831	0					
ANR	306833	CompoundStatement		83:0:1513:1551	306831	0					
ANR	306834	ExpressionStatement	"printf ( ""%g\\n"" , doubleNumber )"	84:4:1520:1548	306831	0	True				
ANR	306835	CallExpression	"printf ( ""%g\\n"" , doubleNumber )"		306831	0					
ANR	306836	Callee	printf		306831	0					
ANR	306837	Identifier	printf		306831	0					
ANR	306838	ArgumentList	"""%g\\n"""		306831	1					
ANR	306839	Argument	"""%g\\n"""		306831	0					
ANR	306840	PrimaryExpression	"""%g\\n"""		306831	0					
ANR	306841	Argument	doubleNumber		306831	1					
ANR	306842	Identifier	doubleNumber		306831	0					
ANR	306843	ReturnType	void		306831	1					
ANR	306844	Identifier	printDoubleLine		306831	2					
ANR	306845	ParameterList	double doubleNumber		306831	3					
ANR	306846	Parameter	double doubleNumber	82:21:1490:1508	306831	0	True				
ANR	306847	ParameterType	double		306831	0					
ANR	306848	Identifier	doubleNumber		306831	1					
ANR	306849	CFGEntryNode	ENTRY		306831		True				
ANR	306850	CFGExitNode	EXIT		306831		True				
ANR	306851	Symbol	doubleNumber		306831						
ANR	306852	Function	printStructLine	87:0:1556:1710							
ANR	306853	FunctionDef	printStructLine (const twoIntsStruct * structTwoIntsStruct)		306852	0					
ANR	306854	CompoundStatement		88:0:1622:1710	306852	0					
ANR	306855	ExpressionStatement	"printf ( ""%d -- %d\\n"" , structTwoIntsStruct -> intOne , structTwoIntsStruct -> intTwo )"	89:4:1629:1707	306852	0	True				
ANR	306856	CallExpression	"printf ( ""%d -- %d\\n"" , structTwoIntsStruct -> intOne , structTwoIntsStruct -> intTwo )"		306852	0					
ANR	306857	Callee	printf		306852	0					
ANR	306858	Identifier	printf		306852	0					
ANR	306859	ArgumentList	"""%d -- %d\\n"""		306852	1					
ANR	306860	Argument	"""%d -- %d\\n"""		306852	0					
ANR	306861	PrimaryExpression	"""%d -- %d\\n"""		306852	0					
ANR	306862	Argument	structTwoIntsStruct -> intOne		306852	1					
ANR	306863	PtrMemberAccess	structTwoIntsStruct -> intOne		306852	0					
ANR	306864	Identifier	structTwoIntsStruct		306852	0					
ANR	306865	Identifier	intOne		306852	1					
ANR	306866	Argument	structTwoIntsStruct -> intTwo		306852	2					
ANR	306867	PtrMemberAccess	structTwoIntsStruct -> intTwo		306852	0					
ANR	306868	Identifier	structTwoIntsStruct		306852	0					
ANR	306869	Identifier	intTwo		306852	1					
ANR	306870	ReturnType	void		306852	1					
ANR	306871	Identifier	printStructLine		306852	2					
ANR	306872	ParameterList	const twoIntsStruct * structTwoIntsStruct		306852	3					
ANR	306873	Parameter	const twoIntsStruct * structTwoIntsStruct	87:22:1578:1618	306852	0	True				
ANR	306874	ParameterType	const twoIntsStruct *		306852	0					
ANR	306875	Identifier	structTwoIntsStruct		306852	1					
ANR	306876	CFGEntryNode	ENTRY		306852		True				
ANR	306877	CFGExitNode	EXIT		306852		True				
ANR	306878	Symbol	structTwoIntsStruct		306852						
ANR	306879	Symbol	structTwoIntsStruct -> intTwo		306852						
ANR	306880	Symbol	* structTwoIntsStruct		306852						
ANR	306881	Symbol	structTwoIntsStruct -> intOne		306852						
ANR	306882	Function	printBytesLine	92:0:1715:1921							
ANR	306883	FunctionDef	"printBytesLine (const unsigned char * bytes , size_t numBytes)"		306882	0					
ANR	306884	CompoundStatement		93:0:1782:1921	306882	0					
ANR	306885	IdentifierDeclStatement	size_t i ;	94:4:1789:1797	306882	0	True				
ANR	306886	IdentifierDecl	i		306882	0					
ANR	306887	IdentifierDeclType	size_t		306882	0					
ANR	306888	Identifier	i		306882	1					
ANR	306889	ForStatement	for ( i = 0 ; i < numBytes ; ++ i )		306882	1					
ANR	306890	ForInit	i = 0 ;	95:9:1809:1814	306882	0	True				
ANR	306891	AssignmentExpression	i = 0		306882	0		=			
ANR	306892	Identifier	i		306882	0					
ANR	306893	PrimaryExpression	0		306882	1					
ANR	306894	Condition	i < numBytes	95:16:1816:1827	306882	1	True				
ANR	306895	RelationalExpression	i < numBytes		306882	0		<			
ANR	306896	Identifier	i		306882	0					
ANR	306897	Identifier	numBytes		306882	1					
ANR	306898	UnaryExpression	++ i	95:30:1830:1832	306882	2	True				
ANR	306899	IncDec	++		306882	0					
ANR	306900	Identifier	i		306882	1					
ANR	306901	CompoundStatement		4:4:57:57	306882	3					
ANR	306902	ExpressionStatement	"printf ( ""%02x"" , bytes [ i ] )"	97:8:1851:1875	306882	0	True				
ANR	306903	CallExpression	"printf ( ""%02x"" , bytes [ i ] )"		306882	0					
ANR	306904	Callee	printf		306882	0					
ANR	306905	Identifier	printf		306882	0					
ANR	306906	ArgumentList	"""%02x"""		306882	1					
ANR	306907	Argument	"""%02x"""		306882	0					
ANR	306908	PrimaryExpression	"""%02x"""		306882	0					
ANR	306909	Argument	bytes [ i ]		306882	1					
ANR	306910	ArrayIndexing	bytes [ i ]		306882	0					
ANR	306911	Identifier	bytes		306882	0					
ANR	306912	Identifier	i		306882	1					
ANR	306913	ExpressionStatement	"puts ( """" )"	99:4:1889:1897	306882	2	True				
ANR	306914	CallExpression	"puts ( """" )"		306882	0					
ANR	306915	Callee	puts		306882	0					
ANR	306916	Identifier	puts		306882	0					
ANR	306917	ArgumentList	""""""		306882	1					
ANR	306918	Argument	""""""		306882	0					
ANR	306919	PrimaryExpression	""""""		306882	0					
ANR	306920	ReturnType	void		306882	1					
ANR	306921	Identifier	printBytesLine		306882	2					
ANR	306922	ParameterList	"const unsigned char * bytes , size_t numBytes"		306882	3					
ANR	306923	Parameter	const unsigned char * bytes	92:20:1735:1761	306882	0	True				
ANR	306924	ParameterType	const unsigned char *		306882	0					
ANR	306925	Identifier	bytes		306882	1					
ANR	306926	Parameter	size_t numBytes	92:49:1764:1778	306882	1	True				
ANR	306927	ParameterType	size_t		306882	0					
ANR	306928	Identifier	numBytes		306882	1					
ANR	306929	CFGEntryNode	ENTRY		306882		True				
ANR	306930	CFGExitNode	EXIT		306882		True				
ANR	306931	Symbol	numBytes		306882						
ANR	306932	Symbol	* i		306882						
ANR	306933	Symbol	bytes		306882						
ANR	306934	Symbol	i		306882						
ANR	306935	Symbol	* bytes		306882						
ANR	306936	Function	decodeHexChars	105:0:2143:2882							
ANR	306937	FunctionDef	"decodeHexChars (unsigned char * bytes , size_t numBytes , const char * hex)"		306936	0					
ANR	306938	CompoundStatement		106:0:2224:2882	306936	0					
ANR	306939	IdentifierDeclStatement	size_t numWritten = 0 ;	107:4:2231:2252	306936	0	True				
ANR	306940	IdentifierDecl	numWritten = 0		306936	0					
ANR	306941	IdentifierDeclType	size_t		306936	0					
ANR	306942	Identifier	numWritten		306936	1					
ANR	306943	AssignmentExpression	numWritten = 0		306936	2		=			
ANR	306944	Identifier	numWritten		306936	0					
ANR	306945	PrimaryExpression	0		306936	1					
ANR	306946	WhileStatement	while ( numWritten < numBytes && isxdigit ( hex [ 2 * numWritten ] ) && isxdigit ( hex [ 2 * numWritten + 1 ] ) )		306936	1					
ANR	306947	Condition	numWritten < numBytes && isxdigit ( hex [ 2 * numWritten ] ) && isxdigit ( hex [ 2 * numWritten + 1 ] )	113:11:2601:2691	306936	0	True				
ANR	306948	AndExpression	numWritten < numBytes && isxdigit ( hex [ 2 * numWritten ] ) && isxdigit ( hex [ 2 * numWritten + 1 ] )		306936	0		&&			
ANR	306949	RelationalExpression	numWritten < numBytes		306936	0		<			
ANR	306950	Identifier	numWritten		306936	0					
ANR	306951	Identifier	numBytes		306936	1					
ANR	306952	AndExpression	isxdigit ( hex [ 2 * numWritten ] ) && isxdigit ( hex [ 2 * numWritten + 1 ] )		306936	1		&&			
ANR	306953	CallExpression	isxdigit ( hex [ 2 * numWritten ] )		306936	0					
ANR	306954	Callee	isxdigit		306936	0					
ANR	306955	Identifier	isxdigit		306936	0					
ANR	306956	ArgumentList	hex [ 2 * numWritten ]		306936	1					
ANR	306957	Argument	hex [ 2 * numWritten ]		306936	0					
ANR	306958	ArrayIndexing	hex [ 2 * numWritten ]		306936	0					
ANR	306959	Identifier	hex		306936	0					
ANR	306960	MultiplicativeExpression	2 * numWritten		306936	1		*			
ANR	306961	PrimaryExpression	2		306936	0					
ANR	306962	Identifier	numWritten		306936	1					
ANR	306963	CallExpression	isxdigit ( hex [ 2 * numWritten + 1 ] )		306936	1					
ANR	306964	Callee	isxdigit		306936	0					
ANR	306965	Identifier	isxdigit		306936	0					
ANR	306966	ArgumentList	hex [ 2 * numWritten + 1 ]		306936	1					
ANR	306967	Argument	hex [ 2 * numWritten + 1 ]		306936	0					
ANR	306968	ArrayIndexing	hex [ 2 * numWritten + 1 ]		306936	0					
ANR	306969	Identifier	hex		306936	0					
ANR	306970	AdditiveExpression	2 * numWritten + 1		306936	1		+			
ANR	306971	MultiplicativeExpression	2 * numWritten		306936	0		*			
ANR	306972	PrimaryExpression	2		306936	0					
ANR	306973	Identifier	numWritten		306936	1					
ANR	306974	PrimaryExpression	1		306936	1					
ANR	306975	CompoundStatement		10:8:485:493	306936	1					
ANR	306976	IdentifierDeclStatement	int byte ;	115:8:2710:2718	306936	0	True				
ANR	306977	IdentifierDecl	byte		306936	0					
ANR	306978	IdentifierDeclType	int		306936	0					
ANR	306979	Identifier	byte		306936	1					
ANR	306980	ExpressionStatement	"sscanf ( & hex [ 2 * numWritten ] , ""%02x"" , & byte )"	116:8:2729:2772	306936	1	True				
ANR	306981	CallExpression	"sscanf ( & hex [ 2 * numWritten ] , ""%02x"" , & byte )"		306936	0					
ANR	306982	Callee	sscanf		306936	0					
ANR	306983	Identifier	sscanf		306936	0					
ANR	306984	ArgumentList	& hex [ 2 * numWritten ]		306936	1					
ANR	306985	Argument	& hex [ 2 * numWritten ]		306936	0					
ANR	306986	UnaryOperationExpression	& hex [ 2 * numWritten ]		306936	0					
ANR	306987	UnaryOperator	&		306936	0					
ANR	306988	ArrayIndexing	hex [ 2 * numWritten ]		306936	1					
ANR	306989	Identifier	hex		306936	0					
ANR	306990	MultiplicativeExpression	2 * numWritten		306936	1		*			
ANR	306991	PrimaryExpression	2		306936	0					
ANR	306992	Identifier	numWritten		306936	1					
ANR	306993	Argument	"""%02x"""		306936	1					
ANR	306994	PrimaryExpression	"""%02x"""		306936	0					
ANR	306995	Argument	& byte		306936	2					
ANR	306996	UnaryOperationExpression	& byte		306936	0					
ANR	306997	UnaryOperator	&		306936	0					
ANR	306998	Identifier	byte		306936	1					
ANR	306999	ExpressionStatement	bytes [ numWritten ] = ( unsigned char ) byte	117:8:2783:2823	306936	2	True				
ANR	307000	AssignmentExpression	bytes [ numWritten ] = ( unsigned char ) byte		306936	0		=			
ANR	307001	ArrayIndexing	bytes [ numWritten ]		306936	0					
ANR	307002	Identifier	bytes		306936	0					
ANR	307003	Identifier	numWritten		306936	1					
ANR	307004	CastExpression	( unsigned char ) byte		306936	1					
ANR	307005	CastTarget	unsigned char		306936	0					
ANR	307006	Identifier	byte		306936	1					
ANR	307007	ExpressionStatement	++ numWritten	118:8:2834:2846	306936	3	True				
ANR	307008	UnaryExpression	++ numWritten		306936	0					
ANR	307009	IncDec	++		306936	0					
ANR	307010	Identifier	numWritten		306936	1					
ANR	307011	ReturnStatement	return numWritten ;	121:4:2862:2879	306936	2	True				
ANR	307012	Identifier	numWritten		306936	0					
ANR	307013	ReturnType	size_t		306936	1					
ANR	307014	Identifier	decodeHexChars		306936	2					
ANR	307015	ParameterList	"unsigned char * bytes , size_t numBytes , const char * hex"		306936	3					
ANR	307016	Parameter	unsigned char * bytes	105:22:2165:2185	306936	0	True				
ANR	307017	ParameterType	unsigned char *		306936	0					
ANR	307018	Identifier	bytes		306936	1					
ANR	307019	Parameter	size_t numBytes	105:45:2188:2202	306936	1	True				
ANR	307020	ParameterType	size_t		306936	0					
ANR	307021	Identifier	numBytes		306936	1					
ANR	307022	Parameter	const char * hex	105:62:2205:2220	306936	2	True				
ANR	307023	ParameterType	const char *		306936	0					
ANR	307024	Identifier	hex		306936	1					
ANR	307025	CFGEntryNode	ENTRY		306936		True				
ANR	307026	CFGExitNode	EXIT		306936		True				
ANR	307027	Symbol	numBytes		306936						
ANR	307028	Symbol	* numWritten		306936						
ANR	307029	Symbol	bytes		306936						
ANR	307030	Symbol	byte		306936						
ANR	307031	Symbol	hex		306936						
ANR	307032	Symbol	* hex		306936						
ANR	307033	Symbol	numWritten		306936						
ANR	307034	Symbol	& byte		306936						
ANR	307035	Symbol	* bytes		306936						
ANR	307036	Symbol	isxdigit		306936						
ANR	307037	Function	decodeHexWChars	127:1:3105:3855							
ANR	307038	FunctionDef	"decodeHexWChars (unsigned char * bytes , size_t numBytes , const wchar_t * hex)"		307037	0					
ANR	307039	CompoundStatement		128:1:3191:3855	307037	0					
ANR	307040	IdentifierDeclStatement	size_t numWritten = 0 ;	129:4:3198:3219	307037	0	True				
ANR	307041	IdentifierDecl	numWritten = 0		307037	0					
ANR	307042	IdentifierDeclType	size_t		307037	0					
ANR	307043	Identifier	numWritten		307037	1					
ANR	307044	AssignmentExpression	numWritten = 0		307037	2		=			
ANR	307045	Identifier	numWritten		307037	0					
ANR	307046	PrimaryExpression	0		307037	1					
ANR	307047	WhileStatement	while ( numWritten < numBytes && iswxdigit ( hex [ 2 * numWritten ] ) && iswxdigit ( hex [ 2 * numWritten + 1 ] ) )		307037	1					
ANR	307048	Condition	numWritten < numBytes && iswxdigit ( hex [ 2 * numWritten ] ) && iswxdigit ( hex [ 2 * numWritten + 1 ] )	135:11:3570:3662	307037	0	True				
ANR	307049	AndExpression	numWritten < numBytes && iswxdigit ( hex [ 2 * numWritten ] ) && iswxdigit ( hex [ 2 * numWritten + 1 ] )		307037	0		&&			
ANR	307050	RelationalExpression	numWritten < numBytes		307037	0		<			
ANR	307051	Identifier	numWritten		307037	0					
ANR	307052	Identifier	numBytes		307037	1					
ANR	307053	AndExpression	iswxdigit ( hex [ 2 * numWritten ] ) && iswxdigit ( hex [ 2 * numWritten + 1 ] )		307037	1		&&			
ANR	307054	CallExpression	iswxdigit ( hex [ 2 * numWritten ] )		307037	0					
ANR	307055	Callee	iswxdigit		307037	0					
ANR	307056	Identifier	iswxdigit		307037	0					
ANR	307057	ArgumentList	hex [ 2 * numWritten ]		307037	1					
ANR	307058	Argument	hex [ 2 * numWritten ]		307037	0					
ANR	307059	ArrayIndexing	hex [ 2 * numWritten ]		307037	0					
ANR	307060	Identifier	hex		307037	0					
ANR	307061	MultiplicativeExpression	2 * numWritten		307037	1		*			
ANR	307062	PrimaryExpression	2		307037	0					
ANR	307063	Identifier	numWritten		307037	1					
ANR	307064	CallExpression	iswxdigit ( hex [ 2 * numWritten + 1 ] )		307037	1					
ANR	307065	Callee	iswxdigit		307037	0					
ANR	307066	Identifier	iswxdigit		307037	0					
ANR	307067	ArgumentList	hex [ 2 * numWritten + 1 ]		307037	1					
ANR	307068	Argument	hex [ 2 * numWritten + 1 ]		307037	0					
ANR	307069	ArrayIndexing	hex [ 2 * numWritten + 1 ]		307037	0					
ANR	307070	Identifier	hex		307037	0					
ANR	307071	AdditiveExpression	2 * numWritten + 1		307037	1		+			
ANR	307072	MultiplicativeExpression	2 * numWritten		307037	0		*			
ANR	307073	PrimaryExpression	2		307037	0					
ANR	307074	Identifier	numWritten		307037	1					
ANR	307075	PrimaryExpression	1		307037	1					
ANR	307076	CompoundStatement		10:8:489:497	307037	1					
ANR	307077	IdentifierDeclStatement	int byte ;	137:8:3681:3689	307037	0	True				
ANR	307078	IdentifierDecl	byte		307037	0					
ANR	307079	IdentifierDeclType	int		307037	0					
ANR	307080	Identifier	byte		307037	1					
ANR	307081	Statement	swscanf	138:8:3700:3706	307037	1	True				
ANR	307082	Statement	(	138:15:3707:3707	307037	2	True				
ANR	307083	Statement	&	138:16:3708:3708	307037	3	True				
ANR	307084	Statement	hex	138:17:3709:3711	307037	4	True				
ANR	307085	Statement	[	138:20:3712:3712	307037	5	True				
ANR	307086	Statement	2	138:21:3713:3713	307037	6	True				
ANR	307087	Statement	*	138:23:3715:3715	307037	7	True				
ANR	307088	Statement	numWritten	138:25:3717:3726	307037	8	True				
ANR	307089	Statement	]	138:35:3727:3727	307037	9	True				
ANR	307090	Statement	","	138:36:3728:3728	307037	10	True				
ANR	307091	Statement	L	138:38:3730:3730	307037	11	True				
ANR	307092	Statement	"""%02x"""	138:39:3731:3736	307037	12	True				
ANR	307093	Statement	","	138:45:3737:3737	307037	13	True				
ANR	307094	Statement	&	138:47:3739:3739	307037	14	True				
ANR	307095	Statement	byte	138:48:3740:3743	307037	15	True				
ANR	307096	Statement	)	138:52:3744:3744	307037	16	True				
ANR	307097	ExpressionStatement		138:53:3745:3745	307037	17	True				
ANR	307098	ExpressionStatement	bytes [ numWritten ] = ( unsigned char ) byte	139:8:3756:3796	307037	18	True				
ANR	307099	AssignmentExpression	bytes [ numWritten ] = ( unsigned char ) byte		307037	0		=			
ANR	307100	ArrayIndexing	bytes [ numWritten ]		307037	0					
ANR	307101	Identifier	bytes		307037	0					
ANR	307102	Identifier	numWritten		307037	1					
ANR	307103	CastExpression	( unsigned char ) byte		307037	1					
ANR	307104	CastTarget	unsigned char		307037	0					
ANR	307105	Identifier	byte		307037	1					
ANR	307106	ExpressionStatement	++ numWritten	140:8:3807:3819	307037	19	True				
ANR	307107	UnaryExpression	++ numWritten		307037	0					
ANR	307108	IncDec	++		307037	0					
ANR	307109	Identifier	numWritten		307037	1					
ANR	307110	ReturnStatement	return numWritten ;	143:4:3835:3852	307037	2	True				
ANR	307111	Identifier	numWritten		307037	0					
ANR	307112	ReturnType	size_t		307037	1					
ANR	307113	Identifier	decodeHexWChars		307037	2					
ANR	307114	ParameterList	"unsigned char * bytes , size_t numBytes , const wchar_t * hex"		307037	3					
ANR	307115	Parameter	unsigned char * bytes	127:24:3128:3148	307037	0	True				
ANR	307116	ParameterType	unsigned char *		307037	0					
ANR	307117	Identifier	bytes		307037	1					
ANR	307118	Parameter	size_t numBytes	127:47:3151:3165	307037	1	True				
ANR	307119	ParameterType	size_t		307037	0					
ANR	307120	Identifier	numBytes		307037	1					
ANR	307121	Parameter	const wchar_t * hex	127:64:3168:3186	307037	2	True				
ANR	307122	ParameterType	const wchar_t *		307037	0					
ANR	307123	Identifier	hex		307037	1					
ANR	307124	CFGEntryNode	ENTRY		307037		True				
ANR	307125	CFGExitNode	EXIT		307037		True				
ANR	307126	Symbol	numBytes		307037						
ANR	307127	Symbol	* numWritten		307037						
ANR	307128	Symbol	iswxdigit		307037						
ANR	307129	Symbol	bytes		307037						
ANR	307130	Symbol	byte		307037						
ANR	307131	Symbol	hex		307037						
ANR	307132	Symbol	* hex		307037						
ANR	307133	Symbol	numWritten		307037						
ANR	307134	Symbol	* bytes		307037						
ANR	307135	Function	globalReturnsTrue	148:0:4010:4054							
ANR	307136	FunctionDef	globalReturnsTrue ()		307135	0					
ANR	307137	CompoundStatement		149:0:4036:4054	307135	0					
ANR	307138	ReturnStatement	return 1 ;	150:4:4043:4051	307135	0	True				
ANR	307139	PrimaryExpression	1		307135	0					
ANR	307140	ReturnType	int		307135	1					
ANR	307141	Identifier	globalReturnsTrue		307135	2					
ANR	307142	ParameterList			307135	3					
ANR	307143	CFGEntryNode	ENTRY		307135		True				
ANR	307144	CFGExitNode	EXIT		307135		True				
ANR	307145	Function	globalReturnsFalse	153:0:4059:4104							
ANR	307146	FunctionDef	globalReturnsFalse ()		307145	0					
ANR	307147	CompoundStatement		154:0:4086:4104	307145	0					
ANR	307148	ReturnStatement	return 0 ;	155:4:4093:4101	307145	0	True				
ANR	307149	PrimaryExpression	0		307145	0					
ANR	307150	ReturnType	int		307145	1					
ANR	307151	Identifier	globalReturnsFalse		307145	2					
ANR	307152	ParameterList			307145	3					
ANR	307153	CFGEntryNode	ENTRY		307145		True				
ANR	307154	CFGExitNode	EXIT		307145		True				
ANR	307155	Function	globalReturnsTrueOrFalse	158:0:4109:4171							
ANR	307156	FunctionDef	globalReturnsTrueOrFalse ()		307155	0					
ANR	307157	CompoundStatement		159:0:4142:4171	307155	0					
ANR	307158	ReturnStatement	return ( rand ( ) % 2 ) ;	160:4:4149:4168	307155	0	True				
ANR	307159	MultiplicativeExpression	rand ( ) % 2		307155	0		%			
ANR	307160	CallExpression	rand ( )		307155	0					
ANR	307161	Callee	rand		307155	0					
ANR	307162	Identifier	rand		307155	0					
ANR	307163	ArgumentList			307155	1					
ANR	307164	PrimaryExpression	2		307155	1					
ANR	307165	ReturnType	int		307155	1					
ANR	307166	Identifier	globalReturnsTrueOrFalse		307155	2					
ANR	307167	ParameterList			307155	3					
ANR	307168	CFGEntryNode	ENTRY		307155		True				
ANR	307169	CFGExitNode	EXIT		307155		True				
ANR	307170	Symbol	rand		307155						
ANR	307171	DeclStmt									
ANR	307172	Decl							const int	const int	GLOBAL_CONST_TRUE
ANR	307173	DeclStmt									
ANR	307174	Decl							const int	const int	GLOBAL_CONST_FALSE
ANR	307175	DeclStmt									
ANR	307176	Decl							const int	const int	GLOBAL_CONST_FIVE
ANR	307177	DeclStmt									
ANR	307178	Decl							int	int	globalTrue
ANR	307179	DeclStmt									
ANR	307180	Decl							int	int	globalFalse
ANR	307181	DeclStmt									
ANR	307182	Decl							int	int	globalFive
ANR	307183	Function	good1	179:0:4905:4920							
ANR	307184	FunctionDef	good1 ()		307183	0					
ANR	307185	CompoundStatement		179:13:4918:4920	307183	0					
ANR	307186	ReturnType	void		307183	1					
ANR	307187	Identifier	good1		307183	2					
ANR	307188	ParameterList			307183	3					
ANR	307189	CFGEntryNode	ENTRY		307183		True				
ANR	307190	CFGExitNode	EXIT		307183		True				
ANR	307191	Function	good2	180:0:4923:4938							
ANR	307192	FunctionDef	good2 ()		307191	0					
ANR	307193	CompoundStatement		180:13:4936:4938	307191	0					
ANR	307194	ReturnType	void		307191	1					
ANR	307195	Identifier	good2		307191	2					
ANR	307196	ParameterList			307191	3					
ANR	307197	CFGEntryNode	ENTRY		307191		True				
ANR	307198	CFGExitNode	EXIT		307191		True				
ANR	307199	Function	good3	181:0:4941:4956							
ANR	307200	FunctionDef	good3 ()		307199	0					
ANR	307201	CompoundStatement		181:13:4954:4956	307199	0					
ANR	307202	ReturnType	void		307199	1					
ANR	307203	Identifier	good3		307199	2					
ANR	307204	ParameterList			307199	3					
ANR	307205	CFGEntryNode	ENTRY		307199		True				
ANR	307206	CFGExitNode	EXIT		307199		True				
ANR	307207	Function	good4	182:0:4959:4974							
ANR	307208	FunctionDef	good4 ()		307207	0					
ANR	307209	CompoundStatement		182:13:4972:4974	307207	0					
ANR	307210	ReturnType	void		307207	1					
ANR	307211	Identifier	good4		307207	2					
ANR	307212	ParameterList			307207	3					
ANR	307213	CFGEntryNode	ENTRY		307207		True				
ANR	307214	CFGExitNode	EXIT		307207		True				
ANR	307215	Function	good5	183:0:4977:4992							
ANR	307216	FunctionDef	good5 ()		307215	0					
ANR	307217	CompoundStatement		183:13:4990:4992	307215	0					
ANR	307218	ReturnType	void		307215	1					
ANR	307219	Identifier	good5		307215	2					
ANR	307220	ParameterList			307215	3					
ANR	307221	CFGEntryNode	ENTRY		307215		True				
ANR	307222	CFGExitNode	EXIT		307215		True				
ANR	307223	Function	good6	184:0:4995:5010							
ANR	307224	FunctionDef	good6 ()		307223	0					
ANR	307225	CompoundStatement		184:13:5008:5010	307223	0					
ANR	307226	ReturnType	void		307223	1					
ANR	307227	Identifier	good6		307223	2					
ANR	307228	ParameterList			307223	3					
ANR	307229	CFGEntryNode	ENTRY		307223		True				
ANR	307230	CFGExitNode	EXIT		307223		True				
ANR	307231	Function	good7	185:0:5013:5028							
ANR	307232	FunctionDef	good7 ()		307231	0					
ANR	307233	CompoundStatement		185:13:5026:5028	307231	0					
ANR	307234	ReturnType	void		307231	1					
ANR	307235	Identifier	good7		307231	2					
ANR	307236	ParameterList			307231	3					
ANR	307237	CFGEntryNode	ENTRY		307231		True				
ANR	307238	CFGExitNode	EXIT		307231		True				
ANR	307239	Function	good8	186:0:5031:5046							
ANR	307240	FunctionDef	good8 ()		307239	0					
ANR	307241	CompoundStatement		186:13:5044:5046	307239	0					
ANR	307242	ReturnType	void		307239	1					
ANR	307243	Identifier	good8		307239	2					
ANR	307244	ParameterList			307239	3					
ANR	307245	CFGEntryNode	ENTRY		307239		True				
ANR	307246	CFGExitNode	EXIT		307239		True				
ANR	307247	Function	good9	187:0:5049:5064							
ANR	307248	FunctionDef	good9 ()		307247	0					
ANR	307249	CompoundStatement		187:13:5062:5064	307247	0					
ANR	307250	ReturnType	void		307247	1					
ANR	307251	Identifier	good9		307247	2					
ANR	307252	ParameterList			307247	3					
ANR	307253	CFGEntryNode	ENTRY		307247		True				
ANR	307254	CFGExitNode	EXIT		307247		True				
ANR	307255	Function	bad1	190:0:5112:5126							
ANR	307256	FunctionDef	bad1 ()		307255	0					
ANR	307257	CompoundStatement		190:12:5124:5126	307255	0					
ANR	307258	ReturnType	void		307255	1					
ANR	307259	Identifier	bad1		307255	2					
ANR	307260	ParameterList			307255	3					
ANR	307261	CFGEntryNode	ENTRY		307255		True				
ANR	307262	CFGExitNode	EXIT		307255		True				
ANR	307263	Function	bad2	191:0:5129:5143							
ANR	307264	FunctionDef	bad2 ()		307263	0					
ANR	307265	CompoundStatement		191:12:5141:5143	307263	0					
ANR	307266	ReturnType	void		307263	1					
ANR	307267	Identifier	bad2		307263	2					
ANR	307268	ParameterList			307263	3					
ANR	307269	CFGEntryNode	ENTRY		307263		True				
ANR	307270	CFGExitNode	EXIT		307263		True				
ANR	307271	Function	bad3	192:0:5146:5160							
ANR	307272	FunctionDef	bad3 ()		307271	0					
ANR	307273	CompoundStatement		192:12:5158:5160	307271	0					
ANR	307274	ReturnType	void		307271	1					
ANR	307275	Identifier	bad3		307271	2					
ANR	307276	ParameterList			307271	3					
ANR	307277	CFGEntryNode	ENTRY		307271		True				
ANR	307278	CFGExitNode	EXIT		307271		True				
ANR	307279	Function	bad4	193:0:5163:5177							
ANR	307280	FunctionDef	bad4 ()		307279	0					
ANR	307281	CompoundStatement		193:12:5175:5177	307279	0					
ANR	307282	ReturnType	void		307279	1					
ANR	307283	Identifier	bad4		307279	2					
ANR	307284	ParameterList			307279	3					
ANR	307285	CFGEntryNode	ENTRY		307279		True				
ANR	307286	CFGExitNode	EXIT		307279		True				
ANR	307287	Function	bad5	194:0:5180:5194							
ANR	307288	FunctionDef	bad5 ()		307287	0					
ANR	307289	CompoundStatement		194:12:5192:5194	307287	0					
ANR	307290	ReturnType	void		307287	1					
ANR	307291	Identifier	bad5		307287	2					
ANR	307292	ParameterList			307287	3					
ANR	307293	CFGEntryNode	ENTRY		307287		True				
ANR	307294	CFGExitNode	EXIT		307287		True				
ANR	307295	Function	bad6	195:0:5197:5211							
ANR	307296	FunctionDef	bad6 ()		307295	0					
ANR	307297	CompoundStatement		195:12:5209:5211	307295	0					
ANR	307298	ReturnType	void		307295	1					
ANR	307299	Identifier	bad6		307295	2					
ANR	307300	ParameterList			307295	3					
ANR	307301	CFGEntryNode	ENTRY		307295		True				
ANR	307302	CFGExitNode	EXIT		307295		True				
ANR	307303	Function	bad7	196:0:5214:5228							
ANR	307304	FunctionDef	bad7 ()		307303	0					
ANR	307305	CompoundStatement		196:12:5226:5228	307303	0					
ANR	307306	ReturnType	void		307303	1					
ANR	307307	Identifier	bad7		307303	2					
ANR	307308	ParameterList			307303	3					
ANR	307309	CFGEntryNode	ENTRY		307303		True				
ANR	307310	CFGExitNode	EXIT		307303		True				
ANR	307311	Function	bad8	197:0:5231:5245							
ANR	307312	FunctionDef	bad8 ()		307311	0					
ANR	307313	CompoundStatement		197:12:5243:5245	307311	0					
ANR	307314	ReturnType	void		307311	1					
ANR	307315	Identifier	bad8		307311	2					
ANR	307316	ParameterList			307311	3					
ANR	307317	CFGEntryNode	ENTRY		307311		True				
ANR	307318	CFGExitNode	EXIT		307311		True				
ANR	307319	Function	bad9	198:0:5248:5262							
ANR	307320	FunctionDef	bad9 ()		307319	0					
ANR	307321	CompoundStatement		198:12:5260:5262	307319	0					
ANR	307322	ReturnType	void		307319	1					
ANR	307323	Identifier	bad9		307319	2					
ANR	307324	ParameterList			307319	3					
ANR	307325	CFGEntryNode	ENTRY		307319		True				
ANR	307326	CFGExitNode	EXIT		307319		True				
ANR	307327	DeclStmt									
ANR	307328	Decl							int	int	globalArgc
ANR	307329	DeclStmt									
ANR	307330	Decl							char	char * *	globalArgv
