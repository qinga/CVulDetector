command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	350967	File	/develop/joernDwkProcess/joern-dev/./output/data/CWE119/source-code/119-1500-c/testcases/shared/108/io.c								
ANR	350968	Function	printLine	11:0:174:281							
ANR	350969	FunctionDef	printLine (const char * line)		350968	0					
ANR	350970	CompoundStatement		12:0:210:281	350968	0					
ANR	350971	IfStatement	if ( line != NULL )		350968	0					
ANR	350972	Condition	line != NULL	13:7:220:231	350968	0	True				
ANR	350973	EqualityExpression	line != NULL		350968	0		!=			
ANR	350974	Identifier	line		350968	0					
ANR	350975	Identifier	NULL		350968	1					
ANR	350976	CompoundStatement		3:4:29:29	350968	1					
ANR	350977	ExpressionStatement	"printf ( ""%s\\n"" , line )"	15:8:251:271	350968	0	True				
ANR	350978	CallExpression	"printf ( ""%s\\n"" , line )"		350968	0					
ANR	350979	Callee	printf		350968	0					
ANR	350980	Identifier	printf		350968	0					
ANR	350981	ArgumentList	"""%s\\n"""		350968	1					
ANR	350982	Argument	"""%s\\n"""		350968	0					
ANR	350983	PrimaryExpression	"""%s\\n"""		350968	0					
ANR	350984	Argument	line		350968	1					
ANR	350985	Identifier	line		350968	0					
ANR	350986	ReturnType	void		350968	1					
ANR	350987	Identifier	printLine		350968	2					
ANR	350988	ParameterList	const char * line		350968	3					
ANR	350989	Parameter	const char * line	11:16:190:206	350968	0	True				
ANR	350990	ParameterType	const char *		350968	0					
ANR	350991	Identifier	line		350968	1					
ANR	350992	CFGEntryNode	ENTRY		350968		True				
ANR	350993	CFGExitNode	EXIT		350968		True				
ANR	350994	Symbol	NULL		350968						
ANR	350995	Symbol	line		350968						
ANR	350996	Function	printWLine	19:0:286:400							
ANR	350997	FunctionDef	printWLine (const wchar_t * line)		350996	0					
ANR	350998	CompoundStatement		20:0:326:400	350996	0					
ANR	350999	IfStatement	if ( line != NULL )		350996	0					
ANR	351000	Condition	line != NULL	21:7:336:347	350996	0	True				
ANR	351001	EqualityExpression	line != NULL		350996	0		!=			
ANR	351002	Identifier	line		350996	0					
ANR	351003	Identifier	NULL		350996	1					
ANR	351004	CompoundStatement		3:4:29:29	350996	1					
ANR	351005	Statement	wprintf	23:8:367:373	350996	0	True				
ANR	351006	Statement	(	23:15:374:374	350996	1	True				
ANR	351007	Statement	L	23:16:375:375	350996	2	True				
ANR	351008	Statement	"""%ls\\n"""	23:17:376:382	350996	3	True				
ANR	351009	Statement	","	23:24:383:383	350996	4	True				
ANR	351010	Statement	line	23:26:385:388	350996	5	True				
ANR	351011	Statement	)	23:30:389:389	350996	6	True				
ANR	351012	ExpressionStatement		23:31:390:390	350996	7	True				
ANR	351013	ReturnType	void		350996	1					
ANR	351014	Identifier	printWLine		350996	2					
ANR	351015	ParameterList	const wchar_t * line		350996	3					
ANR	351016	Parameter	const wchar_t * line	19:17:303:322	350996	0	True				
ANR	351017	ParameterType	const wchar_t *		350996	0					
ANR	351018	Identifier	line		350996	1					
ANR	351019	CFGEntryNode	ENTRY		350996		True				
ANR	351020	CFGExitNode	EXIT		350996		True				
ANR	351021	Symbol	NULL		350996						
ANR	351022	Symbol	line		350996						
ANR	351023	Function	printIntLine	27:0:405:475							
ANR	351024	FunctionDef	printIntLine (int intNumber)		351023	0					
ANR	351025	CompoundStatement		28:0:440:475	351023	0					
ANR	351026	ExpressionStatement	"printf ( ""%d\\n"" , intNumber )"	29:4:447:472	351023	0	True				
ANR	351027	CallExpression	"printf ( ""%d\\n"" , intNumber )"		351023	0					
ANR	351028	Callee	printf		351023	0					
ANR	351029	Identifier	printf		351023	0					
ANR	351030	ArgumentList	"""%d\\n"""		351023	1					
ANR	351031	Argument	"""%d\\n"""		351023	0					
ANR	351032	PrimaryExpression	"""%d\\n"""		351023	0					
ANR	351033	Argument	intNumber		351023	1					
ANR	351034	Identifier	intNumber		351023	0					
ANR	351035	ReturnType	void		351023	1					
ANR	351036	Identifier	printIntLine		351023	2					
ANR	351037	ParameterList	int intNumber		351023	3					
ANR	351038	Parameter	int intNumber	27:19:424:436	351023	0	True				
ANR	351039	ParameterType	int		351023	0					
ANR	351040	Identifier	intNumber		351023	1					
ANR	351041	CFGEntryNode	ENTRY		351023		True				
ANR	351042	CFGExitNode	EXIT		351023		True				
ANR	351043	Symbol	intNumber		351023						
ANR	351044	Function	printShortLine	32:0:480:559							
ANR	351045	FunctionDef	printShortLine (short shortNumber)		351044	0					
ANR	351046	CompoundStatement		33:0:521:559	351044	0					
ANR	351047	ExpressionStatement	"printf ( ""%hd\\n"" , shortNumber )"	34:4:528:556	351044	0	True				
ANR	351048	CallExpression	"printf ( ""%hd\\n"" , shortNumber )"		351044	0					
ANR	351049	Callee	printf		351044	0					
ANR	351050	Identifier	printf		351044	0					
ANR	351051	ArgumentList	"""%hd\\n"""		351044	1					
ANR	351052	Argument	"""%hd\\n"""		351044	0					
ANR	351053	PrimaryExpression	"""%hd\\n"""		351044	0					
ANR	351054	Argument	shortNumber		351044	1					
ANR	351055	Identifier	shortNumber		351044	0					
ANR	351056	ReturnType	void		351044	1					
ANR	351057	Identifier	printShortLine		351044	2					
ANR	351058	ParameterList	short shortNumber		351044	3					
ANR	351059	Parameter	short shortNumber	32:21:501:517	351044	0	True				
ANR	351060	ParameterType	short		351044	0					
ANR	351061	Identifier	shortNumber		351044	1					
ANR	351062	CFGEntryNode	ENTRY		351044		True				
ANR	351063	CFGExitNode	EXIT		351044		True				
ANR	351064	Symbol	shortNumber		351044						
ANR	351065	Function	printFloatLine	37:0:564:642							
ANR	351066	FunctionDef	printFloatLine (float floatNumber)		351065	0					
ANR	351067	CompoundStatement		38:0:605:642	351065	0					
ANR	351068	ExpressionStatement	"printf ( ""%f\\n"" , floatNumber )"	39:4:612:639	351065	0	True				
ANR	351069	CallExpression	"printf ( ""%f\\n"" , floatNumber )"		351065	0					
ANR	351070	Callee	printf		351065	0					
ANR	351071	Identifier	printf		351065	0					
ANR	351072	ArgumentList	"""%f\\n"""		351065	1					
ANR	351073	Argument	"""%f\\n"""		351065	0					
ANR	351074	PrimaryExpression	"""%f\\n"""		351065	0					
ANR	351075	Argument	floatNumber		351065	1					
ANR	351076	Identifier	floatNumber		351065	0					
ANR	351077	ReturnType	void		351065	1					
ANR	351078	Identifier	printFloatLine		351065	2					
ANR	351079	ParameterList	float floatNumber		351065	3					
ANR	351080	Parameter	float floatNumber	37:21:585:601	351065	0	True				
ANR	351081	ParameterType	float		351065	0					
ANR	351082	Identifier	floatNumber		351065	1					
ANR	351083	CFGEntryNode	ENTRY		351065		True				
ANR	351084	CFGExitNode	EXIT		351065		True				
ANR	351085	Symbol	floatNumber		351065						
ANR	351086	Function	printLongLine	42:0:647:722							
ANR	351087	FunctionDef	printLongLine (long longNumber)		351086	0					
ANR	351088	CompoundStatement		43:0:685:722	351086	0					
ANR	351089	ExpressionStatement	"printf ( ""%ld\\n"" , longNumber )"	44:4:692:719	351086	0	True				
ANR	351090	CallExpression	"printf ( ""%ld\\n"" , longNumber )"		351086	0					
ANR	351091	Callee	printf		351086	0					
ANR	351092	Identifier	printf		351086	0					
ANR	351093	ArgumentList	"""%ld\\n"""		351086	1					
ANR	351094	Argument	"""%ld\\n"""		351086	0					
ANR	351095	PrimaryExpression	"""%ld\\n"""		351086	0					
ANR	351096	Argument	longNumber		351086	1					
ANR	351097	Identifier	longNumber		351086	0					
ANR	351098	ReturnType	void		351086	1					
ANR	351099	Identifier	printLongLine		351086	2					
ANR	351100	ParameterList	long longNumber		351086	3					
ANR	351101	Parameter	long longNumber	42:20:667:681	351086	0	True				
ANR	351102	ParameterType	long		351086	0					
ANR	351103	Identifier	longNumber		351086	1					
ANR	351104	CFGEntryNode	ENTRY		351086		True				
ANR	351105	CFGExitNode	EXIT		351086		True				
ANR	351106	Symbol	longNumber		351086						
ANR	351107	Function	printLongLongLine	47:0:727:831							
ANR	351108	FunctionDef	printLongLongLine (int64_t longLongIntNumber)		351107	0					
ANR	351109	CompoundStatement		48:0:779:831	351107	0					
ANR	351110	Statement	printf	49:4:786:791	351107	0	True				
ANR	351111	Statement	(	49:10:792:792	351107	1	True				
ANR	351112	Statement	"""%"""	49:11:793:795	351107	2	True				
ANR	351113	Statement	PRId64	49:15:797:802	351107	3	True				
ANR	351114	Statement	"""\\n"""	49:22:804:807	351107	4	True				
ANR	351115	Statement	","	49:26:808:808	351107	5	True				
ANR	351116	Statement	longLongIntNumber	49:28:810:826	351107	6	True				
ANR	351117	Statement	)	49:45:827:827	351107	7	True				
ANR	351118	ExpressionStatement		49:46:828:828	351107	8	True				
ANR	351119	ReturnType	void		351107	1					
ANR	351120	Identifier	printLongLongLine		351107	2					
ANR	351121	ParameterList	int64_t longLongIntNumber		351107	3					
ANR	351122	Parameter	int64_t longLongIntNumber	47:24:751:775	351107	0	True				
ANR	351123	ParameterType	int64_t		351107	0					
ANR	351124	Identifier	longLongIntNumber		351107	1					
ANR	351125	CFGEntryNode	ENTRY		351107		True				
ANR	351126	CFGExitNode	EXIT		351107		True				
ANR	351127	Symbol	longLongIntNumber		351107						
ANR	351128	Function	printSizeTLine	52:0:836:916							
ANR	351129	FunctionDef	printSizeTLine (size_t sizeTNumber)		351128	0					
ANR	351130	CompoundStatement		53:0:878:916	351128	0					
ANR	351131	ExpressionStatement	"printf ( ""%zu\\n"" , sizeTNumber )"	54:4:885:913	351128	0	True				
ANR	351132	CallExpression	"printf ( ""%zu\\n"" , sizeTNumber )"		351128	0					
ANR	351133	Callee	printf		351128	0					
ANR	351134	Identifier	printf		351128	0					
ANR	351135	ArgumentList	"""%zu\\n"""		351128	1					
ANR	351136	Argument	"""%zu\\n"""		351128	0					
ANR	351137	PrimaryExpression	"""%zu\\n"""		351128	0					
ANR	351138	Argument	sizeTNumber		351128	1					
ANR	351139	Identifier	sizeTNumber		351128	0					
ANR	351140	ReturnType	void		351128	1					
ANR	351141	Identifier	printSizeTLine		351128	2					
ANR	351142	ParameterList	size_t sizeTNumber		351128	3					
ANR	351143	Parameter	size_t sizeTNumber	52:21:857:874	351128	0	True				
ANR	351144	ParameterType	size_t		351128	0					
ANR	351145	Identifier	sizeTNumber		351128	1					
ANR	351146	CFGEntryNode	ENTRY		351128		True				
ANR	351147	CFGExitNode	EXIT		351128		True				
ANR	351148	Symbol	sizeTNumber		351128						
ANR	351149	Function	printHexCharLine	57:0:921:994							
ANR	351150	FunctionDef	printHexCharLine (char charHex)		351149	0					
ANR	351151	CompoundStatement		58:0:959:994	351149	0					
ANR	351152	ExpressionStatement	"printf ( ""%02x\\n"" , charHex )"	59:4:966:991	351149	0	True				
ANR	351153	CallExpression	"printf ( ""%02x\\n"" , charHex )"		351149	0					
ANR	351154	Callee	printf		351149	0					
ANR	351155	Identifier	printf		351149	0					
ANR	351156	ArgumentList	"""%02x\\n"""		351149	1					
ANR	351157	Argument	"""%02x\\n"""		351149	0					
ANR	351158	PrimaryExpression	"""%02x\\n"""		351149	0					
ANR	351159	Argument	charHex		351149	1					
ANR	351160	Identifier	charHex		351149	0					
ANR	351161	ReturnType	void		351149	1					
ANR	351162	Identifier	printHexCharLine		351149	2					
ANR	351163	ParameterList	char charHex		351149	3					
ANR	351164	Parameter	char charHex	57:23:944:955	351149	0	True				
ANR	351165	ParameterType	char		351149	0					
ANR	351166	Identifier	charHex		351149	1					
ANR	351167	CFGEntryNode	ENTRY		351149		True				
ANR	351168	CFGExitNode	EXIT		351149		True				
ANR	351169	Symbol	charHex		351149						
ANR	351170	Function	printWcharLine	62:0:999:1254							
ANR	351171	FunctionDef	printWcharLine (wchar_t wideChar)		351170	0					
ANR	351172	CompoundStatement		63:0:1039:1254	351170	0					
ANR	351173	IdentifierDeclStatement	wchar_t s [ 2 ] ;	66:4:1165:1177	351170	0	True				
ANR	351174	IdentifierDecl	s [ 2 ]		351170	0					
ANR	351175	IdentifierDeclType	wchar_t [ 2 ]		351170	0					
ANR	351176	Identifier	s		351170	1					
ANR	351177	PrimaryExpression	2		351170	2					
ANR	351178	ExpressionStatement	s [ 0 ] = wideChar	67:8:1188:1203	351170	1	True				
ANR	351179	AssignmentExpression	s [ 0 ] = wideChar		351170	0		=			
ANR	351180	ArrayIndexing	s [ 0 ]		351170	0					
ANR	351181	Identifier	s		351170	0					
ANR	351182	PrimaryExpression	0		351170	1					
ANR	351183	Identifier	wideChar		351170	1					
ANR	351184	Statement	s	68:8:1214:1214	351170	2	True				
ANR	351185	Statement	[	68:9:1215:1215	351170	3	True				
ANR	351186	Statement	1	68:10:1216:1216	351170	4	True				
ANR	351187	Statement	]	68:11:1217:1217	351170	5	True				
ANR	351188	Statement	=	68:13:1219:1219	351170	6	True				
ANR	351189	Statement	L	68:15:1221:1221	351170	7	True				
ANR	351190	ExpressionStatement	'\\0'	68:16:1222:1226	351170	8	True				
ANR	351191	PrimaryExpression	'\\0'		351170	0					
ANR	351192	ExpressionStatement	"printf ( ""%ls\\n"" , s )"	69:4:1233:1251	351170	9	True				
ANR	351193	CallExpression	"printf ( ""%ls\\n"" , s )"		351170	0					
ANR	351194	Callee	printf		351170	0					
ANR	351195	Identifier	printf		351170	0					
ANR	351196	ArgumentList	"""%ls\\n"""		351170	1					
ANR	351197	Argument	"""%ls\\n"""		351170	0					
ANR	351198	PrimaryExpression	"""%ls\\n"""		351170	0					
ANR	351199	Argument	s		351170	1					
ANR	351200	Identifier	s		351170	0					
ANR	351201	ReturnType	void		351170	1					
ANR	351202	Identifier	printWcharLine		351170	2					
ANR	351203	ParameterList	wchar_t wideChar		351170	3					
ANR	351204	Parameter	wchar_t wideChar	62:20:1019:1034	351170	0	True				
ANR	351205	ParameterType	wchar_t		351170	0					
ANR	351206	Identifier	wideChar		351170	1					
ANR	351207	CFGEntryNode	ENTRY		351170		True				
ANR	351208	CFGExitNode	EXIT		351170		True				
ANR	351209	Symbol	s		351170						
ANR	351210	Symbol	wideChar		351170						
ANR	351211	Symbol	* s		351170						
ANR	351212	Function	printUnsignedLine	72:0:1259:1349							
ANR	351213	FunctionDef	printUnsignedLine (unsigned unsignedNumber)		351212	0					
ANR	351214	CompoundStatement		73:0:1309:1349	351212	0					
ANR	351215	ExpressionStatement	"printf ( ""%u\\n"" , unsignedNumber )"	74:4:1316:1346	351212	0	True				
ANR	351216	CallExpression	"printf ( ""%u\\n"" , unsignedNumber )"		351212	0					
ANR	351217	Callee	printf		351212	0					
ANR	351218	Identifier	printf		351212	0					
ANR	351219	ArgumentList	"""%u\\n"""		351212	1					
ANR	351220	Argument	"""%u\\n"""		351212	0					
ANR	351221	PrimaryExpression	"""%u\\n"""		351212	0					
ANR	351222	Argument	unsignedNumber		351212	1					
ANR	351223	Identifier	unsignedNumber		351212	0					
ANR	351224	ReturnType	void		351212	1					
ANR	351225	Identifier	printUnsignedLine		351212	2					
ANR	351226	ParameterList	unsigned unsignedNumber		351212	3					
ANR	351227	Parameter	unsigned unsignedNumber	72:23:1282:1304	351212	0	True				
ANR	351228	ParameterType	unsigned		351212	0					
ANR	351229	Identifier	unsignedNumber		351212	1					
ANR	351230	CFGEntryNode	ENTRY		351212		True				
ANR	351231	CFGExitNode	EXIT		351212		True				
ANR	351232	Symbol	unsignedNumber		351212						
ANR	351233	Function	printHexUnsignedCharLine	77:0:1354:1464							
ANR	351234	FunctionDef	printHexUnsignedCharLine (unsigned char unsignedCharacter)		351233	0					
ANR	351235	CompoundStatement		78:0:1419:1464	351233	0					
ANR	351236	ExpressionStatement	"printf ( ""%02x\\n"" , unsignedCharacter )"	79:4:1426:1461	351233	0	True				
ANR	351237	CallExpression	"printf ( ""%02x\\n"" , unsignedCharacter )"		351233	0					
ANR	351238	Callee	printf		351233	0					
ANR	351239	Identifier	printf		351233	0					
ANR	351240	ArgumentList	"""%02x\\n"""		351233	1					
ANR	351241	Argument	"""%02x\\n"""		351233	0					
ANR	351242	PrimaryExpression	"""%02x\\n"""		351233	0					
ANR	351243	Argument	unsignedCharacter		351233	1					
ANR	351244	Identifier	unsignedCharacter		351233	0					
ANR	351245	ReturnType	void		351233	1					
ANR	351246	Identifier	printHexUnsignedCharLine		351233	2					
ANR	351247	ParameterList	unsigned char unsignedCharacter		351233	3					
ANR	351248	Parameter	unsigned char unsignedCharacter	77:30:1384:1414	351233	0	True				
ANR	351249	ParameterType	unsigned char		351233	0					
ANR	351250	Identifier	unsignedCharacter		351233	1					
ANR	351251	CFGEntryNode	ENTRY		351233		True				
ANR	351252	CFGExitNode	EXIT		351233		True				
ANR	351253	Symbol	unsignedCharacter		351233						
ANR	351254	Function	printDoubleLine	82:0:1469:1551							
ANR	351255	FunctionDef	printDoubleLine (double doubleNumber)		351254	0					
ANR	351256	CompoundStatement		83:0:1513:1551	351254	0					
ANR	351257	ExpressionStatement	"printf ( ""%g\\n"" , doubleNumber )"	84:4:1520:1548	351254	0	True				
ANR	351258	CallExpression	"printf ( ""%g\\n"" , doubleNumber )"		351254	0					
ANR	351259	Callee	printf		351254	0					
ANR	351260	Identifier	printf		351254	0					
ANR	351261	ArgumentList	"""%g\\n"""		351254	1					
ANR	351262	Argument	"""%g\\n"""		351254	0					
ANR	351263	PrimaryExpression	"""%g\\n"""		351254	0					
ANR	351264	Argument	doubleNumber		351254	1					
ANR	351265	Identifier	doubleNumber		351254	0					
ANR	351266	ReturnType	void		351254	1					
ANR	351267	Identifier	printDoubleLine		351254	2					
ANR	351268	ParameterList	double doubleNumber		351254	3					
ANR	351269	Parameter	double doubleNumber	82:21:1490:1508	351254	0	True				
ANR	351270	ParameterType	double		351254	0					
ANR	351271	Identifier	doubleNumber		351254	1					
ANR	351272	CFGEntryNode	ENTRY		351254		True				
ANR	351273	CFGExitNode	EXIT		351254		True				
ANR	351274	Symbol	doubleNumber		351254						
ANR	351275	Function	printStructLine	87:0:1556:1710							
ANR	351276	FunctionDef	printStructLine (const twoIntsStruct * structTwoIntsStruct)		351275	0					
ANR	351277	CompoundStatement		88:0:1622:1710	351275	0					
ANR	351278	ExpressionStatement	"printf ( ""%d -- %d\\n"" , structTwoIntsStruct -> intOne , structTwoIntsStruct -> intTwo )"	89:4:1629:1707	351275	0	True				
ANR	351279	CallExpression	"printf ( ""%d -- %d\\n"" , structTwoIntsStruct -> intOne , structTwoIntsStruct -> intTwo )"		351275	0					
ANR	351280	Callee	printf		351275	0					
ANR	351281	Identifier	printf		351275	0					
ANR	351282	ArgumentList	"""%d -- %d\\n"""		351275	1					
ANR	351283	Argument	"""%d -- %d\\n"""		351275	0					
ANR	351284	PrimaryExpression	"""%d -- %d\\n"""		351275	0					
ANR	351285	Argument	structTwoIntsStruct -> intOne		351275	1					
ANR	351286	PtrMemberAccess	structTwoIntsStruct -> intOne		351275	0					
ANR	351287	Identifier	structTwoIntsStruct		351275	0					
ANR	351288	Identifier	intOne		351275	1					
ANR	351289	Argument	structTwoIntsStruct -> intTwo		351275	2					
ANR	351290	PtrMemberAccess	structTwoIntsStruct -> intTwo		351275	0					
ANR	351291	Identifier	structTwoIntsStruct		351275	0					
ANR	351292	Identifier	intTwo		351275	1					
ANR	351293	ReturnType	void		351275	1					
ANR	351294	Identifier	printStructLine		351275	2					
ANR	351295	ParameterList	const twoIntsStruct * structTwoIntsStruct		351275	3					
ANR	351296	Parameter	const twoIntsStruct * structTwoIntsStruct	87:22:1578:1618	351275	0	True				
ANR	351297	ParameterType	const twoIntsStruct *		351275	0					
ANR	351298	Identifier	structTwoIntsStruct		351275	1					
ANR	351299	CFGEntryNode	ENTRY		351275		True				
ANR	351300	CFGExitNode	EXIT		351275		True				
ANR	351301	Symbol	structTwoIntsStruct		351275						
ANR	351302	Symbol	structTwoIntsStruct -> intTwo		351275						
ANR	351303	Symbol	* structTwoIntsStruct		351275						
ANR	351304	Symbol	structTwoIntsStruct -> intOne		351275						
ANR	351305	Function	printBytesLine	92:0:1715:1921							
ANR	351306	FunctionDef	"printBytesLine (const unsigned char * bytes , size_t numBytes)"		351305	0					
ANR	351307	CompoundStatement		93:0:1782:1921	351305	0					
ANR	351308	IdentifierDeclStatement	size_t i ;	94:4:1789:1797	351305	0	True				
ANR	351309	IdentifierDecl	i		351305	0					
ANR	351310	IdentifierDeclType	size_t		351305	0					
ANR	351311	Identifier	i		351305	1					
ANR	351312	ForStatement	for ( i = 0 ; i < numBytes ; ++ i )		351305	1					
ANR	351313	ForInit	i = 0 ;	95:9:1809:1814	351305	0	True				
ANR	351314	AssignmentExpression	i = 0		351305	0		=			
ANR	351315	Identifier	i		351305	0					
ANR	351316	PrimaryExpression	0		351305	1					
ANR	351317	Condition	i < numBytes	95:16:1816:1827	351305	1	True				
ANR	351318	RelationalExpression	i < numBytes		351305	0		<			
ANR	351319	Identifier	i		351305	0					
ANR	351320	Identifier	numBytes		351305	1					
ANR	351321	UnaryExpression	++ i	95:30:1830:1832	351305	2	True				
ANR	351322	IncDec	++		351305	0					
ANR	351323	Identifier	i		351305	1					
ANR	351324	CompoundStatement		4:4:57:57	351305	3					
ANR	351325	ExpressionStatement	"printf ( ""%02x"" , bytes [ i ] )"	97:8:1851:1875	351305	0	True				
ANR	351326	CallExpression	"printf ( ""%02x"" , bytes [ i ] )"		351305	0					
ANR	351327	Callee	printf		351305	0					
ANR	351328	Identifier	printf		351305	0					
ANR	351329	ArgumentList	"""%02x"""		351305	1					
ANR	351330	Argument	"""%02x"""		351305	0					
ANR	351331	PrimaryExpression	"""%02x"""		351305	0					
ANR	351332	Argument	bytes [ i ]		351305	1					
ANR	351333	ArrayIndexing	bytes [ i ]		351305	0					
ANR	351334	Identifier	bytes		351305	0					
ANR	351335	Identifier	i		351305	1					
ANR	351336	ExpressionStatement	"puts ( """" )"	99:4:1889:1897	351305	2	True				
ANR	351337	CallExpression	"puts ( """" )"		351305	0					
ANR	351338	Callee	puts		351305	0					
ANR	351339	Identifier	puts		351305	0					
ANR	351340	ArgumentList	""""""		351305	1					
ANR	351341	Argument	""""""		351305	0					
ANR	351342	PrimaryExpression	""""""		351305	0					
ANR	351343	ReturnType	void		351305	1					
ANR	351344	Identifier	printBytesLine		351305	2					
ANR	351345	ParameterList	"const unsigned char * bytes , size_t numBytes"		351305	3					
ANR	351346	Parameter	const unsigned char * bytes	92:20:1735:1761	351305	0	True				
ANR	351347	ParameterType	const unsigned char *		351305	0					
ANR	351348	Identifier	bytes		351305	1					
ANR	351349	Parameter	size_t numBytes	92:49:1764:1778	351305	1	True				
ANR	351350	ParameterType	size_t		351305	0					
ANR	351351	Identifier	numBytes		351305	1					
ANR	351352	CFGEntryNode	ENTRY		351305		True				
ANR	351353	CFGExitNode	EXIT		351305		True				
ANR	351354	Symbol	numBytes		351305						
ANR	351355	Symbol	* i		351305						
ANR	351356	Symbol	bytes		351305						
ANR	351357	Symbol	i		351305						
ANR	351358	Symbol	* bytes		351305						
ANR	351359	Function	decodeHexChars	105:0:2143:2882							
ANR	351360	FunctionDef	"decodeHexChars (unsigned char * bytes , size_t numBytes , const char * hex)"		351359	0					
ANR	351361	CompoundStatement		106:0:2224:2882	351359	0					
ANR	351362	IdentifierDeclStatement	size_t numWritten = 0 ;	107:4:2231:2252	351359	0	True				
ANR	351363	IdentifierDecl	numWritten = 0		351359	0					
ANR	351364	IdentifierDeclType	size_t		351359	0					
ANR	351365	Identifier	numWritten		351359	1					
ANR	351366	AssignmentExpression	numWritten = 0		351359	2		=			
ANR	351367	Identifier	numWritten		351359	0					
ANR	351368	PrimaryExpression	0		351359	1					
ANR	351369	WhileStatement	while ( numWritten < numBytes && isxdigit ( hex [ 2 * numWritten ] ) && isxdigit ( hex [ 2 * numWritten + 1 ] ) )		351359	1					
ANR	351370	Condition	numWritten < numBytes && isxdigit ( hex [ 2 * numWritten ] ) && isxdigit ( hex [ 2 * numWritten + 1 ] )	113:11:2601:2691	351359	0	True				
ANR	351371	AndExpression	numWritten < numBytes && isxdigit ( hex [ 2 * numWritten ] ) && isxdigit ( hex [ 2 * numWritten + 1 ] )		351359	0		&&			
ANR	351372	RelationalExpression	numWritten < numBytes		351359	0		<			
ANR	351373	Identifier	numWritten		351359	0					
ANR	351374	Identifier	numBytes		351359	1					
ANR	351375	AndExpression	isxdigit ( hex [ 2 * numWritten ] ) && isxdigit ( hex [ 2 * numWritten + 1 ] )		351359	1		&&			
ANR	351376	CallExpression	isxdigit ( hex [ 2 * numWritten ] )		351359	0					
ANR	351377	Callee	isxdigit		351359	0					
ANR	351378	Identifier	isxdigit		351359	0					
ANR	351379	ArgumentList	hex [ 2 * numWritten ]		351359	1					
ANR	351380	Argument	hex [ 2 * numWritten ]		351359	0					
ANR	351381	ArrayIndexing	hex [ 2 * numWritten ]		351359	0					
ANR	351382	Identifier	hex		351359	0					
ANR	351383	MultiplicativeExpression	2 * numWritten		351359	1		*			
ANR	351384	PrimaryExpression	2		351359	0					
ANR	351385	Identifier	numWritten		351359	1					
ANR	351386	CallExpression	isxdigit ( hex [ 2 * numWritten + 1 ] )		351359	1					
ANR	351387	Callee	isxdigit		351359	0					
ANR	351388	Identifier	isxdigit		351359	0					
ANR	351389	ArgumentList	hex [ 2 * numWritten + 1 ]		351359	1					
ANR	351390	Argument	hex [ 2 * numWritten + 1 ]		351359	0					
ANR	351391	ArrayIndexing	hex [ 2 * numWritten + 1 ]		351359	0					
ANR	351392	Identifier	hex		351359	0					
ANR	351393	AdditiveExpression	2 * numWritten + 1		351359	1		+			
ANR	351394	MultiplicativeExpression	2 * numWritten		351359	0		*			
ANR	351395	PrimaryExpression	2		351359	0					
ANR	351396	Identifier	numWritten		351359	1					
ANR	351397	PrimaryExpression	1		351359	1					
ANR	351398	CompoundStatement		10:8:485:493	351359	1					
ANR	351399	IdentifierDeclStatement	int byte ;	115:8:2710:2718	351359	0	True				
ANR	351400	IdentifierDecl	byte		351359	0					
ANR	351401	IdentifierDeclType	int		351359	0					
ANR	351402	Identifier	byte		351359	1					
ANR	351403	ExpressionStatement	"sscanf ( & hex [ 2 * numWritten ] , ""%02x"" , & byte )"	116:8:2729:2772	351359	1	True				
ANR	351404	CallExpression	"sscanf ( & hex [ 2 * numWritten ] , ""%02x"" , & byte )"		351359	0					
ANR	351405	Callee	sscanf		351359	0					
ANR	351406	Identifier	sscanf		351359	0					
ANR	351407	ArgumentList	& hex [ 2 * numWritten ]		351359	1					
ANR	351408	Argument	& hex [ 2 * numWritten ]		351359	0					
ANR	351409	UnaryOperationExpression	& hex [ 2 * numWritten ]		351359	0					
ANR	351410	UnaryOperator	&		351359	0					
ANR	351411	ArrayIndexing	hex [ 2 * numWritten ]		351359	1					
ANR	351412	Identifier	hex		351359	0					
ANR	351413	MultiplicativeExpression	2 * numWritten		351359	1		*			
ANR	351414	PrimaryExpression	2		351359	0					
ANR	351415	Identifier	numWritten		351359	1					
ANR	351416	Argument	"""%02x"""		351359	1					
ANR	351417	PrimaryExpression	"""%02x"""		351359	0					
ANR	351418	Argument	& byte		351359	2					
ANR	351419	UnaryOperationExpression	& byte		351359	0					
ANR	351420	UnaryOperator	&		351359	0					
ANR	351421	Identifier	byte		351359	1					
ANR	351422	ExpressionStatement	bytes [ numWritten ] = ( unsigned char ) byte	117:8:2783:2823	351359	2	True				
ANR	351423	AssignmentExpression	bytes [ numWritten ] = ( unsigned char ) byte		351359	0		=			
ANR	351424	ArrayIndexing	bytes [ numWritten ]		351359	0					
ANR	351425	Identifier	bytes		351359	0					
ANR	351426	Identifier	numWritten		351359	1					
ANR	351427	CastExpression	( unsigned char ) byte		351359	1					
ANR	351428	CastTarget	unsigned char		351359	0					
ANR	351429	Identifier	byte		351359	1					
ANR	351430	ExpressionStatement	++ numWritten	118:8:2834:2846	351359	3	True				
ANR	351431	UnaryExpression	++ numWritten		351359	0					
ANR	351432	IncDec	++		351359	0					
ANR	351433	Identifier	numWritten		351359	1					
ANR	351434	ReturnStatement	return numWritten ;	121:4:2862:2879	351359	2	True				
ANR	351435	Identifier	numWritten		351359	0					
ANR	351436	ReturnType	size_t		351359	1					
ANR	351437	Identifier	decodeHexChars		351359	2					
ANR	351438	ParameterList	"unsigned char * bytes , size_t numBytes , const char * hex"		351359	3					
ANR	351439	Parameter	unsigned char * bytes	105:22:2165:2185	351359	0	True				
ANR	351440	ParameterType	unsigned char *		351359	0					
ANR	351441	Identifier	bytes		351359	1					
ANR	351442	Parameter	size_t numBytes	105:45:2188:2202	351359	1	True				
ANR	351443	ParameterType	size_t		351359	0					
ANR	351444	Identifier	numBytes		351359	1					
ANR	351445	Parameter	const char * hex	105:62:2205:2220	351359	2	True				
ANR	351446	ParameterType	const char *		351359	0					
ANR	351447	Identifier	hex		351359	1					
ANR	351448	CFGEntryNode	ENTRY		351359		True				
ANR	351449	CFGExitNode	EXIT		351359		True				
ANR	351450	Symbol	numBytes		351359						
ANR	351451	Symbol	* numWritten		351359						
ANR	351452	Symbol	bytes		351359						
ANR	351453	Symbol	byte		351359						
ANR	351454	Symbol	hex		351359						
ANR	351455	Symbol	* hex		351359						
ANR	351456	Symbol	numWritten		351359						
ANR	351457	Symbol	& byte		351359						
ANR	351458	Symbol	* bytes		351359						
ANR	351459	Symbol	isxdigit		351359						
ANR	351460	Function	decodeHexWChars	127:1:3105:3855							
ANR	351461	FunctionDef	"decodeHexWChars (unsigned char * bytes , size_t numBytes , const wchar_t * hex)"		351460	0					
ANR	351462	CompoundStatement		128:1:3191:3855	351460	0					
ANR	351463	IdentifierDeclStatement	size_t numWritten = 0 ;	129:4:3198:3219	351460	0	True				
ANR	351464	IdentifierDecl	numWritten = 0		351460	0					
ANR	351465	IdentifierDeclType	size_t		351460	0					
ANR	351466	Identifier	numWritten		351460	1					
ANR	351467	AssignmentExpression	numWritten = 0		351460	2		=			
ANR	351468	Identifier	numWritten		351460	0					
ANR	351469	PrimaryExpression	0		351460	1					
ANR	351470	WhileStatement	while ( numWritten < numBytes && iswxdigit ( hex [ 2 * numWritten ] ) && iswxdigit ( hex [ 2 * numWritten + 1 ] ) )		351460	1					
ANR	351471	Condition	numWritten < numBytes && iswxdigit ( hex [ 2 * numWritten ] ) && iswxdigit ( hex [ 2 * numWritten + 1 ] )	135:11:3570:3662	351460	0	True				
ANR	351472	AndExpression	numWritten < numBytes && iswxdigit ( hex [ 2 * numWritten ] ) && iswxdigit ( hex [ 2 * numWritten + 1 ] )		351460	0		&&			
ANR	351473	RelationalExpression	numWritten < numBytes		351460	0		<			
ANR	351474	Identifier	numWritten		351460	0					
ANR	351475	Identifier	numBytes		351460	1					
ANR	351476	AndExpression	iswxdigit ( hex [ 2 * numWritten ] ) && iswxdigit ( hex [ 2 * numWritten + 1 ] )		351460	1		&&			
ANR	351477	CallExpression	iswxdigit ( hex [ 2 * numWritten ] )		351460	0					
ANR	351478	Callee	iswxdigit		351460	0					
ANR	351479	Identifier	iswxdigit		351460	0					
ANR	351480	ArgumentList	hex [ 2 * numWritten ]		351460	1					
ANR	351481	Argument	hex [ 2 * numWritten ]		351460	0					
ANR	351482	ArrayIndexing	hex [ 2 * numWritten ]		351460	0					
ANR	351483	Identifier	hex		351460	0					
ANR	351484	MultiplicativeExpression	2 * numWritten		351460	1		*			
ANR	351485	PrimaryExpression	2		351460	0					
ANR	351486	Identifier	numWritten		351460	1					
ANR	351487	CallExpression	iswxdigit ( hex [ 2 * numWritten + 1 ] )		351460	1					
ANR	351488	Callee	iswxdigit		351460	0					
ANR	351489	Identifier	iswxdigit		351460	0					
ANR	351490	ArgumentList	hex [ 2 * numWritten + 1 ]		351460	1					
ANR	351491	Argument	hex [ 2 * numWritten + 1 ]		351460	0					
ANR	351492	ArrayIndexing	hex [ 2 * numWritten + 1 ]		351460	0					
ANR	351493	Identifier	hex		351460	0					
ANR	351494	AdditiveExpression	2 * numWritten + 1		351460	1		+			
ANR	351495	MultiplicativeExpression	2 * numWritten		351460	0		*			
ANR	351496	PrimaryExpression	2		351460	0					
ANR	351497	Identifier	numWritten		351460	1					
ANR	351498	PrimaryExpression	1		351460	1					
ANR	351499	CompoundStatement		10:8:489:497	351460	1					
ANR	351500	IdentifierDeclStatement	int byte ;	137:8:3681:3689	351460	0	True				
ANR	351501	IdentifierDecl	byte		351460	0					
ANR	351502	IdentifierDeclType	int		351460	0					
ANR	351503	Identifier	byte		351460	1					
ANR	351504	Statement	swscanf	138:8:3700:3706	351460	1	True				
ANR	351505	Statement	(	138:15:3707:3707	351460	2	True				
ANR	351506	Statement	&	138:16:3708:3708	351460	3	True				
ANR	351507	Statement	hex	138:17:3709:3711	351460	4	True				
ANR	351508	Statement	[	138:20:3712:3712	351460	5	True				
ANR	351509	Statement	2	138:21:3713:3713	351460	6	True				
ANR	351510	Statement	*	138:23:3715:3715	351460	7	True				
ANR	351511	Statement	numWritten	138:25:3717:3726	351460	8	True				
ANR	351512	Statement	]	138:35:3727:3727	351460	9	True				
ANR	351513	Statement	","	138:36:3728:3728	351460	10	True				
ANR	351514	Statement	L	138:38:3730:3730	351460	11	True				
ANR	351515	Statement	"""%02x"""	138:39:3731:3736	351460	12	True				
ANR	351516	Statement	","	138:45:3737:3737	351460	13	True				
ANR	351517	Statement	&	138:47:3739:3739	351460	14	True				
ANR	351518	Statement	byte	138:48:3740:3743	351460	15	True				
ANR	351519	Statement	)	138:52:3744:3744	351460	16	True				
ANR	351520	ExpressionStatement		138:53:3745:3745	351460	17	True				
ANR	351521	ExpressionStatement	bytes [ numWritten ] = ( unsigned char ) byte	139:8:3756:3796	351460	18	True				
ANR	351522	AssignmentExpression	bytes [ numWritten ] = ( unsigned char ) byte		351460	0		=			
ANR	351523	ArrayIndexing	bytes [ numWritten ]		351460	0					
ANR	351524	Identifier	bytes		351460	0					
ANR	351525	Identifier	numWritten		351460	1					
ANR	351526	CastExpression	( unsigned char ) byte		351460	1					
ANR	351527	CastTarget	unsigned char		351460	0					
ANR	351528	Identifier	byte		351460	1					
ANR	351529	ExpressionStatement	++ numWritten	140:8:3807:3819	351460	19	True				
ANR	351530	UnaryExpression	++ numWritten		351460	0					
ANR	351531	IncDec	++		351460	0					
ANR	351532	Identifier	numWritten		351460	1					
ANR	351533	ReturnStatement	return numWritten ;	143:4:3835:3852	351460	2	True				
ANR	351534	Identifier	numWritten		351460	0					
ANR	351535	ReturnType	size_t		351460	1					
ANR	351536	Identifier	decodeHexWChars		351460	2					
ANR	351537	ParameterList	"unsigned char * bytes , size_t numBytes , const wchar_t * hex"		351460	3					
ANR	351538	Parameter	unsigned char * bytes	127:24:3128:3148	351460	0	True				
ANR	351539	ParameterType	unsigned char *		351460	0					
ANR	351540	Identifier	bytes		351460	1					
ANR	351541	Parameter	size_t numBytes	127:47:3151:3165	351460	1	True				
ANR	351542	ParameterType	size_t		351460	0					
ANR	351543	Identifier	numBytes		351460	1					
ANR	351544	Parameter	const wchar_t * hex	127:64:3168:3186	351460	2	True				
ANR	351545	ParameterType	const wchar_t *		351460	0					
ANR	351546	Identifier	hex		351460	1					
ANR	351547	CFGEntryNode	ENTRY		351460		True				
ANR	351548	CFGExitNode	EXIT		351460		True				
ANR	351549	Symbol	numBytes		351460						
ANR	351550	Symbol	* numWritten		351460						
ANR	351551	Symbol	iswxdigit		351460						
ANR	351552	Symbol	bytes		351460						
ANR	351553	Symbol	byte		351460						
ANR	351554	Symbol	hex		351460						
ANR	351555	Symbol	* hex		351460						
ANR	351556	Symbol	numWritten		351460						
ANR	351557	Symbol	* bytes		351460						
ANR	351558	Function	globalReturnsTrue	148:0:4010:4054							
ANR	351559	FunctionDef	globalReturnsTrue ()		351558	0					
ANR	351560	CompoundStatement		149:0:4036:4054	351558	0					
ANR	351561	ReturnStatement	return 1 ;	150:4:4043:4051	351558	0	True				
ANR	351562	PrimaryExpression	1		351558	0					
ANR	351563	ReturnType	int		351558	1					
ANR	351564	Identifier	globalReturnsTrue		351558	2					
ANR	351565	ParameterList			351558	3					
ANR	351566	CFGEntryNode	ENTRY		351558		True				
ANR	351567	CFGExitNode	EXIT		351558		True				
ANR	351568	Function	globalReturnsFalse	153:0:4059:4104							
ANR	351569	FunctionDef	globalReturnsFalse ()		351568	0					
ANR	351570	CompoundStatement		154:0:4086:4104	351568	0					
ANR	351571	ReturnStatement	return 0 ;	155:4:4093:4101	351568	0	True				
ANR	351572	PrimaryExpression	0		351568	0					
ANR	351573	ReturnType	int		351568	1					
ANR	351574	Identifier	globalReturnsFalse		351568	2					
ANR	351575	ParameterList			351568	3					
ANR	351576	CFGEntryNode	ENTRY		351568		True				
ANR	351577	CFGExitNode	EXIT		351568		True				
ANR	351578	Function	globalReturnsTrueOrFalse	158:0:4109:4171							
ANR	351579	FunctionDef	globalReturnsTrueOrFalse ()		351578	0					
ANR	351580	CompoundStatement		159:0:4142:4171	351578	0					
ANR	351581	ReturnStatement	return ( rand ( ) % 2 ) ;	160:4:4149:4168	351578	0	True				
ANR	351582	MultiplicativeExpression	rand ( ) % 2		351578	0		%			
ANR	351583	CallExpression	rand ( )		351578	0					
ANR	351584	Callee	rand		351578	0					
ANR	351585	Identifier	rand		351578	0					
ANR	351586	ArgumentList			351578	1					
ANR	351587	PrimaryExpression	2		351578	1					
ANR	351588	ReturnType	int		351578	1					
ANR	351589	Identifier	globalReturnsTrueOrFalse		351578	2					
ANR	351590	ParameterList			351578	3					
ANR	351591	CFGEntryNode	ENTRY		351578		True				
ANR	351592	CFGExitNode	EXIT		351578		True				
ANR	351593	Symbol	rand		351578						
ANR	351594	DeclStmt									
ANR	351595	Decl							const int	const int	GLOBAL_CONST_TRUE
ANR	351596	DeclStmt									
ANR	351597	Decl							const int	const int	GLOBAL_CONST_FALSE
ANR	351598	DeclStmt									
ANR	351599	Decl							const int	const int	GLOBAL_CONST_FIVE
ANR	351600	DeclStmt									
ANR	351601	Decl							int	int	globalTrue
ANR	351602	DeclStmt									
ANR	351603	Decl							int	int	globalFalse
ANR	351604	DeclStmt									
ANR	351605	Decl							int	int	globalFive
ANR	351606	Function	good1	179:0:4905:4920							
ANR	351607	FunctionDef	good1 ()		351606	0					
ANR	351608	CompoundStatement		179:13:4918:4920	351606	0					
ANR	351609	ReturnType	void		351606	1					
ANR	351610	Identifier	good1		351606	2					
ANR	351611	ParameterList			351606	3					
ANR	351612	CFGEntryNode	ENTRY		351606		True				
ANR	351613	CFGExitNode	EXIT		351606		True				
ANR	351614	Function	good2	180:0:4923:4938							
ANR	351615	FunctionDef	good2 ()		351614	0					
ANR	351616	CompoundStatement		180:13:4936:4938	351614	0					
ANR	351617	ReturnType	void		351614	1					
ANR	351618	Identifier	good2		351614	2					
ANR	351619	ParameterList			351614	3					
ANR	351620	CFGEntryNode	ENTRY		351614		True				
ANR	351621	CFGExitNode	EXIT		351614		True				
ANR	351622	Function	good3	181:0:4941:4956							
ANR	351623	FunctionDef	good3 ()		351622	0					
ANR	351624	CompoundStatement		181:13:4954:4956	351622	0					
ANR	351625	ReturnType	void		351622	1					
ANR	351626	Identifier	good3		351622	2					
ANR	351627	ParameterList			351622	3					
ANR	351628	CFGEntryNode	ENTRY		351622		True				
ANR	351629	CFGExitNode	EXIT		351622		True				
ANR	351630	Function	good4	182:0:4959:4974							
ANR	351631	FunctionDef	good4 ()		351630	0					
ANR	351632	CompoundStatement		182:13:4972:4974	351630	0					
ANR	351633	ReturnType	void		351630	1					
ANR	351634	Identifier	good4		351630	2					
ANR	351635	ParameterList			351630	3					
ANR	351636	CFGEntryNode	ENTRY		351630		True				
ANR	351637	CFGExitNode	EXIT		351630		True				
ANR	351638	Function	good5	183:0:4977:4992							
ANR	351639	FunctionDef	good5 ()		351638	0					
ANR	351640	CompoundStatement		183:13:4990:4992	351638	0					
ANR	351641	ReturnType	void		351638	1					
ANR	351642	Identifier	good5		351638	2					
ANR	351643	ParameterList			351638	3					
ANR	351644	CFGEntryNode	ENTRY		351638		True				
ANR	351645	CFGExitNode	EXIT		351638		True				
ANR	351646	Function	good6	184:0:4995:5010							
ANR	351647	FunctionDef	good6 ()		351646	0					
ANR	351648	CompoundStatement		184:13:5008:5010	351646	0					
ANR	351649	ReturnType	void		351646	1					
ANR	351650	Identifier	good6		351646	2					
ANR	351651	ParameterList			351646	3					
ANR	351652	CFGEntryNode	ENTRY		351646		True				
ANR	351653	CFGExitNode	EXIT		351646		True				
ANR	351654	Function	good7	185:0:5013:5028							
ANR	351655	FunctionDef	good7 ()		351654	0					
ANR	351656	CompoundStatement		185:13:5026:5028	351654	0					
ANR	351657	ReturnType	void		351654	1					
ANR	351658	Identifier	good7		351654	2					
ANR	351659	ParameterList			351654	3					
ANR	351660	CFGEntryNode	ENTRY		351654		True				
ANR	351661	CFGExitNode	EXIT		351654		True				
ANR	351662	Function	good8	186:0:5031:5046							
ANR	351663	FunctionDef	good8 ()		351662	0					
ANR	351664	CompoundStatement		186:13:5044:5046	351662	0					
ANR	351665	ReturnType	void		351662	1					
ANR	351666	Identifier	good8		351662	2					
ANR	351667	ParameterList			351662	3					
ANR	351668	CFGEntryNode	ENTRY		351662		True				
ANR	351669	CFGExitNode	EXIT		351662		True				
ANR	351670	Function	good9	187:0:5049:5064							
ANR	351671	FunctionDef	good9 ()		351670	0					
ANR	351672	CompoundStatement		187:13:5062:5064	351670	0					
ANR	351673	ReturnType	void		351670	1					
ANR	351674	Identifier	good9		351670	2					
ANR	351675	ParameterList			351670	3					
ANR	351676	CFGEntryNode	ENTRY		351670		True				
ANR	351677	CFGExitNode	EXIT		351670		True				
ANR	351678	Function	bad1	190:0:5112:5126							
ANR	351679	FunctionDef	bad1 ()		351678	0					
ANR	351680	CompoundStatement		190:12:5124:5126	351678	0					
ANR	351681	ReturnType	void		351678	1					
ANR	351682	Identifier	bad1		351678	2					
ANR	351683	ParameterList			351678	3					
ANR	351684	CFGEntryNode	ENTRY		351678		True				
ANR	351685	CFGExitNode	EXIT		351678		True				
ANR	351686	Function	bad2	191:0:5129:5143							
ANR	351687	FunctionDef	bad2 ()		351686	0					
ANR	351688	CompoundStatement		191:12:5141:5143	351686	0					
ANR	351689	ReturnType	void		351686	1					
ANR	351690	Identifier	bad2		351686	2					
ANR	351691	ParameterList			351686	3					
ANR	351692	CFGEntryNode	ENTRY		351686		True				
ANR	351693	CFGExitNode	EXIT		351686		True				
ANR	351694	Function	bad3	192:0:5146:5160							
ANR	351695	FunctionDef	bad3 ()		351694	0					
ANR	351696	CompoundStatement		192:12:5158:5160	351694	0					
ANR	351697	ReturnType	void		351694	1					
ANR	351698	Identifier	bad3		351694	2					
ANR	351699	ParameterList			351694	3					
ANR	351700	CFGEntryNode	ENTRY		351694		True				
ANR	351701	CFGExitNode	EXIT		351694		True				
ANR	351702	Function	bad4	193:0:5163:5177							
ANR	351703	FunctionDef	bad4 ()		351702	0					
ANR	351704	CompoundStatement		193:12:5175:5177	351702	0					
ANR	351705	ReturnType	void		351702	1					
ANR	351706	Identifier	bad4		351702	2					
ANR	351707	ParameterList			351702	3					
ANR	351708	CFGEntryNode	ENTRY		351702		True				
ANR	351709	CFGExitNode	EXIT		351702		True				
ANR	351710	Function	bad5	194:0:5180:5194							
ANR	351711	FunctionDef	bad5 ()		351710	0					
ANR	351712	CompoundStatement		194:12:5192:5194	351710	0					
ANR	351713	ReturnType	void		351710	1					
ANR	351714	Identifier	bad5		351710	2					
ANR	351715	ParameterList			351710	3					
ANR	351716	CFGEntryNode	ENTRY		351710		True				
ANR	351717	CFGExitNode	EXIT		351710		True				
ANR	351718	Function	bad6	195:0:5197:5211							
ANR	351719	FunctionDef	bad6 ()		351718	0					
ANR	351720	CompoundStatement		195:12:5209:5211	351718	0					
ANR	351721	ReturnType	void		351718	1					
ANR	351722	Identifier	bad6		351718	2					
ANR	351723	ParameterList			351718	3					
ANR	351724	CFGEntryNode	ENTRY		351718		True				
ANR	351725	CFGExitNode	EXIT		351718		True				
ANR	351726	Function	bad7	196:0:5214:5228							
ANR	351727	FunctionDef	bad7 ()		351726	0					
ANR	351728	CompoundStatement		196:12:5226:5228	351726	0					
ANR	351729	ReturnType	void		351726	1					
ANR	351730	Identifier	bad7		351726	2					
ANR	351731	ParameterList			351726	3					
ANR	351732	CFGEntryNode	ENTRY		351726		True				
ANR	351733	CFGExitNode	EXIT		351726		True				
ANR	351734	Function	bad8	197:0:5231:5245							
ANR	351735	FunctionDef	bad8 ()		351734	0					
ANR	351736	CompoundStatement		197:12:5243:5245	351734	0					
ANR	351737	ReturnType	void		351734	1					
ANR	351738	Identifier	bad8		351734	2					
ANR	351739	ParameterList			351734	3					
ANR	351740	CFGEntryNode	ENTRY		351734		True				
ANR	351741	CFGExitNode	EXIT		351734		True				
ANR	351742	Function	bad9	198:0:5248:5262							
ANR	351743	FunctionDef	bad9 ()		351742	0					
ANR	351744	CompoundStatement		198:12:5260:5262	351742	0					
ANR	351745	ReturnType	void		351742	1					
ANR	351746	Identifier	bad9		351742	2					
ANR	351747	ParameterList			351742	3					
ANR	351748	CFGEntryNode	ENTRY		351742		True				
ANR	351749	CFGExitNode	EXIT		351742		True				
ANR	351750	DeclStmt									
ANR	351751	Decl							int	int	globalArgc
ANR	351752	DeclStmt									
ANR	351753	Decl							char	char * *	globalArgv
