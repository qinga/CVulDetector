command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	686012	File	/develop/joernDwkProcess/joern-dev/./output/data/CWE119/source-code/119-600-c/testcases/shared/108/io.c								
ANR	686013	Function	printLine	11:0:174:281							
ANR	686014	FunctionDef	printLine (const char * line)		686013	0					
ANR	686015	CompoundStatement		12:0:210:281	686013	0					
ANR	686016	IfStatement	if ( line != NULL )		686013	0					
ANR	686017	Condition	line != NULL	13:7:220:231	686013	0	True				
ANR	686018	EqualityExpression	line != NULL		686013	0		!=			
ANR	686019	Identifier	line		686013	0					
ANR	686020	Identifier	NULL		686013	1					
ANR	686021	CompoundStatement		3:4:29:29	686013	1					
ANR	686022	ExpressionStatement	"printf ( ""%s\\n"" , line )"	15:8:251:271	686013	0	True				
ANR	686023	CallExpression	"printf ( ""%s\\n"" , line )"		686013	0					
ANR	686024	Callee	printf		686013	0					
ANR	686025	Identifier	printf		686013	0					
ANR	686026	ArgumentList	"""%s\\n"""		686013	1					
ANR	686027	Argument	"""%s\\n"""		686013	0					
ANR	686028	PrimaryExpression	"""%s\\n"""		686013	0					
ANR	686029	Argument	line		686013	1					
ANR	686030	Identifier	line		686013	0					
ANR	686031	ReturnType	void		686013	1					
ANR	686032	Identifier	printLine		686013	2					
ANR	686033	ParameterList	const char * line		686013	3					
ANR	686034	Parameter	const char * line	11:16:190:206	686013	0	True				
ANR	686035	ParameterType	const char *		686013	0					
ANR	686036	Identifier	line		686013	1					
ANR	686037	CFGEntryNode	ENTRY		686013		True				
ANR	686038	CFGExitNode	EXIT		686013		True				
ANR	686039	Symbol	NULL		686013						
ANR	686040	Symbol	line		686013						
ANR	686041	Function	printWLine	19:0:286:400							
ANR	686042	FunctionDef	printWLine (const wchar_t * line)		686041	0					
ANR	686043	CompoundStatement		20:0:326:400	686041	0					
ANR	686044	IfStatement	if ( line != NULL )		686041	0					
ANR	686045	Condition	line != NULL	21:7:336:347	686041	0	True				
ANR	686046	EqualityExpression	line != NULL		686041	0		!=			
ANR	686047	Identifier	line		686041	0					
ANR	686048	Identifier	NULL		686041	1					
ANR	686049	CompoundStatement		3:4:29:29	686041	1					
ANR	686050	Statement	wprintf	23:8:367:373	686041	0	True				
ANR	686051	Statement	(	23:15:374:374	686041	1	True				
ANR	686052	Statement	L	23:16:375:375	686041	2	True				
ANR	686053	Statement	"""%ls\\n"""	23:17:376:382	686041	3	True				
ANR	686054	Statement	","	23:24:383:383	686041	4	True				
ANR	686055	Statement	line	23:26:385:388	686041	5	True				
ANR	686056	Statement	)	23:30:389:389	686041	6	True				
ANR	686057	ExpressionStatement		23:31:390:390	686041	7	True				
ANR	686058	ReturnType	void		686041	1					
ANR	686059	Identifier	printWLine		686041	2					
ANR	686060	ParameterList	const wchar_t * line		686041	3					
ANR	686061	Parameter	const wchar_t * line	19:17:303:322	686041	0	True				
ANR	686062	ParameterType	const wchar_t *		686041	0					
ANR	686063	Identifier	line		686041	1					
ANR	686064	CFGEntryNode	ENTRY		686041		True				
ANR	686065	CFGExitNode	EXIT		686041		True				
ANR	686066	Symbol	NULL		686041						
ANR	686067	Symbol	line		686041						
ANR	686068	Function	printIntLine	27:0:405:475							
ANR	686069	FunctionDef	printIntLine (int intNumber)		686068	0					
ANR	686070	CompoundStatement		28:0:440:475	686068	0					
ANR	686071	ExpressionStatement	"printf ( ""%d\\n"" , intNumber )"	29:4:447:472	686068	0	True				
ANR	686072	CallExpression	"printf ( ""%d\\n"" , intNumber )"		686068	0					
ANR	686073	Callee	printf		686068	0					
ANR	686074	Identifier	printf		686068	0					
ANR	686075	ArgumentList	"""%d\\n"""		686068	1					
ANR	686076	Argument	"""%d\\n"""		686068	0					
ANR	686077	PrimaryExpression	"""%d\\n"""		686068	0					
ANR	686078	Argument	intNumber		686068	1					
ANR	686079	Identifier	intNumber		686068	0					
ANR	686080	ReturnType	void		686068	1					
ANR	686081	Identifier	printIntLine		686068	2					
ANR	686082	ParameterList	int intNumber		686068	3					
ANR	686083	Parameter	int intNumber	27:19:424:436	686068	0	True				
ANR	686084	ParameterType	int		686068	0					
ANR	686085	Identifier	intNumber		686068	1					
ANR	686086	CFGEntryNode	ENTRY		686068		True				
ANR	686087	CFGExitNode	EXIT		686068		True				
ANR	686088	Symbol	intNumber		686068						
ANR	686089	Function	printShortLine	32:0:480:559							
ANR	686090	FunctionDef	printShortLine (short shortNumber)		686089	0					
ANR	686091	CompoundStatement		33:0:521:559	686089	0					
ANR	686092	ExpressionStatement	"printf ( ""%hd\\n"" , shortNumber )"	34:4:528:556	686089	0	True				
ANR	686093	CallExpression	"printf ( ""%hd\\n"" , shortNumber )"		686089	0					
ANR	686094	Callee	printf		686089	0					
ANR	686095	Identifier	printf		686089	0					
ANR	686096	ArgumentList	"""%hd\\n"""		686089	1					
ANR	686097	Argument	"""%hd\\n"""		686089	0					
ANR	686098	PrimaryExpression	"""%hd\\n"""		686089	0					
ANR	686099	Argument	shortNumber		686089	1					
ANR	686100	Identifier	shortNumber		686089	0					
ANR	686101	ReturnType	void		686089	1					
ANR	686102	Identifier	printShortLine		686089	2					
ANR	686103	ParameterList	short shortNumber		686089	3					
ANR	686104	Parameter	short shortNumber	32:21:501:517	686089	0	True				
ANR	686105	ParameterType	short		686089	0					
ANR	686106	Identifier	shortNumber		686089	1					
ANR	686107	CFGEntryNode	ENTRY		686089		True				
ANR	686108	CFGExitNode	EXIT		686089		True				
ANR	686109	Symbol	shortNumber		686089						
ANR	686110	Function	printFloatLine	37:0:564:642							
ANR	686111	FunctionDef	printFloatLine (float floatNumber)		686110	0					
ANR	686112	CompoundStatement		38:0:605:642	686110	0					
ANR	686113	ExpressionStatement	"printf ( ""%f\\n"" , floatNumber )"	39:4:612:639	686110	0	True				
ANR	686114	CallExpression	"printf ( ""%f\\n"" , floatNumber )"		686110	0					
ANR	686115	Callee	printf		686110	0					
ANR	686116	Identifier	printf		686110	0					
ANR	686117	ArgumentList	"""%f\\n"""		686110	1					
ANR	686118	Argument	"""%f\\n"""		686110	0					
ANR	686119	PrimaryExpression	"""%f\\n"""		686110	0					
ANR	686120	Argument	floatNumber		686110	1					
ANR	686121	Identifier	floatNumber		686110	0					
ANR	686122	ReturnType	void		686110	1					
ANR	686123	Identifier	printFloatLine		686110	2					
ANR	686124	ParameterList	float floatNumber		686110	3					
ANR	686125	Parameter	float floatNumber	37:21:585:601	686110	0	True				
ANR	686126	ParameterType	float		686110	0					
ANR	686127	Identifier	floatNumber		686110	1					
ANR	686128	CFGEntryNode	ENTRY		686110		True				
ANR	686129	CFGExitNode	EXIT		686110		True				
ANR	686130	Symbol	floatNumber		686110						
ANR	686131	Function	printLongLine	42:0:647:722							
ANR	686132	FunctionDef	printLongLine (long longNumber)		686131	0					
ANR	686133	CompoundStatement		43:0:685:722	686131	0					
ANR	686134	ExpressionStatement	"printf ( ""%ld\\n"" , longNumber )"	44:4:692:719	686131	0	True				
ANR	686135	CallExpression	"printf ( ""%ld\\n"" , longNumber )"		686131	0					
ANR	686136	Callee	printf		686131	0					
ANR	686137	Identifier	printf		686131	0					
ANR	686138	ArgumentList	"""%ld\\n"""		686131	1					
ANR	686139	Argument	"""%ld\\n"""		686131	0					
ANR	686140	PrimaryExpression	"""%ld\\n"""		686131	0					
ANR	686141	Argument	longNumber		686131	1					
ANR	686142	Identifier	longNumber		686131	0					
ANR	686143	ReturnType	void		686131	1					
ANR	686144	Identifier	printLongLine		686131	2					
ANR	686145	ParameterList	long longNumber		686131	3					
ANR	686146	Parameter	long longNumber	42:20:667:681	686131	0	True				
ANR	686147	ParameterType	long		686131	0					
ANR	686148	Identifier	longNumber		686131	1					
ANR	686149	CFGEntryNode	ENTRY		686131		True				
ANR	686150	CFGExitNode	EXIT		686131		True				
ANR	686151	Symbol	longNumber		686131						
ANR	686152	Function	printLongLongLine	47:0:727:831							
ANR	686153	FunctionDef	printLongLongLine (int64_t longLongIntNumber)		686152	0					
ANR	686154	CompoundStatement		48:0:779:831	686152	0					
ANR	686155	Statement	printf	49:4:786:791	686152	0	True				
ANR	686156	Statement	(	49:10:792:792	686152	1	True				
ANR	686157	Statement	"""%"""	49:11:793:795	686152	2	True				
ANR	686158	Statement	PRId64	49:15:797:802	686152	3	True				
ANR	686159	Statement	"""\\n"""	49:22:804:807	686152	4	True				
ANR	686160	Statement	","	49:26:808:808	686152	5	True				
ANR	686161	Statement	longLongIntNumber	49:28:810:826	686152	6	True				
ANR	686162	Statement	)	49:45:827:827	686152	7	True				
ANR	686163	ExpressionStatement		49:46:828:828	686152	8	True				
ANR	686164	ReturnType	void		686152	1					
ANR	686165	Identifier	printLongLongLine		686152	2					
ANR	686166	ParameterList	int64_t longLongIntNumber		686152	3					
ANR	686167	Parameter	int64_t longLongIntNumber	47:24:751:775	686152	0	True				
ANR	686168	ParameterType	int64_t		686152	0					
ANR	686169	Identifier	longLongIntNumber		686152	1					
ANR	686170	CFGEntryNode	ENTRY		686152		True				
ANR	686171	CFGExitNode	EXIT		686152		True				
ANR	686172	Symbol	longLongIntNumber		686152						
ANR	686173	Function	printSizeTLine	52:0:836:916							
ANR	686174	FunctionDef	printSizeTLine (size_t sizeTNumber)		686173	0					
ANR	686175	CompoundStatement		53:0:878:916	686173	0					
ANR	686176	ExpressionStatement	"printf ( ""%zu\\n"" , sizeTNumber )"	54:4:885:913	686173	0	True				
ANR	686177	CallExpression	"printf ( ""%zu\\n"" , sizeTNumber )"		686173	0					
ANR	686178	Callee	printf		686173	0					
ANR	686179	Identifier	printf		686173	0					
ANR	686180	ArgumentList	"""%zu\\n"""		686173	1					
ANR	686181	Argument	"""%zu\\n"""		686173	0					
ANR	686182	PrimaryExpression	"""%zu\\n"""		686173	0					
ANR	686183	Argument	sizeTNumber		686173	1					
ANR	686184	Identifier	sizeTNumber		686173	0					
ANR	686185	ReturnType	void		686173	1					
ANR	686186	Identifier	printSizeTLine		686173	2					
ANR	686187	ParameterList	size_t sizeTNumber		686173	3					
ANR	686188	Parameter	size_t sizeTNumber	52:21:857:874	686173	0	True				
ANR	686189	ParameterType	size_t		686173	0					
ANR	686190	Identifier	sizeTNumber		686173	1					
ANR	686191	CFGEntryNode	ENTRY		686173		True				
ANR	686192	CFGExitNode	EXIT		686173		True				
ANR	686193	Symbol	sizeTNumber		686173						
ANR	686194	Function	printHexCharLine	57:0:921:994							
ANR	686195	FunctionDef	printHexCharLine (char charHex)		686194	0					
ANR	686196	CompoundStatement		58:0:959:994	686194	0					
ANR	686197	ExpressionStatement	"printf ( ""%02x\\n"" , charHex )"	59:4:966:991	686194	0	True				
ANR	686198	CallExpression	"printf ( ""%02x\\n"" , charHex )"		686194	0					
ANR	686199	Callee	printf		686194	0					
ANR	686200	Identifier	printf		686194	0					
ANR	686201	ArgumentList	"""%02x\\n"""		686194	1					
ANR	686202	Argument	"""%02x\\n"""		686194	0					
ANR	686203	PrimaryExpression	"""%02x\\n"""		686194	0					
ANR	686204	Argument	charHex		686194	1					
ANR	686205	Identifier	charHex		686194	0					
ANR	686206	ReturnType	void		686194	1					
ANR	686207	Identifier	printHexCharLine		686194	2					
ANR	686208	ParameterList	char charHex		686194	3					
ANR	686209	Parameter	char charHex	57:23:944:955	686194	0	True				
ANR	686210	ParameterType	char		686194	0					
ANR	686211	Identifier	charHex		686194	1					
ANR	686212	CFGEntryNode	ENTRY		686194		True				
ANR	686213	CFGExitNode	EXIT		686194		True				
ANR	686214	Symbol	charHex		686194						
ANR	686215	Function	printWcharLine	62:0:999:1254							
ANR	686216	FunctionDef	printWcharLine (wchar_t wideChar)		686215	0					
ANR	686217	CompoundStatement		63:0:1039:1254	686215	0					
ANR	686218	IdentifierDeclStatement	wchar_t s [ 2 ] ;	66:4:1165:1177	686215	0	True				
ANR	686219	IdentifierDecl	s [ 2 ]		686215	0					
ANR	686220	IdentifierDeclType	wchar_t [ 2 ]		686215	0					
ANR	686221	Identifier	s		686215	1					
ANR	686222	PrimaryExpression	2		686215	2					
ANR	686223	ExpressionStatement	s [ 0 ] = wideChar	67:8:1188:1203	686215	1	True				
ANR	686224	AssignmentExpression	s [ 0 ] = wideChar		686215	0		=			
ANR	686225	ArrayIndexing	s [ 0 ]		686215	0					
ANR	686226	Identifier	s		686215	0					
ANR	686227	PrimaryExpression	0		686215	1					
ANR	686228	Identifier	wideChar		686215	1					
ANR	686229	Statement	s	68:8:1214:1214	686215	2	True				
ANR	686230	Statement	[	68:9:1215:1215	686215	3	True				
ANR	686231	Statement	1	68:10:1216:1216	686215	4	True				
ANR	686232	Statement	]	68:11:1217:1217	686215	5	True				
ANR	686233	Statement	=	68:13:1219:1219	686215	6	True				
ANR	686234	Statement	L	68:15:1221:1221	686215	7	True				
ANR	686235	ExpressionStatement	'\\0'	68:16:1222:1226	686215	8	True				
ANR	686236	PrimaryExpression	'\\0'		686215	0					
ANR	686237	ExpressionStatement	"printf ( ""%ls\\n"" , s )"	69:4:1233:1251	686215	9	True				
ANR	686238	CallExpression	"printf ( ""%ls\\n"" , s )"		686215	0					
ANR	686239	Callee	printf		686215	0					
ANR	686240	Identifier	printf		686215	0					
ANR	686241	ArgumentList	"""%ls\\n"""		686215	1					
ANR	686242	Argument	"""%ls\\n"""		686215	0					
ANR	686243	PrimaryExpression	"""%ls\\n"""		686215	0					
ANR	686244	Argument	s		686215	1					
ANR	686245	Identifier	s		686215	0					
ANR	686246	ReturnType	void		686215	1					
ANR	686247	Identifier	printWcharLine		686215	2					
ANR	686248	ParameterList	wchar_t wideChar		686215	3					
ANR	686249	Parameter	wchar_t wideChar	62:20:1019:1034	686215	0	True				
ANR	686250	ParameterType	wchar_t		686215	0					
ANR	686251	Identifier	wideChar		686215	1					
ANR	686252	CFGEntryNode	ENTRY		686215		True				
ANR	686253	CFGExitNode	EXIT		686215		True				
ANR	686254	Symbol	s		686215						
ANR	686255	Symbol	wideChar		686215						
ANR	686256	Symbol	* s		686215						
ANR	686257	Function	printUnsignedLine	72:0:1259:1349							
ANR	686258	FunctionDef	printUnsignedLine (unsigned unsignedNumber)		686257	0					
ANR	686259	CompoundStatement		73:0:1309:1349	686257	0					
ANR	686260	ExpressionStatement	"printf ( ""%u\\n"" , unsignedNumber )"	74:4:1316:1346	686257	0	True				
ANR	686261	CallExpression	"printf ( ""%u\\n"" , unsignedNumber )"		686257	0					
ANR	686262	Callee	printf		686257	0					
ANR	686263	Identifier	printf		686257	0					
ANR	686264	ArgumentList	"""%u\\n"""		686257	1					
ANR	686265	Argument	"""%u\\n"""		686257	0					
ANR	686266	PrimaryExpression	"""%u\\n"""		686257	0					
ANR	686267	Argument	unsignedNumber		686257	1					
ANR	686268	Identifier	unsignedNumber		686257	0					
ANR	686269	ReturnType	void		686257	1					
ANR	686270	Identifier	printUnsignedLine		686257	2					
ANR	686271	ParameterList	unsigned unsignedNumber		686257	3					
ANR	686272	Parameter	unsigned unsignedNumber	72:23:1282:1304	686257	0	True				
ANR	686273	ParameterType	unsigned		686257	0					
ANR	686274	Identifier	unsignedNumber		686257	1					
ANR	686275	CFGEntryNode	ENTRY		686257		True				
ANR	686276	CFGExitNode	EXIT		686257		True				
ANR	686277	Symbol	unsignedNumber		686257						
ANR	686278	Function	printHexUnsignedCharLine	77:0:1354:1464							
ANR	686279	FunctionDef	printHexUnsignedCharLine (unsigned char unsignedCharacter)		686278	0					
ANR	686280	CompoundStatement		78:0:1419:1464	686278	0					
ANR	686281	ExpressionStatement	"printf ( ""%02x\\n"" , unsignedCharacter )"	79:4:1426:1461	686278	0	True				
ANR	686282	CallExpression	"printf ( ""%02x\\n"" , unsignedCharacter )"		686278	0					
ANR	686283	Callee	printf		686278	0					
ANR	686284	Identifier	printf		686278	0					
ANR	686285	ArgumentList	"""%02x\\n"""		686278	1					
ANR	686286	Argument	"""%02x\\n"""		686278	0					
ANR	686287	PrimaryExpression	"""%02x\\n"""		686278	0					
ANR	686288	Argument	unsignedCharacter		686278	1					
ANR	686289	Identifier	unsignedCharacter		686278	0					
ANR	686290	ReturnType	void		686278	1					
ANR	686291	Identifier	printHexUnsignedCharLine		686278	2					
ANR	686292	ParameterList	unsigned char unsignedCharacter		686278	3					
ANR	686293	Parameter	unsigned char unsignedCharacter	77:30:1384:1414	686278	0	True				
ANR	686294	ParameterType	unsigned char		686278	0					
ANR	686295	Identifier	unsignedCharacter		686278	1					
ANR	686296	CFGEntryNode	ENTRY		686278		True				
ANR	686297	CFGExitNode	EXIT		686278		True				
ANR	686298	Symbol	unsignedCharacter		686278						
ANR	686299	Function	printDoubleLine	82:0:1469:1551							
ANR	686300	FunctionDef	printDoubleLine (double doubleNumber)		686299	0					
ANR	686301	CompoundStatement		83:0:1513:1551	686299	0					
ANR	686302	ExpressionStatement	"printf ( ""%g\\n"" , doubleNumber )"	84:4:1520:1548	686299	0	True				
ANR	686303	CallExpression	"printf ( ""%g\\n"" , doubleNumber )"		686299	0					
ANR	686304	Callee	printf		686299	0					
ANR	686305	Identifier	printf		686299	0					
ANR	686306	ArgumentList	"""%g\\n"""		686299	1					
ANR	686307	Argument	"""%g\\n"""		686299	0					
ANR	686308	PrimaryExpression	"""%g\\n"""		686299	0					
ANR	686309	Argument	doubleNumber		686299	1					
ANR	686310	Identifier	doubleNumber		686299	0					
ANR	686311	ReturnType	void		686299	1					
ANR	686312	Identifier	printDoubleLine		686299	2					
ANR	686313	ParameterList	double doubleNumber		686299	3					
ANR	686314	Parameter	double doubleNumber	82:21:1490:1508	686299	0	True				
ANR	686315	ParameterType	double		686299	0					
ANR	686316	Identifier	doubleNumber		686299	1					
ANR	686317	CFGEntryNode	ENTRY		686299		True				
ANR	686318	CFGExitNode	EXIT		686299		True				
ANR	686319	Symbol	doubleNumber		686299						
ANR	686320	Function	printStructLine	87:0:1556:1710							
ANR	686321	FunctionDef	printStructLine (const twoIntsStruct * structTwoIntsStruct)		686320	0					
ANR	686322	CompoundStatement		88:0:1622:1710	686320	0					
ANR	686323	ExpressionStatement	"printf ( ""%d -- %d\\n"" , structTwoIntsStruct -> intOne , structTwoIntsStruct -> intTwo )"	89:4:1629:1707	686320	0	True				
ANR	686324	CallExpression	"printf ( ""%d -- %d\\n"" , structTwoIntsStruct -> intOne , structTwoIntsStruct -> intTwo )"		686320	0					
ANR	686325	Callee	printf		686320	0					
ANR	686326	Identifier	printf		686320	0					
ANR	686327	ArgumentList	"""%d -- %d\\n"""		686320	1					
ANR	686328	Argument	"""%d -- %d\\n"""		686320	0					
ANR	686329	PrimaryExpression	"""%d -- %d\\n"""		686320	0					
ANR	686330	Argument	structTwoIntsStruct -> intOne		686320	1					
ANR	686331	PtrMemberAccess	structTwoIntsStruct -> intOne		686320	0					
ANR	686332	Identifier	structTwoIntsStruct		686320	0					
ANR	686333	Identifier	intOne		686320	1					
ANR	686334	Argument	structTwoIntsStruct -> intTwo		686320	2					
ANR	686335	PtrMemberAccess	structTwoIntsStruct -> intTwo		686320	0					
ANR	686336	Identifier	structTwoIntsStruct		686320	0					
ANR	686337	Identifier	intTwo		686320	1					
ANR	686338	ReturnType	void		686320	1					
ANR	686339	Identifier	printStructLine		686320	2					
ANR	686340	ParameterList	const twoIntsStruct * structTwoIntsStruct		686320	3					
ANR	686341	Parameter	const twoIntsStruct * structTwoIntsStruct	87:22:1578:1618	686320	0	True				
ANR	686342	ParameterType	const twoIntsStruct *		686320	0					
ANR	686343	Identifier	structTwoIntsStruct		686320	1					
ANR	686344	CFGEntryNode	ENTRY		686320		True				
ANR	686345	CFGExitNode	EXIT		686320		True				
ANR	686346	Symbol	structTwoIntsStruct		686320						
ANR	686347	Symbol	structTwoIntsStruct -> intTwo		686320						
ANR	686348	Symbol	* structTwoIntsStruct		686320						
ANR	686349	Symbol	structTwoIntsStruct -> intOne		686320						
ANR	686350	Function	printBytesLine	92:0:1715:1921							
ANR	686351	FunctionDef	"printBytesLine (const unsigned char * bytes , size_t numBytes)"		686350	0					
ANR	686352	CompoundStatement		93:0:1782:1921	686350	0					
ANR	686353	IdentifierDeclStatement	size_t i ;	94:4:1789:1797	686350	0	True				
ANR	686354	IdentifierDecl	i		686350	0					
ANR	686355	IdentifierDeclType	size_t		686350	0					
ANR	686356	Identifier	i		686350	1					
ANR	686357	ForStatement	for ( i = 0 ; i < numBytes ; ++ i )		686350	1					
ANR	686358	ForInit	i = 0 ;	95:9:1809:1814	686350	0	True				
ANR	686359	AssignmentExpression	i = 0		686350	0		=			
ANR	686360	Identifier	i		686350	0					
ANR	686361	PrimaryExpression	0		686350	1					
ANR	686362	Condition	i < numBytes	95:16:1816:1827	686350	1	True				
ANR	686363	RelationalExpression	i < numBytes		686350	0		<			
ANR	686364	Identifier	i		686350	0					
ANR	686365	Identifier	numBytes		686350	1					
ANR	686366	UnaryExpression	++ i	95:30:1830:1832	686350	2	True				
ANR	686367	IncDec	++		686350	0					
ANR	686368	Identifier	i		686350	1					
ANR	686369	CompoundStatement		4:4:57:57	686350	3					
ANR	686370	ExpressionStatement	"printf ( ""%02x"" , bytes [ i ] )"	97:8:1851:1875	686350	0	True				
ANR	686371	CallExpression	"printf ( ""%02x"" , bytes [ i ] )"		686350	0					
ANR	686372	Callee	printf		686350	0					
ANR	686373	Identifier	printf		686350	0					
ANR	686374	ArgumentList	"""%02x"""		686350	1					
ANR	686375	Argument	"""%02x"""		686350	0					
ANR	686376	PrimaryExpression	"""%02x"""		686350	0					
ANR	686377	Argument	bytes [ i ]		686350	1					
ANR	686378	ArrayIndexing	bytes [ i ]		686350	0					
ANR	686379	Identifier	bytes		686350	0					
ANR	686380	Identifier	i		686350	1					
ANR	686381	ExpressionStatement	"puts ( """" )"	99:4:1889:1897	686350	2	True				
ANR	686382	CallExpression	"puts ( """" )"		686350	0					
ANR	686383	Callee	puts		686350	0					
ANR	686384	Identifier	puts		686350	0					
ANR	686385	ArgumentList	""""""		686350	1					
ANR	686386	Argument	""""""		686350	0					
ANR	686387	PrimaryExpression	""""""		686350	0					
ANR	686388	ReturnType	void		686350	1					
ANR	686389	Identifier	printBytesLine		686350	2					
ANR	686390	ParameterList	"const unsigned char * bytes , size_t numBytes"		686350	3					
ANR	686391	Parameter	const unsigned char * bytes	92:20:1735:1761	686350	0	True				
ANR	686392	ParameterType	const unsigned char *		686350	0					
ANR	686393	Identifier	bytes		686350	1					
ANR	686394	Parameter	size_t numBytes	92:49:1764:1778	686350	1	True				
ANR	686395	ParameterType	size_t		686350	0					
ANR	686396	Identifier	numBytes		686350	1					
ANR	686397	CFGEntryNode	ENTRY		686350		True				
ANR	686398	CFGExitNode	EXIT		686350		True				
ANR	686399	Symbol	numBytes		686350						
ANR	686400	Symbol	* i		686350						
ANR	686401	Symbol	bytes		686350						
ANR	686402	Symbol	i		686350						
ANR	686403	Symbol	* bytes		686350						
ANR	686404	Function	decodeHexChars	105:0:2143:2882							
ANR	686405	FunctionDef	"decodeHexChars (unsigned char * bytes , size_t numBytes , const char * hex)"		686404	0					
ANR	686406	CompoundStatement		106:0:2224:2882	686404	0					
ANR	686407	IdentifierDeclStatement	size_t numWritten = 0 ;	107:4:2231:2252	686404	0	True				
ANR	686408	IdentifierDecl	numWritten = 0		686404	0					
ANR	686409	IdentifierDeclType	size_t		686404	0					
ANR	686410	Identifier	numWritten		686404	1					
ANR	686411	AssignmentExpression	numWritten = 0		686404	2		=			
ANR	686412	Identifier	numWritten		686404	0					
ANR	686413	PrimaryExpression	0		686404	1					
ANR	686414	WhileStatement	while ( numWritten < numBytes && isxdigit ( hex [ 2 * numWritten ] ) && isxdigit ( hex [ 2 * numWritten + 1 ] ) )		686404	1					
ANR	686415	Condition	numWritten < numBytes && isxdigit ( hex [ 2 * numWritten ] ) && isxdigit ( hex [ 2 * numWritten + 1 ] )	113:11:2601:2691	686404	0	True				
ANR	686416	AndExpression	numWritten < numBytes && isxdigit ( hex [ 2 * numWritten ] ) && isxdigit ( hex [ 2 * numWritten + 1 ] )		686404	0		&&			
ANR	686417	RelationalExpression	numWritten < numBytes		686404	0		<			
ANR	686418	Identifier	numWritten		686404	0					
ANR	686419	Identifier	numBytes		686404	1					
ANR	686420	AndExpression	isxdigit ( hex [ 2 * numWritten ] ) && isxdigit ( hex [ 2 * numWritten + 1 ] )		686404	1		&&			
ANR	686421	CallExpression	isxdigit ( hex [ 2 * numWritten ] )		686404	0					
ANR	686422	Callee	isxdigit		686404	0					
ANR	686423	Identifier	isxdigit		686404	0					
ANR	686424	ArgumentList	hex [ 2 * numWritten ]		686404	1					
ANR	686425	Argument	hex [ 2 * numWritten ]		686404	0					
ANR	686426	ArrayIndexing	hex [ 2 * numWritten ]		686404	0					
ANR	686427	Identifier	hex		686404	0					
ANR	686428	MultiplicativeExpression	2 * numWritten		686404	1		*			
ANR	686429	PrimaryExpression	2		686404	0					
ANR	686430	Identifier	numWritten		686404	1					
ANR	686431	CallExpression	isxdigit ( hex [ 2 * numWritten + 1 ] )		686404	1					
ANR	686432	Callee	isxdigit		686404	0					
ANR	686433	Identifier	isxdigit		686404	0					
ANR	686434	ArgumentList	hex [ 2 * numWritten + 1 ]		686404	1					
ANR	686435	Argument	hex [ 2 * numWritten + 1 ]		686404	0					
ANR	686436	ArrayIndexing	hex [ 2 * numWritten + 1 ]		686404	0					
ANR	686437	Identifier	hex		686404	0					
ANR	686438	AdditiveExpression	2 * numWritten + 1		686404	1		+			
ANR	686439	MultiplicativeExpression	2 * numWritten		686404	0		*			
ANR	686440	PrimaryExpression	2		686404	0					
ANR	686441	Identifier	numWritten		686404	1					
ANR	686442	PrimaryExpression	1		686404	1					
ANR	686443	CompoundStatement		10:8:485:493	686404	1					
ANR	686444	IdentifierDeclStatement	int byte ;	115:8:2710:2718	686404	0	True				
ANR	686445	IdentifierDecl	byte		686404	0					
ANR	686446	IdentifierDeclType	int		686404	0					
ANR	686447	Identifier	byte		686404	1					
ANR	686448	ExpressionStatement	"sscanf ( & hex [ 2 * numWritten ] , ""%02x"" , & byte )"	116:8:2729:2772	686404	1	True				
ANR	686449	CallExpression	"sscanf ( & hex [ 2 * numWritten ] , ""%02x"" , & byte )"		686404	0					
ANR	686450	Callee	sscanf		686404	0					
ANR	686451	Identifier	sscanf		686404	0					
ANR	686452	ArgumentList	& hex [ 2 * numWritten ]		686404	1					
ANR	686453	Argument	& hex [ 2 * numWritten ]		686404	0					
ANR	686454	UnaryOperationExpression	& hex [ 2 * numWritten ]		686404	0					
ANR	686455	UnaryOperator	&		686404	0					
ANR	686456	ArrayIndexing	hex [ 2 * numWritten ]		686404	1					
ANR	686457	Identifier	hex		686404	0					
ANR	686458	MultiplicativeExpression	2 * numWritten		686404	1		*			
ANR	686459	PrimaryExpression	2		686404	0					
ANR	686460	Identifier	numWritten		686404	1					
ANR	686461	Argument	"""%02x"""		686404	1					
ANR	686462	PrimaryExpression	"""%02x"""		686404	0					
ANR	686463	Argument	& byte		686404	2					
ANR	686464	UnaryOperationExpression	& byte		686404	0					
ANR	686465	UnaryOperator	&		686404	0					
ANR	686466	Identifier	byte		686404	1					
ANR	686467	ExpressionStatement	bytes [ numWritten ] = ( unsigned char ) byte	117:8:2783:2823	686404	2	True				
ANR	686468	AssignmentExpression	bytes [ numWritten ] = ( unsigned char ) byte		686404	0		=			
ANR	686469	ArrayIndexing	bytes [ numWritten ]		686404	0					
ANR	686470	Identifier	bytes		686404	0					
ANR	686471	Identifier	numWritten		686404	1					
ANR	686472	CastExpression	( unsigned char ) byte		686404	1					
ANR	686473	CastTarget	unsigned char		686404	0					
ANR	686474	Identifier	byte		686404	1					
ANR	686475	ExpressionStatement	++ numWritten	118:8:2834:2846	686404	3	True				
ANR	686476	UnaryExpression	++ numWritten		686404	0					
ANR	686477	IncDec	++		686404	0					
ANR	686478	Identifier	numWritten		686404	1					
ANR	686479	ReturnStatement	return numWritten ;	121:4:2862:2879	686404	2	True				
ANR	686480	Identifier	numWritten		686404	0					
ANR	686481	ReturnType	size_t		686404	1					
ANR	686482	Identifier	decodeHexChars		686404	2					
ANR	686483	ParameterList	"unsigned char * bytes , size_t numBytes , const char * hex"		686404	3					
ANR	686484	Parameter	unsigned char * bytes	105:22:2165:2185	686404	0	True				
ANR	686485	ParameterType	unsigned char *		686404	0					
ANR	686486	Identifier	bytes		686404	1					
ANR	686487	Parameter	size_t numBytes	105:45:2188:2202	686404	1	True				
ANR	686488	ParameterType	size_t		686404	0					
ANR	686489	Identifier	numBytes		686404	1					
ANR	686490	Parameter	const char * hex	105:62:2205:2220	686404	2	True				
ANR	686491	ParameterType	const char *		686404	0					
ANR	686492	Identifier	hex		686404	1					
ANR	686493	CFGEntryNode	ENTRY		686404		True				
ANR	686494	CFGExitNode	EXIT		686404		True				
ANR	686495	Symbol	numBytes		686404						
ANR	686496	Symbol	* numWritten		686404						
ANR	686497	Symbol	bytes		686404						
ANR	686498	Symbol	byte		686404						
ANR	686499	Symbol	hex		686404						
ANR	686500	Symbol	* hex		686404						
ANR	686501	Symbol	numWritten		686404						
ANR	686502	Symbol	& byte		686404						
ANR	686503	Symbol	* bytes		686404						
ANR	686504	Symbol	isxdigit		686404						
ANR	686505	Function	decodeHexWChars	127:1:3105:3855							
ANR	686506	FunctionDef	"decodeHexWChars (unsigned char * bytes , size_t numBytes , const wchar_t * hex)"		686505	0					
ANR	686507	CompoundStatement		128:1:3191:3855	686505	0					
ANR	686508	IdentifierDeclStatement	size_t numWritten = 0 ;	129:4:3198:3219	686505	0	True				
ANR	686509	IdentifierDecl	numWritten = 0		686505	0					
ANR	686510	IdentifierDeclType	size_t		686505	0					
ANR	686511	Identifier	numWritten		686505	1					
ANR	686512	AssignmentExpression	numWritten = 0		686505	2		=			
ANR	686513	Identifier	numWritten		686505	0					
ANR	686514	PrimaryExpression	0		686505	1					
ANR	686515	WhileStatement	while ( numWritten < numBytes && iswxdigit ( hex [ 2 * numWritten ] ) && iswxdigit ( hex [ 2 * numWritten + 1 ] ) )		686505	1					
ANR	686516	Condition	numWritten < numBytes && iswxdigit ( hex [ 2 * numWritten ] ) && iswxdigit ( hex [ 2 * numWritten + 1 ] )	135:11:3570:3662	686505	0	True				
ANR	686517	AndExpression	numWritten < numBytes && iswxdigit ( hex [ 2 * numWritten ] ) && iswxdigit ( hex [ 2 * numWritten + 1 ] )		686505	0		&&			
ANR	686518	RelationalExpression	numWritten < numBytes		686505	0		<			
ANR	686519	Identifier	numWritten		686505	0					
ANR	686520	Identifier	numBytes		686505	1					
ANR	686521	AndExpression	iswxdigit ( hex [ 2 * numWritten ] ) && iswxdigit ( hex [ 2 * numWritten + 1 ] )		686505	1		&&			
ANR	686522	CallExpression	iswxdigit ( hex [ 2 * numWritten ] )		686505	0					
ANR	686523	Callee	iswxdigit		686505	0					
ANR	686524	Identifier	iswxdigit		686505	0					
ANR	686525	ArgumentList	hex [ 2 * numWritten ]		686505	1					
ANR	686526	Argument	hex [ 2 * numWritten ]		686505	0					
ANR	686527	ArrayIndexing	hex [ 2 * numWritten ]		686505	0					
ANR	686528	Identifier	hex		686505	0					
ANR	686529	MultiplicativeExpression	2 * numWritten		686505	1		*			
ANR	686530	PrimaryExpression	2		686505	0					
ANR	686531	Identifier	numWritten		686505	1					
ANR	686532	CallExpression	iswxdigit ( hex [ 2 * numWritten + 1 ] )		686505	1					
ANR	686533	Callee	iswxdigit		686505	0					
ANR	686534	Identifier	iswxdigit		686505	0					
ANR	686535	ArgumentList	hex [ 2 * numWritten + 1 ]		686505	1					
ANR	686536	Argument	hex [ 2 * numWritten + 1 ]		686505	0					
ANR	686537	ArrayIndexing	hex [ 2 * numWritten + 1 ]		686505	0					
ANR	686538	Identifier	hex		686505	0					
ANR	686539	AdditiveExpression	2 * numWritten + 1		686505	1		+			
ANR	686540	MultiplicativeExpression	2 * numWritten		686505	0		*			
ANR	686541	PrimaryExpression	2		686505	0					
ANR	686542	Identifier	numWritten		686505	1					
ANR	686543	PrimaryExpression	1		686505	1					
ANR	686544	CompoundStatement		10:8:489:497	686505	1					
ANR	686545	IdentifierDeclStatement	int byte ;	137:8:3681:3689	686505	0	True				
ANR	686546	IdentifierDecl	byte		686505	0					
ANR	686547	IdentifierDeclType	int		686505	0					
ANR	686548	Identifier	byte		686505	1					
ANR	686549	Statement	swscanf	138:8:3700:3706	686505	1	True				
ANR	686550	Statement	(	138:15:3707:3707	686505	2	True				
ANR	686551	Statement	&	138:16:3708:3708	686505	3	True				
ANR	686552	Statement	hex	138:17:3709:3711	686505	4	True				
ANR	686553	Statement	[	138:20:3712:3712	686505	5	True				
ANR	686554	Statement	2	138:21:3713:3713	686505	6	True				
ANR	686555	Statement	*	138:23:3715:3715	686505	7	True				
ANR	686556	Statement	numWritten	138:25:3717:3726	686505	8	True				
ANR	686557	Statement	]	138:35:3727:3727	686505	9	True				
ANR	686558	Statement	","	138:36:3728:3728	686505	10	True				
ANR	686559	Statement	L	138:38:3730:3730	686505	11	True				
ANR	686560	Statement	"""%02x"""	138:39:3731:3736	686505	12	True				
ANR	686561	Statement	","	138:45:3737:3737	686505	13	True				
ANR	686562	Statement	&	138:47:3739:3739	686505	14	True				
ANR	686563	Statement	byte	138:48:3740:3743	686505	15	True				
ANR	686564	Statement	)	138:52:3744:3744	686505	16	True				
ANR	686565	ExpressionStatement		138:53:3745:3745	686505	17	True				
ANR	686566	ExpressionStatement	bytes [ numWritten ] = ( unsigned char ) byte	139:8:3756:3796	686505	18	True				
ANR	686567	AssignmentExpression	bytes [ numWritten ] = ( unsigned char ) byte		686505	0		=			
ANR	686568	ArrayIndexing	bytes [ numWritten ]		686505	0					
ANR	686569	Identifier	bytes		686505	0					
ANR	686570	Identifier	numWritten		686505	1					
ANR	686571	CastExpression	( unsigned char ) byte		686505	1					
ANR	686572	CastTarget	unsigned char		686505	0					
ANR	686573	Identifier	byte		686505	1					
ANR	686574	ExpressionStatement	++ numWritten	140:8:3807:3819	686505	19	True				
ANR	686575	UnaryExpression	++ numWritten		686505	0					
ANR	686576	IncDec	++		686505	0					
ANR	686577	Identifier	numWritten		686505	1					
ANR	686578	ReturnStatement	return numWritten ;	143:4:3835:3852	686505	2	True				
ANR	686579	Identifier	numWritten		686505	0					
ANR	686580	ReturnType	size_t		686505	1					
ANR	686581	Identifier	decodeHexWChars		686505	2					
ANR	686582	ParameterList	"unsigned char * bytes , size_t numBytes , const wchar_t * hex"		686505	3					
ANR	686583	Parameter	unsigned char * bytes	127:24:3128:3148	686505	0	True				
ANR	686584	ParameterType	unsigned char *		686505	0					
ANR	686585	Identifier	bytes		686505	1					
ANR	686586	Parameter	size_t numBytes	127:47:3151:3165	686505	1	True				
ANR	686587	ParameterType	size_t		686505	0					
ANR	686588	Identifier	numBytes		686505	1					
ANR	686589	Parameter	const wchar_t * hex	127:64:3168:3186	686505	2	True				
ANR	686590	ParameterType	const wchar_t *		686505	0					
ANR	686591	Identifier	hex		686505	1					
ANR	686592	CFGEntryNode	ENTRY		686505		True				
ANR	686593	CFGExitNode	EXIT		686505		True				
ANR	686594	Symbol	numBytes		686505						
ANR	686595	Symbol	* numWritten		686505						
ANR	686596	Symbol	iswxdigit		686505						
ANR	686597	Symbol	bytes		686505						
ANR	686598	Symbol	byte		686505						
ANR	686599	Symbol	hex		686505						
ANR	686600	Symbol	* hex		686505						
ANR	686601	Symbol	numWritten		686505						
ANR	686602	Symbol	* bytes		686505						
ANR	686603	Function	globalReturnsTrue	148:0:4010:4054							
ANR	686604	FunctionDef	globalReturnsTrue ()		686603	0					
ANR	686605	CompoundStatement		149:0:4036:4054	686603	0					
ANR	686606	ReturnStatement	return 1 ;	150:4:4043:4051	686603	0	True				
ANR	686607	PrimaryExpression	1		686603	0					
ANR	686608	ReturnType	int		686603	1					
ANR	686609	Identifier	globalReturnsTrue		686603	2					
ANR	686610	ParameterList			686603	3					
ANR	686611	CFGEntryNode	ENTRY		686603		True				
ANR	686612	CFGExitNode	EXIT		686603		True				
ANR	686613	Function	globalReturnsFalse	153:0:4059:4104							
ANR	686614	FunctionDef	globalReturnsFalse ()		686613	0					
ANR	686615	CompoundStatement		154:0:4086:4104	686613	0					
ANR	686616	ReturnStatement	return 0 ;	155:4:4093:4101	686613	0	True				
ANR	686617	PrimaryExpression	0		686613	0					
ANR	686618	ReturnType	int		686613	1					
ANR	686619	Identifier	globalReturnsFalse		686613	2					
ANR	686620	ParameterList			686613	3					
ANR	686621	CFGEntryNode	ENTRY		686613		True				
ANR	686622	CFGExitNode	EXIT		686613		True				
ANR	686623	Function	globalReturnsTrueOrFalse	158:0:4109:4171							
ANR	686624	FunctionDef	globalReturnsTrueOrFalse ()		686623	0					
ANR	686625	CompoundStatement		159:0:4142:4171	686623	0					
ANR	686626	ReturnStatement	return ( rand ( ) % 2 ) ;	160:4:4149:4168	686623	0	True				
ANR	686627	MultiplicativeExpression	rand ( ) % 2		686623	0		%			
ANR	686628	CallExpression	rand ( )		686623	0					
ANR	686629	Callee	rand		686623	0					
ANR	686630	Identifier	rand		686623	0					
ANR	686631	ArgumentList			686623	1					
ANR	686632	PrimaryExpression	2		686623	1					
ANR	686633	ReturnType	int		686623	1					
ANR	686634	Identifier	globalReturnsTrueOrFalse		686623	2					
ANR	686635	ParameterList			686623	3					
ANR	686636	CFGEntryNode	ENTRY		686623		True				
ANR	686637	CFGExitNode	EXIT		686623		True				
ANR	686638	Symbol	rand		686623						
ANR	686639	DeclStmt									
ANR	686640	Decl							const int	const int	GLOBAL_CONST_TRUE
ANR	686641	DeclStmt									
ANR	686642	Decl							const int	const int	GLOBAL_CONST_FALSE
ANR	686643	DeclStmt									
ANR	686644	Decl							const int	const int	GLOBAL_CONST_FIVE
ANR	686645	DeclStmt									
ANR	686646	Decl							int	int	globalTrue
ANR	686647	DeclStmt									
ANR	686648	Decl							int	int	globalFalse
ANR	686649	DeclStmt									
ANR	686650	Decl							int	int	globalFive
ANR	686651	Function	good1	179:0:4905:4920							
ANR	686652	FunctionDef	good1 ()		686651	0					
ANR	686653	CompoundStatement		179:13:4918:4920	686651	0					
ANR	686654	ReturnType	void		686651	1					
ANR	686655	Identifier	good1		686651	2					
ANR	686656	ParameterList			686651	3					
ANR	686657	CFGEntryNode	ENTRY		686651		True				
ANR	686658	CFGExitNode	EXIT		686651		True				
ANR	686659	Function	good2	180:0:4923:4938							
ANR	686660	FunctionDef	good2 ()		686659	0					
ANR	686661	CompoundStatement		180:13:4936:4938	686659	0					
ANR	686662	ReturnType	void		686659	1					
ANR	686663	Identifier	good2		686659	2					
ANR	686664	ParameterList			686659	3					
ANR	686665	CFGEntryNode	ENTRY		686659		True				
ANR	686666	CFGExitNode	EXIT		686659		True				
ANR	686667	Function	good3	181:0:4941:4956							
ANR	686668	FunctionDef	good3 ()		686667	0					
ANR	686669	CompoundStatement		181:13:4954:4956	686667	0					
ANR	686670	ReturnType	void		686667	1					
ANR	686671	Identifier	good3		686667	2					
ANR	686672	ParameterList			686667	3					
ANR	686673	CFGEntryNode	ENTRY		686667		True				
ANR	686674	CFGExitNode	EXIT		686667		True				
ANR	686675	Function	good4	182:0:4959:4974							
ANR	686676	FunctionDef	good4 ()		686675	0					
ANR	686677	CompoundStatement		182:13:4972:4974	686675	0					
ANR	686678	ReturnType	void		686675	1					
ANR	686679	Identifier	good4		686675	2					
ANR	686680	ParameterList			686675	3					
ANR	686681	CFGEntryNode	ENTRY		686675		True				
ANR	686682	CFGExitNode	EXIT		686675		True				
ANR	686683	Function	good5	183:0:4977:4992							
ANR	686684	FunctionDef	good5 ()		686683	0					
ANR	686685	CompoundStatement		183:13:4990:4992	686683	0					
ANR	686686	ReturnType	void		686683	1					
ANR	686687	Identifier	good5		686683	2					
ANR	686688	ParameterList			686683	3					
ANR	686689	CFGEntryNode	ENTRY		686683		True				
ANR	686690	CFGExitNode	EXIT		686683		True				
ANR	686691	Function	good6	184:0:4995:5010							
ANR	686692	FunctionDef	good6 ()		686691	0					
ANR	686693	CompoundStatement		184:13:5008:5010	686691	0					
ANR	686694	ReturnType	void		686691	1					
ANR	686695	Identifier	good6		686691	2					
ANR	686696	ParameterList			686691	3					
ANR	686697	CFGEntryNode	ENTRY		686691		True				
ANR	686698	CFGExitNode	EXIT		686691		True				
ANR	686699	Function	good7	185:0:5013:5028							
ANR	686700	FunctionDef	good7 ()		686699	0					
ANR	686701	CompoundStatement		185:13:5026:5028	686699	0					
ANR	686702	ReturnType	void		686699	1					
ANR	686703	Identifier	good7		686699	2					
ANR	686704	ParameterList			686699	3					
ANR	686705	CFGEntryNode	ENTRY		686699		True				
ANR	686706	CFGExitNode	EXIT		686699		True				
ANR	686707	Function	good8	186:0:5031:5046							
ANR	686708	FunctionDef	good8 ()		686707	0					
ANR	686709	CompoundStatement		186:13:5044:5046	686707	0					
ANR	686710	ReturnType	void		686707	1					
ANR	686711	Identifier	good8		686707	2					
ANR	686712	ParameterList			686707	3					
ANR	686713	CFGEntryNode	ENTRY		686707		True				
ANR	686714	CFGExitNode	EXIT		686707		True				
ANR	686715	Function	good9	187:0:5049:5064							
ANR	686716	FunctionDef	good9 ()		686715	0					
ANR	686717	CompoundStatement		187:13:5062:5064	686715	0					
ANR	686718	ReturnType	void		686715	1					
ANR	686719	Identifier	good9		686715	2					
ANR	686720	ParameterList			686715	3					
ANR	686721	CFGEntryNode	ENTRY		686715		True				
ANR	686722	CFGExitNode	EXIT		686715		True				
ANR	686723	Function	bad1	190:0:5112:5126							
ANR	686724	FunctionDef	bad1 ()		686723	0					
ANR	686725	CompoundStatement		190:12:5124:5126	686723	0					
ANR	686726	ReturnType	void		686723	1					
ANR	686727	Identifier	bad1		686723	2					
ANR	686728	ParameterList			686723	3					
ANR	686729	CFGEntryNode	ENTRY		686723		True				
ANR	686730	CFGExitNode	EXIT		686723		True				
ANR	686731	Function	bad2	191:0:5129:5143							
ANR	686732	FunctionDef	bad2 ()		686731	0					
ANR	686733	CompoundStatement		191:12:5141:5143	686731	0					
ANR	686734	ReturnType	void		686731	1					
ANR	686735	Identifier	bad2		686731	2					
ANR	686736	ParameterList			686731	3					
ANR	686737	CFGEntryNode	ENTRY		686731		True				
ANR	686738	CFGExitNode	EXIT		686731		True				
ANR	686739	Function	bad3	192:0:5146:5160							
ANR	686740	FunctionDef	bad3 ()		686739	0					
ANR	686741	CompoundStatement		192:12:5158:5160	686739	0					
ANR	686742	ReturnType	void		686739	1					
ANR	686743	Identifier	bad3		686739	2					
ANR	686744	ParameterList			686739	3					
ANR	686745	CFGEntryNode	ENTRY		686739		True				
ANR	686746	CFGExitNode	EXIT		686739		True				
ANR	686747	Function	bad4	193:0:5163:5177							
ANR	686748	FunctionDef	bad4 ()		686747	0					
ANR	686749	CompoundStatement		193:12:5175:5177	686747	0					
ANR	686750	ReturnType	void		686747	1					
ANR	686751	Identifier	bad4		686747	2					
ANR	686752	ParameterList			686747	3					
ANR	686753	CFGEntryNode	ENTRY		686747		True				
ANR	686754	CFGExitNode	EXIT		686747		True				
ANR	686755	Function	bad5	194:0:5180:5194							
ANR	686756	FunctionDef	bad5 ()		686755	0					
ANR	686757	CompoundStatement		194:12:5192:5194	686755	0					
ANR	686758	ReturnType	void		686755	1					
ANR	686759	Identifier	bad5		686755	2					
ANR	686760	ParameterList			686755	3					
ANR	686761	CFGEntryNode	ENTRY		686755		True				
ANR	686762	CFGExitNode	EXIT		686755		True				
ANR	686763	Function	bad6	195:0:5197:5211							
ANR	686764	FunctionDef	bad6 ()		686763	0					
ANR	686765	CompoundStatement		195:12:5209:5211	686763	0					
ANR	686766	ReturnType	void		686763	1					
ANR	686767	Identifier	bad6		686763	2					
ANR	686768	ParameterList			686763	3					
ANR	686769	CFGEntryNode	ENTRY		686763		True				
ANR	686770	CFGExitNode	EXIT		686763		True				
ANR	686771	Function	bad7	196:0:5214:5228							
ANR	686772	FunctionDef	bad7 ()		686771	0					
ANR	686773	CompoundStatement		196:12:5226:5228	686771	0					
ANR	686774	ReturnType	void		686771	1					
ANR	686775	Identifier	bad7		686771	2					
ANR	686776	ParameterList			686771	3					
ANR	686777	CFGEntryNode	ENTRY		686771		True				
ANR	686778	CFGExitNode	EXIT		686771		True				
ANR	686779	Function	bad8	197:0:5231:5245							
ANR	686780	FunctionDef	bad8 ()		686779	0					
ANR	686781	CompoundStatement		197:12:5243:5245	686779	0					
ANR	686782	ReturnType	void		686779	1					
ANR	686783	Identifier	bad8		686779	2					
ANR	686784	ParameterList			686779	3					
ANR	686785	CFGEntryNode	ENTRY		686779		True				
ANR	686786	CFGExitNode	EXIT		686779		True				
ANR	686787	Function	bad9	198:0:5248:5262							
ANR	686788	FunctionDef	bad9 ()		686787	0					
ANR	686789	CompoundStatement		198:12:5260:5262	686787	0					
ANR	686790	ReturnType	void		686787	1					
ANR	686791	Identifier	bad9		686787	2					
ANR	686792	ParameterList			686787	3					
ANR	686793	CFGEntryNode	ENTRY		686787		True				
ANR	686794	CFGExitNode	EXIT		686787		True				
ANR	686795	DeclStmt									
ANR	686796	Decl							int	int	globalArgc
ANR	686797	DeclStmt									
ANR	686798	Decl							char	char * *	globalArgv
