command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	633493	File	/develop/joernDwkProcess/joern-dev/./output/data/CWE119/source-code/119-500-c/testcases/shared/108/io.c								
ANR	633494	Function	printLine	11:0:174:281							
ANR	633495	FunctionDef	printLine (const char * line)		633494	0					
ANR	633496	CompoundStatement		12:0:210:281	633494	0					
ANR	633497	IfStatement	if ( line != NULL )		633494	0					
ANR	633498	Condition	line != NULL	13:7:220:231	633494	0	True				
ANR	633499	EqualityExpression	line != NULL		633494	0		!=			
ANR	633500	Identifier	line		633494	0					
ANR	633501	Identifier	NULL		633494	1					
ANR	633502	CompoundStatement		3:4:29:29	633494	1					
ANR	633503	ExpressionStatement	"printf ( ""%s\\n"" , line )"	15:8:251:271	633494	0	True				
ANR	633504	CallExpression	"printf ( ""%s\\n"" , line )"		633494	0					
ANR	633505	Callee	printf		633494	0					
ANR	633506	Identifier	printf		633494	0					
ANR	633507	ArgumentList	"""%s\\n"""		633494	1					
ANR	633508	Argument	"""%s\\n"""		633494	0					
ANR	633509	PrimaryExpression	"""%s\\n"""		633494	0					
ANR	633510	Argument	line		633494	1					
ANR	633511	Identifier	line		633494	0					
ANR	633512	ReturnType	void		633494	1					
ANR	633513	Identifier	printLine		633494	2					
ANR	633514	ParameterList	const char * line		633494	3					
ANR	633515	Parameter	const char * line	11:16:190:206	633494	0	True				
ANR	633516	ParameterType	const char *		633494	0					
ANR	633517	Identifier	line		633494	1					
ANR	633518	CFGEntryNode	ENTRY		633494		True				
ANR	633519	CFGExitNode	EXIT		633494		True				
ANR	633520	Symbol	NULL		633494						
ANR	633521	Symbol	line		633494						
ANR	633522	Function	printWLine	19:0:286:400							
ANR	633523	FunctionDef	printWLine (const wchar_t * line)		633522	0					
ANR	633524	CompoundStatement		20:0:326:400	633522	0					
ANR	633525	IfStatement	if ( line != NULL )		633522	0					
ANR	633526	Condition	line != NULL	21:7:336:347	633522	0	True				
ANR	633527	EqualityExpression	line != NULL		633522	0		!=			
ANR	633528	Identifier	line		633522	0					
ANR	633529	Identifier	NULL		633522	1					
ANR	633530	CompoundStatement		3:4:29:29	633522	1					
ANR	633531	Statement	wprintf	23:8:367:373	633522	0	True				
ANR	633532	Statement	(	23:15:374:374	633522	1	True				
ANR	633533	Statement	L	23:16:375:375	633522	2	True				
ANR	633534	Statement	"""%ls\\n"""	23:17:376:382	633522	3	True				
ANR	633535	Statement	","	23:24:383:383	633522	4	True				
ANR	633536	Statement	line	23:26:385:388	633522	5	True				
ANR	633537	Statement	)	23:30:389:389	633522	6	True				
ANR	633538	ExpressionStatement		23:31:390:390	633522	7	True				
ANR	633539	ReturnType	void		633522	1					
ANR	633540	Identifier	printWLine		633522	2					
ANR	633541	ParameterList	const wchar_t * line		633522	3					
ANR	633542	Parameter	const wchar_t * line	19:17:303:322	633522	0	True				
ANR	633543	ParameterType	const wchar_t *		633522	0					
ANR	633544	Identifier	line		633522	1					
ANR	633545	CFGEntryNode	ENTRY		633522		True				
ANR	633546	CFGExitNode	EXIT		633522		True				
ANR	633547	Symbol	NULL		633522						
ANR	633548	Symbol	line		633522						
ANR	633549	Function	printIntLine	27:0:405:475							
ANR	633550	FunctionDef	printIntLine (int intNumber)		633549	0					
ANR	633551	CompoundStatement		28:0:440:475	633549	0					
ANR	633552	ExpressionStatement	"printf ( ""%d\\n"" , intNumber )"	29:4:447:472	633549	0	True				
ANR	633553	CallExpression	"printf ( ""%d\\n"" , intNumber )"		633549	0					
ANR	633554	Callee	printf		633549	0					
ANR	633555	Identifier	printf		633549	0					
ANR	633556	ArgumentList	"""%d\\n"""		633549	1					
ANR	633557	Argument	"""%d\\n"""		633549	0					
ANR	633558	PrimaryExpression	"""%d\\n"""		633549	0					
ANR	633559	Argument	intNumber		633549	1					
ANR	633560	Identifier	intNumber		633549	0					
ANR	633561	ReturnType	void		633549	1					
ANR	633562	Identifier	printIntLine		633549	2					
ANR	633563	ParameterList	int intNumber		633549	3					
ANR	633564	Parameter	int intNumber	27:19:424:436	633549	0	True				
ANR	633565	ParameterType	int		633549	0					
ANR	633566	Identifier	intNumber		633549	1					
ANR	633567	CFGEntryNode	ENTRY		633549		True				
ANR	633568	CFGExitNode	EXIT		633549		True				
ANR	633569	Symbol	intNumber		633549						
ANR	633570	Function	printShortLine	32:0:480:559							
ANR	633571	FunctionDef	printShortLine (short shortNumber)		633570	0					
ANR	633572	CompoundStatement		33:0:521:559	633570	0					
ANR	633573	ExpressionStatement	"printf ( ""%hd\\n"" , shortNumber )"	34:4:528:556	633570	0	True				
ANR	633574	CallExpression	"printf ( ""%hd\\n"" , shortNumber )"		633570	0					
ANR	633575	Callee	printf		633570	0					
ANR	633576	Identifier	printf		633570	0					
ANR	633577	ArgumentList	"""%hd\\n"""		633570	1					
ANR	633578	Argument	"""%hd\\n"""		633570	0					
ANR	633579	PrimaryExpression	"""%hd\\n"""		633570	0					
ANR	633580	Argument	shortNumber		633570	1					
ANR	633581	Identifier	shortNumber		633570	0					
ANR	633582	ReturnType	void		633570	1					
ANR	633583	Identifier	printShortLine		633570	2					
ANR	633584	ParameterList	short shortNumber		633570	3					
ANR	633585	Parameter	short shortNumber	32:21:501:517	633570	0	True				
ANR	633586	ParameterType	short		633570	0					
ANR	633587	Identifier	shortNumber		633570	1					
ANR	633588	CFGEntryNode	ENTRY		633570		True				
ANR	633589	CFGExitNode	EXIT		633570		True				
ANR	633590	Symbol	shortNumber		633570						
ANR	633591	Function	printFloatLine	37:0:564:642							
ANR	633592	FunctionDef	printFloatLine (float floatNumber)		633591	0					
ANR	633593	CompoundStatement		38:0:605:642	633591	0					
ANR	633594	ExpressionStatement	"printf ( ""%f\\n"" , floatNumber )"	39:4:612:639	633591	0	True				
ANR	633595	CallExpression	"printf ( ""%f\\n"" , floatNumber )"		633591	0					
ANR	633596	Callee	printf		633591	0					
ANR	633597	Identifier	printf		633591	0					
ANR	633598	ArgumentList	"""%f\\n"""		633591	1					
ANR	633599	Argument	"""%f\\n"""		633591	0					
ANR	633600	PrimaryExpression	"""%f\\n"""		633591	0					
ANR	633601	Argument	floatNumber		633591	1					
ANR	633602	Identifier	floatNumber		633591	0					
ANR	633603	ReturnType	void		633591	1					
ANR	633604	Identifier	printFloatLine		633591	2					
ANR	633605	ParameterList	float floatNumber		633591	3					
ANR	633606	Parameter	float floatNumber	37:21:585:601	633591	0	True				
ANR	633607	ParameterType	float		633591	0					
ANR	633608	Identifier	floatNumber		633591	1					
ANR	633609	CFGEntryNode	ENTRY		633591		True				
ANR	633610	CFGExitNode	EXIT		633591		True				
ANR	633611	Symbol	floatNumber		633591						
ANR	633612	Function	printLongLine	42:0:647:722							
ANR	633613	FunctionDef	printLongLine (long longNumber)		633612	0					
ANR	633614	CompoundStatement		43:0:685:722	633612	0					
ANR	633615	ExpressionStatement	"printf ( ""%ld\\n"" , longNumber )"	44:4:692:719	633612	0	True				
ANR	633616	CallExpression	"printf ( ""%ld\\n"" , longNumber )"		633612	0					
ANR	633617	Callee	printf		633612	0					
ANR	633618	Identifier	printf		633612	0					
ANR	633619	ArgumentList	"""%ld\\n"""		633612	1					
ANR	633620	Argument	"""%ld\\n"""		633612	0					
ANR	633621	PrimaryExpression	"""%ld\\n"""		633612	0					
ANR	633622	Argument	longNumber		633612	1					
ANR	633623	Identifier	longNumber		633612	0					
ANR	633624	ReturnType	void		633612	1					
ANR	633625	Identifier	printLongLine		633612	2					
ANR	633626	ParameterList	long longNumber		633612	3					
ANR	633627	Parameter	long longNumber	42:20:667:681	633612	0	True				
ANR	633628	ParameterType	long		633612	0					
ANR	633629	Identifier	longNumber		633612	1					
ANR	633630	CFGEntryNode	ENTRY		633612		True				
ANR	633631	CFGExitNode	EXIT		633612		True				
ANR	633632	Symbol	longNumber		633612						
ANR	633633	Function	printLongLongLine	47:0:727:831							
ANR	633634	FunctionDef	printLongLongLine (int64_t longLongIntNumber)		633633	0					
ANR	633635	CompoundStatement		48:0:779:831	633633	0					
ANR	633636	Statement	printf	49:4:786:791	633633	0	True				
ANR	633637	Statement	(	49:10:792:792	633633	1	True				
ANR	633638	Statement	"""%"""	49:11:793:795	633633	2	True				
ANR	633639	Statement	PRId64	49:15:797:802	633633	3	True				
ANR	633640	Statement	"""\\n"""	49:22:804:807	633633	4	True				
ANR	633641	Statement	","	49:26:808:808	633633	5	True				
ANR	633642	Statement	longLongIntNumber	49:28:810:826	633633	6	True				
ANR	633643	Statement	)	49:45:827:827	633633	7	True				
ANR	633644	ExpressionStatement		49:46:828:828	633633	8	True				
ANR	633645	ReturnType	void		633633	1					
ANR	633646	Identifier	printLongLongLine		633633	2					
ANR	633647	ParameterList	int64_t longLongIntNumber		633633	3					
ANR	633648	Parameter	int64_t longLongIntNumber	47:24:751:775	633633	0	True				
ANR	633649	ParameterType	int64_t		633633	0					
ANR	633650	Identifier	longLongIntNumber		633633	1					
ANR	633651	CFGEntryNode	ENTRY		633633		True				
ANR	633652	CFGExitNode	EXIT		633633		True				
ANR	633653	Symbol	longLongIntNumber		633633						
ANR	633654	Function	printSizeTLine	52:0:836:916							
ANR	633655	FunctionDef	printSizeTLine (size_t sizeTNumber)		633654	0					
ANR	633656	CompoundStatement		53:0:878:916	633654	0					
ANR	633657	ExpressionStatement	"printf ( ""%zu\\n"" , sizeTNumber )"	54:4:885:913	633654	0	True				
ANR	633658	CallExpression	"printf ( ""%zu\\n"" , sizeTNumber )"		633654	0					
ANR	633659	Callee	printf		633654	0					
ANR	633660	Identifier	printf		633654	0					
ANR	633661	ArgumentList	"""%zu\\n"""		633654	1					
ANR	633662	Argument	"""%zu\\n"""		633654	0					
ANR	633663	PrimaryExpression	"""%zu\\n"""		633654	0					
ANR	633664	Argument	sizeTNumber		633654	1					
ANR	633665	Identifier	sizeTNumber		633654	0					
ANR	633666	ReturnType	void		633654	1					
ANR	633667	Identifier	printSizeTLine		633654	2					
ANR	633668	ParameterList	size_t sizeTNumber		633654	3					
ANR	633669	Parameter	size_t sizeTNumber	52:21:857:874	633654	0	True				
ANR	633670	ParameterType	size_t		633654	0					
ANR	633671	Identifier	sizeTNumber		633654	1					
ANR	633672	CFGEntryNode	ENTRY		633654		True				
ANR	633673	CFGExitNode	EXIT		633654		True				
ANR	633674	Symbol	sizeTNumber		633654						
ANR	633675	Function	printHexCharLine	57:0:921:994							
ANR	633676	FunctionDef	printHexCharLine (char charHex)		633675	0					
ANR	633677	CompoundStatement		58:0:959:994	633675	0					
ANR	633678	ExpressionStatement	"printf ( ""%02x\\n"" , charHex )"	59:4:966:991	633675	0	True				
ANR	633679	CallExpression	"printf ( ""%02x\\n"" , charHex )"		633675	0					
ANR	633680	Callee	printf		633675	0					
ANR	633681	Identifier	printf		633675	0					
ANR	633682	ArgumentList	"""%02x\\n"""		633675	1					
ANR	633683	Argument	"""%02x\\n"""		633675	0					
ANR	633684	PrimaryExpression	"""%02x\\n"""		633675	0					
ANR	633685	Argument	charHex		633675	1					
ANR	633686	Identifier	charHex		633675	0					
ANR	633687	ReturnType	void		633675	1					
ANR	633688	Identifier	printHexCharLine		633675	2					
ANR	633689	ParameterList	char charHex		633675	3					
ANR	633690	Parameter	char charHex	57:23:944:955	633675	0	True				
ANR	633691	ParameterType	char		633675	0					
ANR	633692	Identifier	charHex		633675	1					
ANR	633693	CFGEntryNode	ENTRY		633675		True				
ANR	633694	CFGExitNode	EXIT		633675		True				
ANR	633695	Symbol	charHex		633675						
ANR	633696	Function	printWcharLine	62:0:999:1254							
ANR	633697	FunctionDef	printWcharLine (wchar_t wideChar)		633696	0					
ANR	633698	CompoundStatement		63:0:1039:1254	633696	0					
ANR	633699	IdentifierDeclStatement	wchar_t s [ 2 ] ;	66:4:1165:1177	633696	0	True				
ANR	633700	IdentifierDecl	s [ 2 ]		633696	0					
ANR	633701	IdentifierDeclType	wchar_t [ 2 ]		633696	0					
ANR	633702	Identifier	s		633696	1					
ANR	633703	PrimaryExpression	2		633696	2					
ANR	633704	ExpressionStatement	s [ 0 ] = wideChar	67:8:1188:1203	633696	1	True				
ANR	633705	AssignmentExpression	s [ 0 ] = wideChar		633696	0		=			
ANR	633706	ArrayIndexing	s [ 0 ]		633696	0					
ANR	633707	Identifier	s		633696	0					
ANR	633708	PrimaryExpression	0		633696	1					
ANR	633709	Identifier	wideChar		633696	1					
ANR	633710	Statement	s	68:8:1214:1214	633696	2	True				
ANR	633711	Statement	[	68:9:1215:1215	633696	3	True				
ANR	633712	Statement	1	68:10:1216:1216	633696	4	True				
ANR	633713	Statement	]	68:11:1217:1217	633696	5	True				
ANR	633714	Statement	=	68:13:1219:1219	633696	6	True				
ANR	633715	Statement	L	68:15:1221:1221	633696	7	True				
ANR	633716	ExpressionStatement	'\\0'	68:16:1222:1226	633696	8	True				
ANR	633717	PrimaryExpression	'\\0'		633696	0					
ANR	633718	ExpressionStatement	"printf ( ""%ls\\n"" , s )"	69:4:1233:1251	633696	9	True				
ANR	633719	CallExpression	"printf ( ""%ls\\n"" , s )"		633696	0					
ANR	633720	Callee	printf		633696	0					
ANR	633721	Identifier	printf		633696	0					
ANR	633722	ArgumentList	"""%ls\\n"""		633696	1					
ANR	633723	Argument	"""%ls\\n"""		633696	0					
ANR	633724	PrimaryExpression	"""%ls\\n"""		633696	0					
ANR	633725	Argument	s		633696	1					
ANR	633726	Identifier	s		633696	0					
ANR	633727	ReturnType	void		633696	1					
ANR	633728	Identifier	printWcharLine		633696	2					
ANR	633729	ParameterList	wchar_t wideChar		633696	3					
ANR	633730	Parameter	wchar_t wideChar	62:20:1019:1034	633696	0	True				
ANR	633731	ParameterType	wchar_t		633696	0					
ANR	633732	Identifier	wideChar		633696	1					
ANR	633733	CFGEntryNode	ENTRY		633696		True				
ANR	633734	CFGExitNode	EXIT		633696		True				
ANR	633735	Symbol	s		633696						
ANR	633736	Symbol	wideChar		633696						
ANR	633737	Symbol	* s		633696						
ANR	633738	Function	printUnsignedLine	72:0:1259:1349							
ANR	633739	FunctionDef	printUnsignedLine (unsigned unsignedNumber)		633738	0					
ANR	633740	CompoundStatement		73:0:1309:1349	633738	0					
ANR	633741	ExpressionStatement	"printf ( ""%u\\n"" , unsignedNumber )"	74:4:1316:1346	633738	0	True				
ANR	633742	CallExpression	"printf ( ""%u\\n"" , unsignedNumber )"		633738	0					
ANR	633743	Callee	printf		633738	0					
ANR	633744	Identifier	printf		633738	0					
ANR	633745	ArgumentList	"""%u\\n"""		633738	1					
ANR	633746	Argument	"""%u\\n"""		633738	0					
ANR	633747	PrimaryExpression	"""%u\\n"""		633738	0					
ANR	633748	Argument	unsignedNumber		633738	1					
ANR	633749	Identifier	unsignedNumber		633738	0					
ANR	633750	ReturnType	void		633738	1					
ANR	633751	Identifier	printUnsignedLine		633738	2					
ANR	633752	ParameterList	unsigned unsignedNumber		633738	3					
ANR	633753	Parameter	unsigned unsignedNumber	72:23:1282:1304	633738	0	True				
ANR	633754	ParameterType	unsigned		633738	0					
ANR	633755	Identifier	unsignedNumber		633738	1					
ANR	633756	CFGEntryNode	ENTRY		633738		True				
ANR	633757	CFGExitNode	EXIT		633738		True				
ANR	633758	Symbol	unsignedNumber		633738						
ANR	633759	Function	printHexUnsignedCharLine	77:0:1354:1464							
ANR	633760	FunctionDef	printHexUnsignedCharLine (unsigned char unsignedCharacter)		633759	0					
ANR	633761	CompoundStatement		78:0:1419:1464	633759	0					
ANR	633762	ExpressionStatement	"printf ( ""%02x\\n"" , unsignedCharacter )"	79:4:1426:1461	633759	0	True				
ANR	633763	CallExpression	"printf ( ""%02x\\n"" , unsignedCharacter )"		633759	0					
ANR	633764	Callee	printf		633759	0					
ANR	633765	Identifier	printf		633759	0					
ANR	633766	ArgumentList	"""%02x\\n"""		633759	1					
ANR	633767	Argument	"""%02x\\n"""		633759	0					
ANR	633768	PrimaryExpression	"""%02x\\n"""		633759	0					
ANR	633769	Argument	unsignedCharacter		633759	1					
ANR	633770	Identifier	unsignedCharacter		633759	0					
ANR	633771	ReturnType	void		633759	1					
ANR	633772	Identifier	printHexUnsignedCharLine		633759	2					
ANR	633773	ParameterList	unsigned char unsignedCharacter		633759	3					
ANR	633774	Parameter	unsigned char unsignedCharacter	77:30:1384:1414	633759	0	True				
ANR	633775	ParameterType	unsigned char		633759	0					
ANR	633776	Identifier	unsignedCharacter		633759	1					
ANR	633777	CFGEntryNode	ENTRY		633759		True				
ANR	633778	CFGExitNode	EXIT		633759		True				
ANR	633779	Symbol	unsignedCharacter		633759						
ANR	633780	Function	printDoubleLine	82:0:1469:1551							
ANR	633781	FunctionDef	printDoubleLine (double doubleNumber)		633780	0					
ANR	633782	CompoundStatement		83:0:1513:1551	633780	0					
ANR	633783	ExpressionStatement	"printf ( ""%g\\n"" , doubleNumber )"	84:4:1520:1548	633780	0	True				
ANR	633784	CallExpression	"printf ( ""%g\\n"" , doubleNumber )"		633780	0					
ANR	633785	Callee	printf		633780	0					
ANR	633786	Identifier	printf		633780	0					
ANR	633787	ArgumentList	"""%g\\n"""		633780	1					
ANR	633788	Argument	"""%g\\n"""		633780	0					
ANR	633789	PrimaryExpression	"""%g\\n"""		633780	0					
ANR	633790	Argument	doubleNumber		633780	1					
ANR	633791	Identifier	doubleNumber		633780	0					
ANR	633792	ReturnType	void		633780	1					
ANR	633793	Identifier	printDoubleLine		633780	2					
ANR	633794	ParameterList	double doubleNumber		633780	3					
ANR	633795	Parameter	double doubleNumber	82:21:1490:1508	633780	0	True				
ANR	633796	ParameterType	double		633780	0					
ANR	633797	Identifier	doubleNumber		633780	1					
ANR	633798	CFGEntryNode	ENTRY		633780		True				
ANR	633799	CFGExitNode	EXIT		633780		True				
ANR	633800	Symbol	doubleNumber		633780						
ANR	633801	Function	printStructLine	87:0:1556:1710							
ANR	633802	FunctionDef	printStructLine (const twoIntsStruct * structTwoIntsStruct)		633801	0					
ANR	633803	CompoundStatement		88:0:1622:1710	633801	0					
ANR	633804	ExpressionStatement	"printf ( ""%d -- %d\\n"" , structTwoIntsStruct -> intOne , structTwoIntsStruct -> intTwo )"	89:4:1629:1707	633801	0	True				
ANR	633805	CallExpression	"printf ( ""%d -- %d\\n"" , structTwoIntsStruct -> intOne , structTwoIntsStruct -> intTwo )"		633801	0					
ANR	633806	Callee	printf		633801	0					
ANR	633807	Identifier	printf		633801	0					
ANR	633808	ArgumentList	"""%d -- %d\\n"""		633801	1					
ANR	633809	Argument	"""%d -- %d\\n"""		633801	0					
ANR	633810	PrimaryExpression	"""%d -- %d\\n"""		633801	0					
ANR	633811	Argument	structTwoIntsStruct -> intOne		633801	1					
ANR	633812	PtrMemberAccess	structTwoIntsStruct -> intOne		633801	0					
ANR	633813	Identifier	structTwoIntsStruct		633801	0					
ANR	633814	Identifier	intOne		633801	1					
ANR	633815	Argument	structTwoIntsStruct -> intTwo		633801	2					
ANR	633816	PtrMemberAccess	structTwoIntsStruct -> intTwo		633801	0					
ANR	633817	Identifier	structTwoIntsStruct		633801	0					
ANR	633818	Identifier	intTwo		633801	1					
ANR	633819	ReturnType	void		633801	1					
ANR	633820	Identifier	printStructLine		633801	2					
ANR	633821	ParameterList	const twoIntsStruct * structTwoIntsStruct		633801	3					
ANR	633822	Parameter	const twoIntsStruct * structTwoIntsStruct	87:22:1578:1618	633801	0	True				
ANR	633823	ParameterType	const twoIntsStruct *		633801	0					
ANR	633824	Identifier	structTwoIntsStruct		633801	1					
ANR	633825	CFGEntryNode	ENTRY		633801		True				
ANR	633826	CFGExitNode	EXIT		633801		True				
ANR	633827	Symbol	structTwoIntsStruct		633801						
ANR	633828	Symbol	structTwoIntsStruct -> intTwo		633801						
ANR	633829	Symbol	* structTwoIntsStruct		633801						
ANR	633830	Symbol	structTwoIntsStruct -> intOne		633801						
ANR	633831	Function	printBytesLine	92:0:1715:1921							
ANR	633832	FunctionDef	"printBytesLine (const unsigned char * bytes , size_t numBytes)"		633831	0					
ANR	633833	CompoundStatement		93:0:1782:1921	633831	0					
ANR	633834	IdentifierDeclStatement	size_t i ;	94:4:1789:1797	633831	0	True				
ANR	633835	IdentifierDecl	i		633831	0					
ANR	633836	IdentifierDeclType	size_t		633831	0					
ANR	633837	Identifier	i		633831	1					
ANR	633838	ForStatement	for ( i = 0 ; i < numBytes ; ++ i )		633831	1					
ANR	633839	ForInit	i = 0 ;	95:9:1809:1814	633831	0	True				
ANR	633840	AssignmentExpression	i = 0		633831	0		=			
ANR	633841	Identifier	i		633831	0					
ANR	633842	PrimaryExpression	0		633831	1					
ANR	633843	Condition	i < numBytes	95:16:1816:1827	633831	1	True				
ANR	633844	RelationalExpression	i < numBytes		633831	0		<			
ANR	633845	Identifier	i		633831	0					
ANR	633846	Identifier	numBytes		633831	1					
ANR	633847	UnaryExpression	++ i	95:30:1830:1832	633831	2	True				
ANR	633848	IncDec	++		633831	0					
ANR	633849	Identifier	i		633831	1					
ANR	633850	CompoundStatement		4:4:57:57	633831	3					
ANR	633851	ExpressionStatement	"printf ( ""%02x"" , bytes [ i ] )"	97:8:1851:1875	633831	0	True				
ANR	633852	CallExpression	"printf ( ""%02x"" , bytes [ i ] )"		633831	0					
ANR	633853	Callee	printf		633831	0					
ANR	633854	Identifier	printf		633831	0					
ANR	633855	ArgumentList	"""%02x"""		633831	1					
ANR	633856	Argument	"""%02x"""		633831	0					
ANR	633857	PrimaryExpression	"""%02x"""		633831	0					
ANR	633858	Argument	bytes [ i ]		633831	1					
ANR	633859	ArrayIndexing	bytes [ i ]		633831	0					
ANR	633860	Identifier	bytes		633831	0					
ANR	633861	Identifier	i		633831	1					
ANR	633862	ExpressionStatement	"puts ( """" )"	99:4:1889:1897	633831	2	True				
ANR	633863	CallExpression	"puts ( """" )"		633831	0					
ANR	633864	Callee	puts		633831	0					
ANR	633865	Identifier	puts		633831	0					
ANR	633866	ArgumentList	""""""		633831	1					
ANR	633867	Argument	""""""		633831	0					
ANR	633868	PrimaryExpression	""""""		633831	0					
ANR	633869	ReturnType	void		633831	1					
ANR	633870	Identifier	printBytesLine		633831	2					
ANR	633871	ParameterList	"const unsigned char * bytes , size_t numBytes"		633831	3					
ANR	633872	Parameter	const unsigned char * bytes	92:20:1735:1761	633831	0	True				
ANR	633873	ParameterType	const unsigned char *		633831	0					
ANR	633874	Identifier	bytes		633831	1					
ANR	633875	Parameter	size_t numBytes	92:49:1764:1778	633831	1	True				
ANR	633876	ParameterType	size_t		633831	0					
ANR	633877	Identifier	numBytes		633831	1					
ANR	633878	CFGEntryNode	ENTRY		633831		True				
ANR	633879	CFGExitNode	EXIT		633831		True				
ANR	633880	Symbol	numBytes		633831						
ANR	633881	Symbol	* i		633831						
ANR	633882	Symbol	bytes		633831						
ANR	633883	Symbol	i		633831						
ANR	633884	Symbol	* bytes		633831						
ANR	633885	Function	decodeHexChars	105:0:2143:2882							
ANR	633886	FunctionDef	"decodeHexChars (unsigned char * bytes , size_t numBytes , const char * hex)"		633885	0					
ANR	633887	CompoundStatement		106:0:2224:2882	633885	0					
ANR	633888	IdentifierDeclStatement	size_t numWritten = 0 ;	107:4:2231:2252	633885	0	True				
ANR	633889	IdentifierDecl	numWritten = 0		633885	0					
ANR	633890	IdentifierDeclType	size_t		633885	0					
ANR	633891	Identifier	numWritten		633885	1					
ANR	633892	AssignmentExpression	numWritten = 0		633885	2		=			
ANR	633893	Identifier	numWritten		633885	0					
ANR	633894	PrimaryExpression	0		633885	1					
ANR	633895	WhileStatement	while ( numWritten < numBytes && isxdigit ( hex [ 2 * numWritten ] ) && isxdigit ( hex [ 2 * numWritten + 1 ] ) )		633885	1					
ANR	633896	Condition	numWritten < numBytes && isxdigit ( hex [ 2 * numWritten ] ) && isxdigit ( hex [ 2 * numWritten + 1 ] )	113:11:2601:2691	633885	0	True				
ANR	633897	AndExpression	numWritten < numBytes && isxdigit ( hex [ 2 * numWritten ] ) && isxdigit ( hex [ 2 * numWritten + 1 ] )		633885	0		&&			
ANR	633898	RelationalExpression	numWritten < numBytes		633885	0		<			
ANR	633899	Identifier	numWritten		633885	0					
ANR	633900	Identifier	numBytes		633885	1					
ANR	633901	AndExpression	isxdigit ( hex [ 2 * numWritten ] ) && isxdigit ( hex [ 2 * numWritten + 1 ] )		633885	1		&&			
ANR	633902	CallExpression	isxdigit ( hex [ 2 * numWritten ] )		633885	0					
ANR	633903	Callee	isxdigit		633885	0					
ANR	633904	Identifier	isxdigit		633885	0					
ANR	633905	ArgumentList	hex [ 2 * numWritten ]		633885	1					
ANR	633906	Argument	hex [ 2 * numWritten ]		633885	0					
ANR	633907	ArrayIndexing	hex [ 2 * numWritten ]		633885	0					
ANR	633908	Identifier	hex		633885	0					
ANR	633909	MultiplicativeExpression	2 * numWritten		633885	1		*			
ANR	633910	PrimaryExpression	2		633885	0					
ANR	633911	Identifier	numWritten		633885	1					
ANR	633912	CallExpression	isxdigit ( hex [ 2 * numWritten + 1 ] )		633885	1					
ANR	633913	Callee	isxdigit		633885	0					
ANR	633914	Identifier	isxdigit		633885	0					
ANR	633915	ArgumentList	hex [ 2 * numWritten + 1 ]		633885	1					
ANR	633916	Argument	hex [ 2 * numWritten + 1 ]		633885	0					
ANR	633917	ArrayIndexing	hex [ 2 * numWritten + 1 ]		633885	0					
ANR	633918	Identifier	hex		633885	0					
ANR	633919	AdditiveExpression	2 * numWritten + 1		633885	1		+			
ANR	633920	MultiplicativeExpression	2 * numWritten		633885	0		*			
ANR	633921	PrimaryExpression	2		633885	0					
ANR	633922	Identifier	numWritten		633885	1					
ANR	633923	PrimaryExpression	1		633885	1					
ANR	633924	CompoundStatement		10:8:485:493	633885	1					
ANR	633925	IdentifierDeclStatement	int byte ;	115:8:2710:2718	633885	0	True				
ANR	633926	IdentifierDecl	byte		633885	0					
ANR	633927	IdentifierDeclType	int		633885	0					
ANR	633928	Identifier	byte		633885	1					
ANR	633929	ExpressionStatement	"sscanf ( & hex [ 2 * numWritten ] , ""%02x"" , & byte )"	116:8:2729:2772	633885	1	True				
ANR	633930	CallExpression	"sscanf ( & hex [ 2 * numWritten ] , ""%02x"" , & byte )"		633885	0					
ANR	633931	Callee	sscanf		633885	0					
ANR	633932	Identifier	sscanf		633885	0					
ANR	633933	ArgumentList	& hex [ 2 * numWritten ]		633885	1					
ANR	633934	Argument	& hex [ 2 * numWritten ]		633885	0					
ANR	633935	UnaryOperationExpression	& hex [ 2 * numWritten ]		633885	0					
ANR	633936	UnaryOperator	&		633885	0					
ANR	633937	ArrayIndexing	hex [ 2 * numWritten ]		633885	1					
ANR	633938	Identifier	hex		633885	0					
ANR	633939	MultiplicativeExpression	2 * numWritten		633885	1		*			
ANR	633940	PrimaryExpression	2		633885	0					
ANR	633941	Identifier	numWritten		633885	1					
ANR	633942	Argument	"""%02x"""		633885	1					
ANR	633943	PrimaryExpression	"""%02x"""		633885	0					
ANR	633944	Argument	& byte		633885	2					
ANR	633945	UnaryOperationExpression	& byte		633885	0					
ANR	633946	UnaryOperator	&		633885	0					
ANR	633947	Identifier	byte		633885	1					
ANR	633948	ExpressionStatement	bytes [ numWritten ] = ( unsigned char ) byte	117:8:2783:2823	633885	2	True				
ANR	633949	AssignmentExpression	bytes [ numWritten ] = ( unsigned char ) byte		633885	0		=			
ANR	633950	ArrayIndexing	bytes [ numWritten ]		633885	0					
ANR	633951	Identifier	bytes		633885	0					
ANR	633952	Identifier	numWritten		633885	1					
ANR	633953	CastExpression	( unsigned char ) byte		633885	1					
ANR	633954	CastTarget	unsigned char		633885	0					
ANR	633955	Identifier	byte		633885	1					
ANR	633956	ExpressionStatement	++ numWritten	118:8:2834:2846	633885	3	True				
ANR	633957	UnaryExpression	++ numWritten		633885	0					
ANR	633958	IncDec	++		633885	0					
ANR	633959	Identifier	numWritten		633885	1					
ANR	633960	ReturnStatement	return numWritten ;	121:4:2862:2879	633885	2	True				
ANR	633961	Identifier	numWritten		633885	0					
ANR	633962	ReturnType	size_t		633885	1					
ANR	633963	Identifier	decodeHexChars		633885	2					
ANR	633964	ParameterList	"unsigned char * bytes , size_t numBytes , const char * hex"		633885	3					
ANR	633965	Parameter	unsigned char * bytes	105:22:2165:2185	633885	0	True				
ANR	633966	ParameterType	unsigned char *		633885	0					
ANR	633967	Identifier	bytes		633885	1					
ANR	633968	Parameter	size_t numBytes	105:45:2188:2202	633885	1	True				
ANR	633969	ParameterType	size_t		633885	0					
ANR	633970	Identifier	numBytes		633885	1					
ANR	633971	Parameter	const char * hex	105:62:2205:2220	633885	2	True				
ANR	633972	ParameterType	const char *		633885	0					
ANR	633973	Identifier	hex		633885	1					
ANR	633974	CFGEntryNode	ENTRY		633885		True				
ANR	633975	CFGExitNode	EXIT		633885		True				
ANR	633976	Symbol	numBytes		633885						
ANR	633977	Symbol	* numWritten		633885						
ANR	633978	Symbol	bytes		633885						
ANR	633979	Symbol	byte		633885						
ANR	633980	Symbol	hex		633885						
ANR	633981	Symbol	* hex		633885						
ANR	633982	Symbol	numWritten		633885						
ANR	633983	Symbol	& byte		633885						
ANR	633984	Symbol	* bytes		633885						
ANR	633985	Symbol	isxdigit		633885						
ANR	633986	Function	decodeHexWChars	127:1:3105:3855							
ANR	633987	FunctionDef	"decodeHexWChars (unsigned char * bytes , size_t numBytes , const wchar_t * hex)"		633986	0					
ANR	633988	CompoundStatement		128:1:3191:3855	633986	0					
ANR	633989	IdentifierDeclStatement	size_t numWritten = 0 ;	129:4:3198:3219	633986	0	True				
ANR	633990	IdentifierDecl	numWritten = 0		633986	0					
ANR	633991	IdentifierDeclType	size_t		633986	0					
ANR	633992	Identifier	numWritten		633986	1					
ANR	633993	AssignmentExpression	numWritten = 0		633986	2		=			
ANR	633994	Identifier	numWritten		633986	0					
ANR	633995	PrimaryExpression	0		633986	1					
ANR	633996	WhileStatement	while ( numWritten < numBytes && iswxdigit ( hex [ 2 * numWritten ] ) && iswxdigit ( hex [ 2 * numWritten + 1 ] ) )		633986	1					
ANR	633997	Condition	numWritten < numBytes && iswxdigit ( hex [ 2 * numWritten ] ) && iswxdigit ( hex [ 2 * numWritten + 1 ] )	135:11:3570:3662	633986	0	True				
ANR	633998	AndExpression	numWritten < numBytes && iswxdigit ( hex [ 2 * numWritten ] ) && iswxdigit ( hex [ 2 * numWritten + 1 ] )		633986	0		&&			
ANR	633999	RelationalExpression	numWritten < numBytes		633986	0		<			
ANR	634000	Identifier	numWritten		633986	0					
ANR	634001	Identifier	numBytes		633986	1					
ANR	634002	AndExpression	iswxdigit ( hex [ 2 * numWritten ] ) && iswxdigit ( hex [ 2 * numWritten + 1 ] )		633986	1		&&			
ANR	634003	CallExpression	iswxdigit ( hex [ 2 * numWritten ] )		633986	0					
ANR	634004	Callee	iswxdigit		633986	0					
ANR	634005	Identifier	iswxdigit		633986	0					
ANR	634006	ArgumentList	hex [ 2 * numWritten ]		633986	1					
ANR	634007	Argument	hex [ 2 * numWritten ]		633986	0					
ANR	634008	ArrayIndexing	hex [ 2 * numWritten ]		633986	0					
ANR	634009	Identifier	hex		633986	0					
ANR	634010	MultiplicativeExpression	2 * numWritten		633986	1		*			
ANR	634011	PrimaryExpression	2		633986	0					
ANR	634012	Identifier	numWritten		633986	1					
ANR	634013	CallExpression	iswxdigit ( hex [ 2 * numWritten + 1 ] )		633986	1					
ANR	634014	Callee	iswxdigit		633986	0					
ANR	634015	Identifier	iswxdigit		633986	0					
ANR	634016	ArgumentList	hex [ 2 * numWritten + 1 ]		633986	1					
ANR	634017	Argument	hex [ 2 * numWritten + 1 ]		633986	0					
ANR	634018	ArrayIndexing	hex [ 2 * numWritten + 1 ]		633986	0					
ANR	634019	Identifier	hex		633986	0					
ANR	634020	AdditiveExpression	2 * numWritten + 1		633986	1		+			
ANR	634021	MultiplicativeExpression	2 * numWritten		633986	0		*			
ANR	634022	PrimaryExpression	2		633986	0					
ANR	634023	Identifier	numWritten		633986	1					
ANR	634024	PrimaryExpression	1		633986	1					
ANR	634025	CompoundStatement		10:8:489:497	633986	1					
ANR	634026	IdentifierDeclStatement	int byte ;	137:8:3681:3689	633986	0	True				
ANR	634027	IdentifierDecl	byte		633986	0					
ANR	634028	IdentifierDeclType	int		633986	0					
ANR	634029	Identifier	byte		633986	1					
ANR	634030	Statement	swscanf	138:8:3700:3706	633986	1	True				
ANR	634031	Statement	(	138:15:3707:3707	633986	2	True				
ANR	634032	Statement	&	138:16:3708:3708	633986	3	True				
ANR	634033	Statement	hex	138:17:3709:3711	633986	4	True				
ANR	634034	Statement	[	138:20:3712:3712	633986	5	True				
ANR	634035	Statement	2	138:21:3713:3713	633986	6	True				
ANR	634036	Statement	*	138:23:3715:3715	633986	7	True				
ANR	634037	Statement	numWritten	138:25:3717:3726	633986	8	True				
ANR	634038	Statement	]	138:35:3727:3727	633986	9	True				
ANR	634039	Statement	","	138:36:3728:3728	633986	10	True				
ANR	634040	Statement	L	138:38:3730:3730	633986	11	True				
ANR	634041	Statement	"""%02x"""	138:39:3731:3736	633986	12	True				
ANR	634042	Statement	","	138:45:3737:3737	633986	13	True				
ANR	634043	Statement	&	138:47:3739:3739	633986	14	True				
ANR	634044	Statement	byte	138:48:3740:3743	633986	15	True				
ANR	634045	Statement	)	138:52:3744:3744	633986	16	True				
ANR	634046	ExpressionStatement		138:53:3745:3745	633986	17	True				
ANR	634047	ExpressionStatement	bytes [ numWritten ] = ( unsigned char ) byte	139:8:3756:3796	633986	18	True				
ANR	634048	AssignmentExpression	bytes [ numWritten ] = ( unsigned char ) byte		633986	0		=			
ANR	634049	ArrayIndexing	bytes [ numWritten ]		633986	0					
ANR	634050	Identifier	bytes		633986	0					
ANR	634051	Identifier	numWritten		633986	1					
ANR	634052	CastExpression	( unsigned char ) byte		633986	1					
ANR	634053	CastTarget	unsigned char		633986	0					
ANR	634054	Identifier	byte		633986	1					
ANR	634055	ExpressionStatement	++ numWritten	140:8:3807:3819	633986	19	True				
ANR	634056	UnaryExpression	++ numWritten		633986	0					
ANR	634057	IncDec	++		633986	0					
ANR	634058	Identifier	numWritten		633986	1					
ANR	634059	ReturnStatement	return numWritten ;	143:4:3835:3852	633986	2	True				
ANR	634060	Identifier	numWritten		633986	0					
ANR	634061	ReturnType	size_t		633986	1					
ANR	634062	Identifier	decodeHexWChars		633986	2					
ANR	634063	ParameterList	"unsigned char * bytes , size_t numBytes , const wchar_t * hex"		633986	3					
ANR	634064	Parameter	unsigned char * bytes	127:24:3128:3148	633986	0	True				
ANR	634065	ParameterType	unsigned char *		633986	0					
ANR	634066	Identifier	bytes		633986	1					
ANR	634067	Parameter	size_t numBytes	127:47:3151:3165	633986	1	True				
ANR	634068	ParameterType	size_t		633986	0					
ANR	634069	Identifier	numBytes		633986	1					
ANR	634070	Parameter	const wchar_t * hex	127:64:3168:3186	633986	2	True				
ANR	634071	ParameterType	const wchar_t *		633986	0					
ANR	634072	Identifier	hex		633986	1					
ANR	634073	CFGEntryNode	ENTRY		633986		True				
ANR	634074	CFGExitNode	EXIT		633986		True				
ANR	634075	Symbol	numBytes		633986						
ANR	634076	Symbol	* numWritten		633986						
ANR	634077	Symbol	iswxdigit		633986						
ANR	634078	Symbol	bytes		633986						
ANR	634079	Symbol	byte		633986						
ANR	634080	Symbol	hex		633986						
ANR	634081	Symbol	* hex		633986						
ANR	634082	Symbol	numWritten		633986						
ANR	634083	Symbol	* bytes		633986						
ANR	634084	Function	globalReturnsTrue	148:0:4010:4054							
ANR	634085	FunctionDef	globalReturnsTrue ()		634084	0					
ANR	634086	CompoundStatement		149:0:4036:4054	634084	0					
ANR	634087	ReturnStatement	return 1 ;	150:4:4043:4051	634084	0	True				
ANR	634088	PrimaryExpression	1		634084	0					
ANR	634089	ReturnType	int		634084	1					
ANR	634090	Identifier	globalReturnsTrue		634084	2					
ANR	634091	ParameterList			634084	3					
ANR	634092	CFGEntryNode	ENTRY		634084		True				
ANR	634093	CFGExitNode	EXIT		634084		True				
ANR	634094	Function	globalReturnsFalse	153:0:4059:4104							
ANR	634095	FunctionDef	globalReturnsFalse ()		634094	0					
ANR	634096	CompoundStatement		154:0:4086:4104	634094	0					
ANR	634097	ReturnStatement	return 0 ;	155:4:4093:4101	634094	0	True				
ANR	634098	PrimaryExpression	0		634094	0					
ANR	634099	ReturnType	int		634094	1					
ANR	634100	Identifier	globalReturnsFalse		634094	2					
ANR	634101	ParameterList			634094	3					
ANR	634102	CFGEntryNode	ENTRY		634094		True				
ANR	634103	CFGExitNode	EXIT		634094		True				
ANR	634104	Function	globalReturnsTrueOrFalse	158:0:4109:4171							
ANR	634105	FunctionDef	globalReturnsTrueOrFalse ()		634104	0					
ANR	634106	CompoundStatement		159:0:4142:4171	634104	0					
ANR	634107	ReturnStatement	return ( rand ( ) % 2 ) ;	160:4:4149:4168	634104	0	True				
ANR	634108	MultiplicativeExpression	rand ( ) % 2		634104	0		%			
ANR	634109	CallExpression	rand ( )		634104	0					
ANR	634110	Callee	rand		634104	0					
ANR	634111	Identifier	rand		634104	0					
ANR	634112	ArgumentList			634104	1					
ANR	634113	PrimaryExpression	2		634104	1					
ANR	634114	ReturnType	int		634104	1					
ANR	634115	Identifier	globalReturnsTrueOrFalse		634104	2					
ANR	634116	ParameterList			634104	3					
ANR	634117	CFGEntryNode	ENTRY		634104		True				
ANR	634118	CFGExitNode	EXIT		634104		True				
ANR	634119	Symbol	rand		634104						
ANR	634120	DeclStmt									
ANR	634121	Decl							const int	const int	GLOBAL_CONST_TRUE
ANR	634122	DeclStmt									
ANR	634123	Decl							const int	const int	GLOBAL_CONST_FALSE
ANR	634124	DeclStmt									
ANR	634125	Decl							const int	const int	GLOBAL_CONST_FIVE
ANR	634126	DeclStmt									
ANR	634127	Decl							int	int	globalTrue
ANR	634128	DeclStmt									
ANR	634129	Decl							int	int	globalFalse
ANR	634130	DeclStmt									
ANR	634131	Decl							int	int	globalFive
ANR	634132	Function	good1	179:0:4905:4920							
ANR	634133	FunctionDef	good1 ()		634132	0					
ANR	634134	CompoundStatement		179:13:4918:4920	634132	0					
ANR	634135	ReturnType	void		634132	1					
ANR	634136	Identifier	good1		634132	2					
ANR	634137	ParameterList			634132	3					
ANR	634138	CFGEntryNode	ENTRY		634132		True				
ANR	634139	CFGExitNode	EXIT		634132		True				
ANR	634140	Function	good2	180:0:4923:4938							
ANR	634141	FunctionDef	good2 ()		634140	0					
ANR	634142	CompoundStatement		180:13:4936:4938	634140	0					
ANR	634143	ReturnType	void		634140	1					
ANR	634144	Identifier	good2		634140	2					
ANR	634145	ParameterList			634140	3					
ANR	634146	CFGEntryNode	ENTRY		634140		True				
ANR	634147	CFGExitNode	EXIT		634140		True				
ANR	634148	Function	good3	181:0:4941:4956							
ANR	634149	FunctionDef	good3 ()		634148	0					
ANR	634150	CompoundStatement		181:13:4954:4956	634148	0					
ANR	634151	ReturnType	void		634148	1					
ANR	634152	Identifier	good3		634148	2					
ANR	634153	ParameterList			634148	3					
ANR	634154	CFGEntryNode	ENTRY		634148		True				
ANR	634155	CFGExitNode	EXIT		634148		True				
ANR	634156	Function	good4	182:0:4959:4974							
ANR	634157	FunctionDef	good4 ()		634156	0					
ANR	634158	CompoundStatement		182:13:4972:4974	634156	0					
ANR	634159	ReturnType	void		634156	1					
ANR	634160	Identifier	good4		634156	2					
ANR	634161	ParameterList			634156	3					
ANR	634162	CFGEntryNode	ENTRY		634156		True				
ANR	634163	CFGExitNode	EXIT		634156		True				
ANR	634164	Function	good5	183:0:4977:4992							
ANR	634165	FunctionDef	good5 ()		634164	0					
ANR	634166	CompoundStatement		183:13:4990:4992	634164	0					
ANR	634167	ReturnType	void		634164	1					
ANR	634168	Identifier	good5		634164	2					
ANR	634169	ParameterList			634164	3					
ANR	634170	CFGEntryNode	ENTRY		634164		True				
ANR	634171	CFGExitNode	EXIT		634164		True				
ANR	634172	Function	good6	184:0:4995:5010							
ANR	634173	FunctionDef	good6 ()		634172	0					
ANR	634174	CompoundStatement		184:13:5008:5010	634172	0					
ANR	634175	ReturnType	void		634172	1					
ANR	634176	Identifier	good6		634172	2					
ANR	634177	ParameterList			634172	3					
ANR	634178	CFGEntryNode	ENTRY		634172		True				
ANR	634179	CFGExitNode	EXIT		634172		True				
ANR	634180	Function	good7	185:0:5013:5028							
ANR	634181	FunctionDef	good7 ()		634180	0					
ANR	634182	CompoundStatement		185:13:5026:5028	634180	0					
ANR	634183	ReturnType	void		634180	1					
ANR	634184	Identifier	good7		634180	2					
ANR	634185	ParameterList			634180	3					
ANR	634186	CFGEntryNode	ENTRY		634180		True				
ANR	634187	CFGExitNode	EXIT		634180		True				
ANR	634188	Function	good8	186:0:5031:5046							
ANR	634189	FunctionDef	good8 ()		634188	0					
ANR	634190	CompoundStatement		186:13:5044:5046	634188	0					
ANR	634191	ReturnType	void		634188	1					
ANR	634192	Identifier	good8		634188	2					
ANR	634193	ParameterList			634188	3					
ANR	634194	CFGEntryNode	ENTRY		634188		True				
ANR	634195	CFGExitNode	EXIT		634188		True				
ANR	634196	Function	good9	187:0:5049:5064							
ANR	634197	FunctionDef	good9 ()		634196	0					
ANR	634198	CompoundStatement		187:13:5062:5064	634196	0					
ANR	634199	ReturnType	void		634196	1					
ANR	634200	Identifier	good9		634196	2					
ANR	634201	ParameterList			634196	3					
ANR	634202	CFGEntryNode	ENTRY		634196		True				
ANR	634203	CFGExitNode	EXIT		634196		True				
ANR	634204	Function	bad1	190:0:5112:5126							
ANR	634205	FunctionDef	bad1 ()		634204	0					
ANR	634206	CompoundStatement		190:12:5124:5126	634204	0					
ANR	634207	ReturnType	void		634204	1					
ANR	634208	Identifier	bad1		634204	2					
ANR	634209	ParameterList			634204	3					
ANR	634210	CFGEntryNode	ENTRY		634204		True				
ANR	634211	CFGExitNode	EXIT		634204		True				
ANR	634212	Function	bad2	191:0:5129:5143							
ANR	634213	FunctionDef	bad2 ()		634212	0					
ANR	634214	CompoundStatement		191:12:5141:5143	634212	0					
ANR	634215	ReturnType	void		634212	1					
ANR	634216	Identifier	bad2		634212	2					
ANR	634217	ParameterList			634212	3					
ANR	634218	CFGEntryNode	ENTRY		634212		True				
ANR	634219	CFGExitNode	EXIT		634212		True				
ANR	634220	Function	bad3	192:0:5146:5160							
ANR	634221	FunctionDef	bad3 ()		634220	0					
ANR	634222	CompoundStatement		192:12:5158:5160	634220	0					
ANR	634223	ReturnType	void		634220	1					
ANR	634224	Identifier	bad3		634220	2					
ANR	634225	ParameterList			634220	3					
ANR	634226	CFGEntryNode	ENTRY		634220		True				
ANR	634227	CFGExitNode	EXIT		634220		True				
ANR	634228	Function	bad4	193:0:5163:5177							
ANR	634229	FunctionDef	bad4 ()		634228	0					
ANR	634230	CompoundStatement		193:12:5175:5177	634228	0					
ANR	634231	ReturnType	void		634228	1					
ANR	634232	Identifier	bad4		634228	2					
ANR	634233	ParameterList			634228	3					
ANR	634234	CFGEntryNode	ENTRY		634228		True				
ANR	634235	CFGExitNode	EXIT		634228		True				
ANR	634236	Function	bad5	194:0:5180:5194							
ANR	634237	FunctionDef	bad5 ()		634236	0					
ANR	634238	CompoundStatement		194:12:5192:5194	634236	0					
ANR	634239	ReturnType	void		634236	1					
ANR	634240	Identifier	bad5		634236	2					
ANR	634241	ParameterList			634236	3					
ANR	634242	CFGEntryNode	ENTRY		634236		True				
ANR	634243	CFGExitNode	EXIT		634236		True				
ANR	634244	Function	bad6	195:0:5197:5211							
ANR	634245	FunctionDef	bad6 ()		634244	0					
ANR	634246	CompoundStatement		195:12:5209:5211	634244	0					
ANR	634247	ReturnType	void		634244	1					
ANR	634248	Identifier	bad6		634244	2					
ANR	634249	ParameterList			634244	3					
ANR	634250	CFGEntryNode	ENTRY		634244		True				
ANR	634251	CFGExitNode	EXIT		634244		True				
ANR	634252	Function	bad7	196:0:5214:5228							
ANR	634253	FunctionDef	bad7 ()		634252	0					
ANR	634254	CompoundStatement		196:12:5226:5228	634252	0					
ANR	634255	ReturnType	void		634252	1					
ANR	634256	Identifier	bad7		634252	2					
ANR	634257	ParameterList			634252	3					
ANR	634258	CFGEntryNode	ENTRY		634252		True				
ANR	634259	CFGExitNode	EXIT		634252		True				
ANR	634260	Function	bad8	197:0:5231:5245							
ANR	634261	FunctionDef	bad8 ()		634260	0					
ANR	634262	CompoundStatement		197:12:5243:5245	634260	0					
ANR	634263	ReturnType	void		634260	1					
ANR	634264	Identifier	bad8		634260	2					
ANR	634265	ParameterList			634260	3					
ANR	634266	CFGEntryNode	ENTRY		634260		True				
ANR	634267	CFGExitNode	EXIT		634260		True				
ANR	634268	Function	bad9	198:0:5248:5262							
ANR	634269	FunctionDef	bad9 ()		634268	0					
ANR	634270	CompoundStatement		198:12:5260:5262	634268	0					
ANR	634271	ReturnType	void		634268	1					
ANR	634272	Identifier	bad9		634268	2					
ANR	634273	ParameterList			634268	3					
ANR	634274	CFGEntryNode	ENTRY		634268		True				
ANR	634275	CFGExitNode	EXIT		634268		True				
ANR	634276	DeclStmt									
ANR	634277	Decl							int	int	globalArgc
ANR	634278	DeclStmt									
ANR	634279	Decl							char	char * *	globalArgv
