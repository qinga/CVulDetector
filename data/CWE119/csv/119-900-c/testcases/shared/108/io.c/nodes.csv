command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	838301	File	/develop/joernDwkProcess/joern-dev/./output/data/CWE119/source-code/119-900-c/testcases/shared/108/io.c								
ANR	838302	Function	printLine	11:0:174:281							
ANR	838303	FunctionDef	printLine (const char * line)		838302	0					
ANR	838304	CompoundStatement		12:0:210:281	838302	0					
ANR	838305	IfStatement	if ( line != NULL )		838302	0					
ANR	838306	Condition	line != NULL	13:7:220:231	838302	0	True				
ANR	838307	EqualityExpression	line != NULL		838302	0		!=			
ANR	838308	Identifier	line		838302	0					
ANR	838309	Identifier	NULL		838302	1					
ANR	838310	CompoundStatement		3:4:29:29	838302	1					
ANR	838311	ExpressionStatement	"printf ( ""%s\\n"" , line )"	15:8:251:271	838302	0	True				
ANR	838312	CallExpression	"printf ( ""%s\\n"" , line )"		838302	0					
ANR	838313	Callee	printf		838302	0					
ANR	838314	Identifier	printf		838302	0					
ANR	838315	ArgumentList	"""%s\\n"""		838302	1					
ANR	838316	Argument	"""%s\\n"""		838302	0					
ANR	838317	PrimaryExpression	"""%s\\n"""		838302	0					
ANR	838318	Argument	line		838302	1					
ANR	838319	Identifier	line		838302	0					
ANR	838320	ReturnType	void		838302	1					
ANR	838321	Identifier	printLine		838302	2					
ANR	838322	ParameterList	const char * line		838302	3					
ANR	838323	Parameter	const char * line	11:16:190:206	838302	0	True				
ANR	838324	ParameterType	const char *		838302	0					
ANR	838325	Identifier	line		838302	1					
ANR	838326	CFGEntryNode	ENTRY		838302		True				
ANR	838327	CFGExitNode	EXIT		838302		True				
ANR	838328	Symbol	NULL		838302						
ANR	838329	Symbol	line		838302						
ANR	838330	Function	printWLine	19:0:286:400							
ANR	838331	FunctionDef	printWLine (const wchar_t * line)		838330	0					
ANR	838332	CompoundStatement		20:0:326:400	838330	0					
ANR	838333	IfStatement	if ( line != NULL )		838330	0					
ANR	838334	Condition	line != NULL	21:7:336:347	838330	0	True				
ANR	838335	EqualityExpression	line != NULL		838330	0		!=			
ANR	838336	Identifier	line		838330	0					
ANR	838337	Identifier	NULL		838330	1					
ANR	838338	CompoundStatement		3:4:29:29	838330	1					
ANR	838339	Statement	wprintf	23:8:367:373	838330	0	True				
ANR	838340	Statement	(	23:15:374:374	838330	1	True				
ANR	838341	Statement	L	23:16:375:375	838330	2	True				
ANR	838342	Statement	"""%ls\\n"""	23:17:376:382	838330	3	True				
ANR	838343	Statement	","	23:24:383:383	838330	4	True				
ANR	838344	Statement	line	23:26:385:388	838330	5	True				
ANR	838345	Statement	)	23:30:389:389	838330	6	True				
ANR	838346	ExpressionStatement		23:31:390:390	838330	7	True				
ANR	838347	ReturnType	void		838330	1					
ANR	838348	Identifier	printWLine		838330	2					
ANR	838349	ParameterList	const wchar_t * line		838330	3					
ANR	838350	Parameter	const wchar_t * line	19:17:303:322	838330	0	True				
ANR	838351	ParameterType	const wchar_t *		838330	0					
ANR	838352	Identifier	line		838330	1					
ANR	838353	CFGEntryNode	ENTRY		838330		True				
ANR	838354	CFGExitNode	EXIT		838330		True				
ANR	838355	Symbol	NULL		838330						
ANR	838356	Symbol	line		838330						
ANR	838357	Function	printIntLine	27:0:405:475							
ANR	838358	FunctionDef	printIntLine (int intNumber)		838357	0					
ANR	838359	CompoundStatement		28:0:440:475	838357	0					
ANR	838360	ExpressionStatement	"printf ( ""%d\\n"" , intNumber )"	29:4:447:472	838357	0	True				
ANR	838361	CallExpression	"printf ( ""%d\\n"" , intNumber )"		838357	0					
ANR	838362	Callee	printf		838357	0					
ANR	838363	Identifier	printf		838357	0					
ANR	838364	ArgumentList	"""%d\\n"""		838357	1					
ANR	838365	Argument	"""%d\\n"""		838357	0					
ANR	838366	PrimaryExpression	"""%d\\n"""		838357	0					
ANR	838367	Argument	intNumber		838357	1					
ANR	838368	Identifier	intNumber		838357	0					
ANR	838369	ReturnType	void		838357	1					
ANR	838370	Identifier	printIntLine		838357	2					
ANR	838371	ParameterList	int intNumber		838357	3					
ANR	838372	Parameter	int intNumber	27:19:424:436	838357	0	True				
ANR	838373	ParameterType	int		838357	0					
ANR	838374	Identifier	intNumber		838357	1					
ANR	838375	CFGEntryNode	ENTRY		838357		True				
ANR	838376	CFGExitNode	EXIT		838357		True				
ANR	838377	Symbol	intNumber		838357						
ANR	838378	Function	printShortLine	32:0:480:559							
ANR	838379	FunctionDef	printShortLine (short shortNumber)		838378	0					
ANR	838380	CompoundStatement		33:0:521:559	838378	0					
ANR	838381	ExpressionStatement	"printf ( ""%hd\\n"" , shortNumber )"	34:4:528:556	838378	0	True				
ANR	838382	CallExpression	"printf ( ""%hd\\n"" , shortNumber )"		838378	0					
ANR	838383	Callee	printf		838378	0					
ANR	838384	Identifier	printf		838378	0					
ANR	838385	ArgumentList	"""%hd\\n"""		838378	1					
ANR	838386	Argument	"""%hd\\n"""		838378	0					
ANR	838387	PrimaryExpression	"""%hd\\n"""		838378	0					
ANR	838388	Argument	shortNumber		838378	1					
ANR	838389	Identifier	shortNumber		838378	0					
ANR	838390	ReturnType	void		838378	1					
ANR	838391	Identifier	printShortLine		838378	2					
ANR	838392	ParameterList	short shortNumber		838378	3					
ANR	838393	Parameter	short shortNumber	32:21:501:517	838378	0	True				
ANR	838394	ParameterType	short		838378	0					
ANR	838395	Identifier	shortNumber		838378	1					
ANR	838396	CFGEntryNode	ENTRY		838378		True				
ANR	838397	CFGExitNode	EXIT		838378		True				
ANR	838398	Symbol	shortNumber		838378						
ANR	838399	Function	printFloatLine	37:0:564:642							
ANR	838400	FunctionDef	printFloatLine (float floatNumber)		838399	0					
ANR	838401	CompoundStatement		38:0:605:642	838399	0					
ANR	838402	ExpressionStatement	"printf ( ""%f\\n"" , floatNumber )"	39:4:612:639	838399	0	True				
ANR	838403	CallExpression	"printf ( ""%f\\n"" , floatNumber )"		838399	0					
ANR	838404	Callee	printf		838399	0					
ANR	838405	Identifier	printf		838399	0					
ANR	838406	ArgumentList	"""%f\\n"""		838399	1					
ANR	838407	Argument	"""%f\\n"""		838399	0					
ANR	838408	PrimaryExpression	"""%f\\n"""		838399	0					
ANR	838409	Argument	floatNumber		838399	1					
ANR	838410	Identifier	floatNumber		838399	0					
ANR	838411	ReturnType	void		838399	1					
ANR	838412	Identifier	printFloatLine		838399	2					
ANR	838413	ParameterList	float floatNumber		838399	3					
ANR	838414	Parameter	float floatNumber	37:21:585:601	838399	0	True				
ANR	838415	ParameterType	float		838399	0					
ANR	838416	Identifier	floatNumber		838399	1					
ANR	838417	CFGEntryNode	ENTRY		838399		True				
ANR	838418	CFGExitNode	EXIT		838399		True				
ANR	838419	Symbol	floatNumber		838399						
ANR	838420	Function	printLongLine	42:0:647:722							
ANR	838421	FunctionDef	printLongLine (long longNumber)		838420	0					
ANR	838422	CompoundStatement		43:0:685:722	838420	0					
ANR	838423	ExpressionStatement	"printf ( ""%ld\\n"" , longNumber )"	44:4:692:719	838420	0	True				
ANR	838424	CallExpression	"printf ( ""%ld\\n"" , longNumber )"		838420	0					
ANR	838425	Callee	printf		838420	0					
ANR	838426	Identifier	printf		838420	0					
ANR	838427	ArgumentList	"""%ld\\n"""		838420	1					
ANR	838428	Argument	"""%ld\\n"""		838420	0					
ANR	838429	PrimaryExpression	"""%ld\\n"""		838420	0					
ANR	838430	Argument	longNumber		838420	1					
ANR	838431	Identifier	longNumber		838420	0					
ANR	838432	ReturnType	void		838420	1					
ANR	838433	Identifier	printLongLine		838420	2					
ANR	838434	ParameterList	long longNumber		838420	3					
ANR	838435	Parameter	long longNumber	42:20:667:681	838420	0	True				
ANR	838436	ParameterType	long		838420	0					
ANR	838437	Identifier	longNumber		838420	1					
ANR	838438	CFGEntryNode	ENTRY		838420		True				
ANR	838439	CFGExitNode	EXIT		838420		True				
ANR	838440	Symbol	longNumber		838420						
ANR	838441	Function	printLongLongLine	47:0:727:831							
ANR	838442	FunctionDef	printLongLongLine (int64_t longLongIntNumber)		838441	0					
ANR	838443	CompoundStatement		48:0:779:831	838441	0					
ANR	838444	Statement	printf	49:4:786:791	838441	0	True				
ANR	838445	Statement	(	49:10:792:792	838441	1	True				
ANR	838446	Statement	"""%"""	49:11:793:795	838441	2	True				
ANR	838447	Statement	PRId64	49:15:797:802	838441	3	True				
ANR	838448	Statement	"""\\n"""	49:22:804:807	838441	4	True				
ANR	838449	Statement	","	49:26:808:808	838441	5	True				
ANR	838450	Statement	longLongIntNumber	49:28:810:826	838441	6	True				
ANR	838451	Statement	)	49:45:827:827	838441	7	True				
ANR	838452	ExpressionStatement		49:46:828:828	838441	8	True				
ANR	838453	ReturnType	void		838441	1					
ANR	838454	Identifier	printLongLongLine		838441	2					
ANR	838455	ParameterList	int64_t longLongIntNumber		838441	3					
ANR	838456	Parameter	int64_t longLongIntNumber	47:24:751:775	838441	0	True				
ANR	838457	ParameterType	int64_t		838441	0					
ANR	838458	Identifier	longLongIntNumber		838441	1					
ANR	838459	CFGEntryNode	ENTRY		838441		True				
ANR	838460	CFGExitNode	EXIT		838441		True				
ANR	838461	Symbol	longLongIntNumber		838441						
ANR	838462	Function	printSizeTLine	52:0:836:916							
ANR	838463	FunctionDef	printSizeTLine (size_t sizeTNumber)		838462	0					
ANR	838464	CompoundStatement		53:0:878:916	838462	0					
ANR	838465	ExpressionStatement	"printf ( ""%zu\\n"" , sizeTNumber )"	54:4:885:913	838462	0	True				
ANR	838466	CallExpression	"printf ( ""%zu\\n"" , sizeTNumber )"		838462	0					
ANR	838467	Callee	printf		838462	0					
ANR	838468	Identifier	printf		838462	0					
ANR	838469	ArgumentList	"""%zu\\n"""		838462	1					
ANR	838470	Argument	"""%zu\\n"""		838462	0					
ANR	838471	PrimaryExpression	"""%zu\\n"""		838462	0					
ANR	838472	Argument	sizeTNumber		838462	1					
ANR	838473	Identifier	sizeTNumber		838462	0					
ANR	838474	ReturnType	void		838462	1					
ANR	838475	Identifier	printSizeTLine		838462	2					
ANR	838476	ParameterList	size_t sizeTNumber		838462	3					
ANR	838477	Parameter	size_t sizeTNumber	52:21:857:874	838462	0	True				
ANR	838478	ParameterType	size_t		838462	0					
ANR	838479	Identifier	sizeTNumber		838462	1					
ANR	838480	CFGEntryNode	ENTRY		838462		True				
ANR	838481	CFGExitNode	EXIT		838462		True				
ANR	838482	Symbol	sizeTNumber		838462						
ANR	838483	Function	printHexCharLine	57:0:921:994							
ANR	838484	FunctionDef	printHexCharLine (char charHex)		838483	0					
ANR	838485	CompoundStatement		58:0:959:994	838483	0					
ANR	838486	ExpressionStatement	"printf ( ""%02x\\n"" , charHex )"	59:4:966:991	838483	0	True				
ANR	838487	CallExpression	"printf ( ""%02x\\n"" , charHex )"		838483	0					
ANR	838488	Callee	printf		838483	0					
ANR	838489	Identifier	printf		838483	0					
ANR	838490	ArgumentList	"""%02x\\n"""		838483	1					
ANR	838491	Argument	"""%02x\\n"""		838483	0					
ANR	838492	PrimaryExpression	"""%02x\\n"""		838483	0					
ANR	838493	Argument	charHex		838483	1					
ANR	838494	Identifier	charHex		838483	0					
ANR	838495	ReturnType	void		838483	1					
ANR	838496	Identifier	printHexCharLine		838483	2					
ANR	838497	ParameterList	char charHex		838483	3					
ANR	838498	Parameter	char charHex	57:23:944:955	838483	0	True				
ANR	838499	ParameterType	char		838483	0					
ANR	838500	Identifier	charHex		838483	1					
ANR	838501	CFGEntryNode	ENTRY		838483		True				
ANR	838502	CFGExitNode	EXIT		838483		True				
ANR	838503	Symbol	charHex		838483						
ANR	838504	Function	printWcharLine	62:0:999:1254							
ANR	838505	FunctionDef	printWcharLine (wchar_t wideChar)		838504	0					
ANR	838506	CompoundStatement		63:0:1039:1254	838504	0					
ANR	838507	IdentifierDeclStatement	wchar_t s [ 2 ] ;	66:4:1165:1177	838504	0	True				
ANR	838508	IdentifierDecl	s [ 2 ]		838504	0					
ANR	838509	IdentifierDeclType	wchar_t [ 2 ]		838504	0					
ANR	838510	Identifier	s		838504	1					
ANR	838511	PrimaryExpression	2		838504	2					
ANR	838512	ExpressionStatement	s [ 0 ] = wideChar	67:8:1188:1203	838504	1	True				
ANR	838513	AssignmentExpression	s [ 0 ] = wideChar		838504	0		=			
ANR	838514	ArrayIndexing	s [ 0 ]		838504	0					
ANR	838515	Identifier	s		838504	0					
ANR	838516	PrimaryExpression	0		838504	1					
ANR	838517	Identifier	wideChar		838504	1					
ANR	838518	Statement	s	68:8:1214:1214	838504	2	True				
ANR	838519	Statement	[	68:9:1215:1215	838504	3	True				
ANR	838520	Statement	1	68:10:1216:1216	838504	4	True				
ANR	838521	Statement	]	68:11:1217:1217	838504	5	True				
ANR	838522	Statement	=	68:13:1219:1219	838504	6	True				
ANR	838523	Statement	L	68:15:1221:1221	838504	7	True				
ANR	838524	ExpressionStatement	'\\0'	68:16:1222:1226	838504	8	True				
ANR	838525	PrimaryExpression	'\\0'		838504	0					
ANR	838526	ExpressionStatement	"printf ( ""%ls\\n"" , s )"	69:4:1233:1251	838504	9	True				
ANR	838527	CallExpression	"printf ( ""%ls\\n"" , s )"		838504	0					
ANR	838528	Callee	printf		838504	0					
ANR	838529	Identifier	printf		838504	0					
ANR	838530	ArgumentList	"""%ls\\n"""		838504	1					
ANR	838531	Argument	"""%ls\\n"""		838504	0					
ANR	838532	PrimaryExpression	"""%ls\\n"""		838504	0					
ANR	838533	Argument	s		838504	1					
ANR	838534	Identifier	s		838504	0					
ANR	838535	ReturnType	void		838504	1					
ANR	838536	Identifier	printWcharLine		838504	2					
ANR	838537	ParameterList	wchar_t wideChar		838504	3					
ANR	838538	Parameter	wchar_t wideChar	62:20:1019:1034	838504	0	True				
ANR	838539	ParameterType	wchar_t		838504	0					
ANR	838540	Identifier	wideChar		838504	1					
ANR	838541	CFGEntryNode	ENTRY		838504		True				
ANR	838542	CFGExitNode	EXIT		838504		True				
ANR	838543	Symbol	s		838504						
ANR	838544	Symbol	wideChar		838504						
ANR	838545	Symbol	* s		838504						
ANR	838546	Function	printUnsignedLine	72:0:1259:1349							
ANR	838547	FunctionDef	printUnsignedLine (unsigned unsignedNumber)		838546	0					
ANR	838548	CompoundStatement		73:0:1309:1349	838546	0					
ANR	838549	ExpressionStatement	"printf ( ""%u\\n"" , unsignedNumber )"	74:4:1316:1346	838546	0	True				
ANR	838550	CallExpression	"printf ( ""%u\\n"" , unsignedNumber )"		838546	0					
ANR	838551	Callee	printf		838546	0					
ANR	838552	Identifier	printf		838546	0					
ANR	838553	ArgumentList	"""%u\\n"""		838546	1					
ANR	838554	Argument	"""%u\\n"""		838546	0					
ANR	838555	PrimaryExpression	"""%u\\n"""		838546	0					
ANR	838556	Argument	unsignedNumber		838546	1					
ANR	838557	Identifier	unsignedNumber		838546	0					
ANR	838558	ReturnType	void		838546	1					
ANR	838559	Identifier	printUnsignedLine		838546	2					
ANR	838560	ParameterList	unsigned unsignedNumber		838546	3					
ANR	838561	Parameter	unsigned unsignedNumber	72:23:1282:1304	838546	0	True				
ANR	838562	ParameterType	unsigned		838546	0					
ANR	838563	Identifier	unsignedNumber		838546	1					
ANR	838564	CFGEntryNode	ENTRY		838546		True				
ANR	838565	CFGExitNode	EXIT		838546		True				
ANR	838566	Symbol	unsignedNumber		838546						
ANR	838567	Function	printHexUnsignedCharLine	77:0:1354:1464							
ANR	838568	FunctionDef	printHexUnsignedCharLine (unsigned char unsignedCharacter)		838567	0					
ANR	838569	CompoundStatement		78:0:1419:1464	838567	0					
ANR	838570	ExpressionStatement	"printf ( ""%02x\\n"" , unsignedCharacter )"	79:4:1426:1461	838567	0	True				
ANR	838571	CallExpression	"printf ( ""%02x\\n"" , unsignedCharacter )"		838567	0					
ANR	838572	Callee	printf		838567	0					
ANR	838573	Identifier	printf		838567	0					
ANR	838574	ArgumentList	"""%02x\\n"""		838567	1					
ANR	838575	Argument	"""%02x\\n"""		838567	0					
ANR	838576	PrimaryExpression	"""%02x\\n"""		838567	0					
ANR	838577	Argument	unsignedCharacter		838567	1					
ANR	838578	Identifier	unsignedCharacter		838567	0					
ANR	838579	ReturnType	void		838567	1					
ANR	838580	Identifier	printHexUnsignedCharLine		838567	2					
ANR	838581	ParameterList	unsigned char unsignedCharacter		838567	3					
ANR	838582	Parameter	unsigned char unsignedCharacter	77:30:1384:1414	838567	0	True				
ANR	838583	ParameterType	unsigned char		838567	0					
ANR	838584	Identifier	unsignedCharacter		838567	1					
ANR	838585	CFGEntryNode	ENTRY		838567		True				
ANR	838586	CFGExitNode	EXIT		838567		True				
ANR	838587	Symbol	unsignedCharacter		838567						
ANR	838588	Function	printDoubleLine	82:0:1469:1551							
ANR	838589	FunctionDef	printDoubleLine (double doubleNumber)		838588	0					
ANR	838590	CompoundStatement		83:0:1513:1551	838588	0					
ANR	838591	ExpressionStatement	"printf ( ""%g\\n"" , doubleNumber )"	84:4:1520:1548	838588	0	True				
ANR	838592	CallExpression	"printf ( ""%g\\n"" , doubleNumber )"		838588	0					
ANR	838593	Callee	printf		838588	0					
ANR	838594	Identifier	printf		838588	0					
ANR	838595	ArgumentList	"""%g\\n"""		838588	1					
ANR	838596	Argument	"""%g\\n"""		838588	0					
ANR	838597	PrimaryExpression	"""%g\\n"""		838588	0					
ANR	838598	Argument	doubleNumber		838588	1					
ANR	838599	Identifier	doubleNumber		838588	0					
ANR	838600	ReturnType	void		838588	1					
ANR	838601	Identifier	printDoubleLine		838588	2					
ANR	838602	ParameterList	double doubleNumber		838588	3					
ANR	838603	Parameter	double doubleNumber	82:21:1490:1508	838588	0	True				
ANR	838604	ParameterType	double		838588	0					
ANR	838605	Identifier	doubleNumber		838588	1					
ANR	838606	CFGEntryNode	ENTRY		838588		True				
ANR	838607	CFGExitNode	EXIT		838588		True				
ANR	838608	Symbol	doubleNumber		838588						
ANR	838609	Function	printStructLine	87:0:1556:1710							
ANR	838610	FunctionDef	printStructLine (const twoIntsStruct * structTwoIntsStruct)		838609	0					
ANR	838611	CompoundStatement		88:0:1622:1710	838609	0					
ANR	838612	ExpressionStatement	"printf ( ""%d -- %d\\n"" , structTwoIntsStruct -> intOne , structTwoIntsStruct -> intTwo )"	89:4:1629:1707	838609	0	True				
ANR	838613	CallExpression	"printf ( ""%d -- %d\\n"" , structTwoIntsStruct -> intOne , structTwoIntsStruct -> intTwo )"		838609	0					
ANR	838614	Callee	printf		838609	0					
ANR	838615	Identifier	printf		838609	0					
ANR	838616	ArgumentList	"""%d -- %d\\n"""		838609	1					
ANR	838617	Argument	"""%d -- %d\\n"""		838609	0					
ANR	838618	PrimaryExpression	"""%d -- %d\\n"""		838609	0					
ANR	838619	Argument	structTwoIntsStruct -> intOne		838609	1					
ANR	838620	PtrMemberAccess	structTwoIntsStruct -> intOne		838609	0					
ANR	838621	Identifier	structTwoIntsStruct		838609	0					
ANR	838622	Identifier	intOne		838609	1					
ANR	838623	Argument	structTwoIntsStruct -> intTwo		838609	2					
ANR	838624	PtrMemberAccess	structTwoIntsStruct -> intTwo		838609	0					
ANR	838625	Identifier	structTwoIntsStruct		838609	0					
ANR	838626	Identifier	intTwo		838609	1					
ANR	838627	ReturnType	void		838609	1					
ANR	838628	Identifier	printStructLine		838609	2					
ANR	838629	ParameterList	const twoIntsStruct * structTwoIntsStruct		838609	3					
ANR	838630	Parameter	const twoIntsStruct * structTwoIntsStruct	87:22:1578:1618	838609	0	True				
ANR	838631	ParameterType	const twoIntsStruct *		838609	0					
ANR	838632	Identifier	structTwoIntsStruct		838609	1					
ANR	838633	CFGEntryNode	ENTRY		838609		True				
ANR	838634	CFGExitNode	EXIT		838609		True				
ANR	838635	Symbol	structTwoIntsStruct		838609						
ANR	838636	Symbol	structTwoIntsStruct -> intTwo		838609						
ANR	838637	Symbol	* structTwoIntsStruct		838609						
ANR	838638	Symbol	structTwoIntsStruct -> intOne		838609						
ANR	838639	Function	printBytesLine	92:0:1715:1921							
ANR	838640	FunctionDef	"printBytesLine (const unsigned char * bytes , size_t numBytes)"		838639	0					
ANR	838641	CompoundStatement		93:0:1782:1921	838639	0					
ANR	838642	IdentifierDeclStatement	size_t i ;	94:4:1789:1797	838639	0	True				
ANR	838643	IdentifierDecl	i		838639	0					
ANR	838644	IdentifierDeclType	size_t		838639	0					
ANR	838645	Identifier	i		838639	1					
ANR	838646	ForStatement	for ( i = 0 ; i < numBytes ; ++ i )		838639	1					
ANR	838647	ForInit	i = 0 ;	95:9:1809:1814	838639	0	True				
ANR	838648	AssignmentExpression	i = 0		838639	0		=			
ANR	838649	Identifier	i		838639	0					
ANR	838650	PrimaryExpression	0		838639	1					
ANR	838651	Condition	i < numBytes	95:16:1816:1827	838639	1	True				
ANR	838652	RelationalExpression	i < numBytes		838639	0		<			
ANR	838653	Identifier	i		838639	0					
ANR	838654	Identifier	numBytes		838639	1					
ANR	838655	UnaryExpression	++ i	95:30:1830:1832	838639	2	True				
ANR	838656	IncDec	++		838639	0					
ANR	838657	Identifier	i		838639	1					
ANR	838658	CompoundStatement		4:4:57:57	838639	3					
ANR	838659	ExpressionStatement	"printf ( ""%02x"" , bytes [ i ] )"	97:8:1851:1875	838639	0	True				
ANR	838660	CallExpression	"printf ( ""%02x"" , bytes [ i ] )"		838639	0					
ANR	838661	Callee	printf		838639	0					
ANR	838662	Identifier	printf		838639	0					
ANR	838663	ArgumentList	"""%02x"""		838639	1					
ANR	838664	Argument	"""%02x"""		838639	0					
ANR	838665	PrimaryExpression	"""%02x"""		838639	0					
ANR	838666	Argument	bytes [ i ]		838639	1					
ANR	838667	ArrayIndexing	bytes [ i ]		838639	0					
ANR	838668	Identifier	bytes		838639	0					
ANR	838669	Identifier	i		838639	1					
ANR	838670	ExpressionStatement	"puts ( """" )"	99:4:1889:1897	838639	2	True				
ANR	838671	CallExpression	"puts ( """" )"		838639	0					
ANR	838672	Callee	puts		838639	0					
ANR	838673	Identifier	puts		838639	0					
ANR	838674	ArgumentList	""""""		838639	1					
ANR	838675	Argument	""""""		838639	0					
ANR	838676	PrimaryExpression	""""""		838639	0					
ANR	838677	ReturnType	void		838639	1					
ANR	838678	Identifier	printBytesLine		838639	2					
ANR	838679	ParameterList	"const unsigned char * bytes , size_t numBytes"		838639	3					
ANR	838680	Parameter	const unsigned char * bytes	92:20:1735:1761	838639	0	True				
ANR	838681	ParameterType	const unsigned char *		838639	0					
ANR	838682	Identifier	bytes		838639	1					
ANR	838683	Parameter	size_t numBytes	92:49:1764:1778	838639	1	True				
ANR	838684	ParameterType	size_t		838639	0					
ANR	838685	Identifier	numBytes		838639	1					
ANR	838686	CFGEntryNode	ENTRY		838639		True				
ANR	838687	CFGExitNode	EXIT		838639		True				
ANR	838688	Symbol	numBytes		838639						
ANR	838689	Symbol	* i		838639						
ANR	838690	Symbol	bytes		838639						
ANR	838691	Symbol	i		838639						
ANR	838692	Symbol	* bytes		838639						
ANR	838693	Function	decodeHexChars	105:0:2143:2882							
ANR	838694	FunctionDef	"decodeHexChars (unsigned char * bytes , size_t numBytes , const char * hex)"		838693	0					
ANR	838695	CompoundStatement		106:0:2224:2882	838693	0					
ANR	838696	IdentifierDeclStatement	size_t numWritten = 0 ;	107:4:2231:2252	838693	0	True				
ANR	838697	IdentifierDecl	numWritten = 0		838693	0					
ANR	838698	IdentifierDeclType	size_t		838693	0					
ANR	838699	Identifier	numWritten		838693	1					
ANR	838700	AssignmentExpression	numWritten = 0		838693	2		=			
ANR	838701	Identifier	numWritten		838693	0					
ANR	838702	PrimaryExpression	0		838693	1					
ANR	838703	WhileStatement	while ( numWritten < numBytes && isxdigit ( hex [ 2 * numWritten ] ) && isxdigit ( hex [ 2 * numWritten + 1 ] ) )		838693	1					
ANR	838704	Condition	numWritten < numBytes && isxdigit ( hex [ 2 * numWritten ] ) && isxdigit ( hex [ 2 * numWritten + 1 ] )	113:11:2601:2691	838693	0	True				
ANR	838705	AndExpression	numWritten < numBytes && isxdigit ( hex [ 2 * numWritten ] ) && isxdigit ( hex [ 2 * numWritten + 1 ] )		838693	0		&&			
ANR	838706	RelationalExpression	numWritten < numBytes		838693	0		<			
ANR	838707	Identifier	numWritten		838693	0					
ANR	838708	Identifier	numBytes		838693	1					
ANR	838709	AndExpression	isxdigit ( hex [ 2 * numWritten ] ) && isxdigit ( hex [ 2 * numWritten + 1 ] )		838693	1		&&			
ANR	838710	CallExpression	isxdigit ( hex [ 2 * numWritten ] )		838693	0					
ANR	838711	Callee	isxdigit		838693	0					
ANR	838712	Identifier	isxdigit		838693	0					
ANR	838713	ArgumentList	hex [ 2 * numWritten ]		838693	1					
ANR	838714	Argument	hex [ 2 * numWritten ]		838693	0					
ANR	838715	ArrayIndexing	hex [ 2 * numWritten ]		838693	0					
ANR	838716	Identifier	hex		838693	0					
ANR	838717	MultiplicativeExpression	2 * numWritten		838693	1		*			
ANR	838718	PrimaryExpression	2		838693	0					
ANR	838719	Identifier	numWritten		838693	1					
ANR	838720	CallExpression	isxdigit ( hex [ 2 * numWritten + 1 ] )		838693	1					
ANR	838721	Callee	isxdigit		838693	0					
ANR	838722	Identifier	isxdigit		838693	0					
ANR	838723	ArgumentList	hex [ 2 * numWritten + 1 ]		838693	1					
ANR	838724	Argument	hex [ 2 * numWritten + 1 ]		838693	0					
ANR	838725	ArrayIndexing	hex [ 2 * numWritten + 1 ]		838693	0					
ANR	838726	Identifier	hex		838693	0					
ANR	838727	AdditiveExpression	2 * numWritten + 1		838693	1		+			
ANR	838728	MultiplicativeExpression	2 * numWritten		838693	0		*			
ANR	838729	PrimaryExpression	2		838693	0					
ANR	838730	Identifier	numWritten		838693	1					
ANR	838731	PrimaryExpression	1		838693	1					
ANR	838732	CompoundStatement		10:8:485:493	838693	1					
ANR	838733	IdentifierDeclStatement	int byte ;	115:8:2710:2718	838693	0	True				
ANR	838734	IdentifierDecl	byte		838693	0					
ANR	838735	IdentifierDeclType	int		838693	0					
ANR	838736	Identifier	byte		838693	1					
ANR	838737	ExpressionStatement	"sscanf ( & hex [ 2 * numWritten ] , ""%02x"" , & byte )"	116:8:2729:2772	838693	1	True				
ANR	838738	CallExpression	"sscanf ( & hex [ 2 * numWritten ] , ""%02x"" , & byte )"		838693	0					
ANR	838739	Callee	sscanf		838693	0					
ANR	838740	Identifier	sscanf		838693	0					
ANR	838741	ArgumentList	& hex [ 2 * numWritten ]		838693	1					
ANR	838742	Argument	& hex [ 2 * numWritten ]		838693	0					
ANR	838743	UnaryOperationExpression	& hex [ 2 * numWritten ]		838693	0					
ANR	838744	UnaryOperator	&		838693	0					
ANR	838745	ArrayIndexing	hex [ 2 * numWritten ]		838693	1					
ANR	838746	Identifier	hex		838693	0					
ANR	838747	MultiplicativeExpression	2 * numWritten		838693	1		*			
ANR	838748	PrimaryExpression	2		838693	0					
ANR	838749	Identifier	numWritten		838693	1					
ANR	838750	Argument	"""%02x"""		838693	1					
ANR	838751	PrimaryExpression	"""%02x"""		838693	0					
ANR	838752	Argument	& byte		838693	2					
ANR	838753	UnaryOperationExpression	& byte		838693	0					
ANR	838754	UnaryOperator	&		838693	0					
ANR	838755	Identifier	byte		838693	1					
ANR	838756	ExpressionStatement	bytes [ numWritten ] = ( unsigned char ) byte	117:8:2783:2823	838693	2	True				
ANR	838757	AssignmentExpression	bytes [ numWritten ] = ( unsigned char ) byte		838693	0		=			
ANR	838758	ArrayIndexing	bytes [ numWritten ]		838693	0					
ANR	838759	Identifier	bytes		838693	0					
ANR	838760	Identifier	numWritten		838693	1					
ANR	838761	CastExpression	( unsigned char ) byte		838693	1					
ANR	838762	CastTarget	unsigned char		838693	0					
ANR	838763	Identifier	byte		838693	1					
ANR	838764	ExpressionStatement	++ numWritten	118:8:2834:2846	838693	3	True				
ANR	838765	UnaryExpression	++ numWritten		838693	0					
ANR	838766	IncDec	++		838693	0					
ANR	838767	Identifier	numWritten		838693	1					
ANR	838768	ReturnStatement	return numWritten ;	121:4:2862:2879	838693	2	True				
ANR	838769	Identifier	numWritten		838693	0					
ANR	838770	ReturnType	size_t		838693	1					
ANR	838771	Identifier	decodeHexChars		838693	2					
ANR	838772	ParameterList	"unsigned char * bytes , size_t numBytes , const char * hex"		838693	3					
ANR	838773	Parameter	unsigned char * bytes	105:22:2165:2185	838693	0	True				
ANR	838774	ParameterType	unsigned char *		838693	0					
ANR	838775	Identifier	bytes		838693	1					
ANR	838776	Parameter	size_t numBytes	105:45:2188:2202	838693	1	True				
ANR	838777	ParameterType	size_t		838693	0					
ANR	838778	Identifier	numBytes		838693	1					
ANR	838779	Parameter	const char * hex	105:62:2205:2220	838693	2	True				
ANR	838780	ParameterType	const char *		838693	0					
ANR	838781	Identifier	hex		838693	1					
ANR	838782	CFGEntryNode	ENTRY		838693		True				
ANR	838783	CFGExitNode	EXIT		838693		True				
ANR	838784	Symbol	numBytes		838693						
ANR	838785	Symbol	* numWritten		838693						
ANR	838786	Symbol	bytes		838693						
ANR	838787	Symbol	byte		838693						
ANR	838788	Symbol	hex		838693						
ANR	838789	Symbol	* hex		838693						
ANR	838790	Symbol	numWritten		838693						
ANR	838791	Symbol	& byte		838693						
ANR	838792	Symbol	* bytes		838693						
ANR	838793	Symbol	isxdigit		838693						
ANR	838794	Function	decodeHexWChars	127:1:3105:3855							
ANR	838795	FunctionDef	"decodeHexWChars (unsigned char * bytes , size_t numBytes , const wchar_t * hex)"		838794	0					
ANR	838796	CompoundStatement		128:1:3191:3855	838794	0					
ANR	838797	IdentifierDeclStatement	size_t numWritten = 0 ;	129:4:3198:3219	838794	0	True				
ANR	838798	IdentifierDecl	numWritten = 0		838794	0					
ANR	838799	IdentifierDeclType	size_t		838794	0					
ANR	838800	Identifier	numWritten		838794	1					
ANR	838801	AssignmentExpression	numWritten = 0		838794	2		=			
ANR	838802	Identifier	numWritten		838794	0					
ANR	838803	PrimaryExpression	0		838794	1					
ANR	838804	WhileStatement	while ( numWritten < numBytes && iswxdigit ( hex [ 2 * numWritten ] ) && iswxdigit ( hex [ 2 * numWritten + 1 ] ) )		838794	1					
ANR	838805	Condition	numWritten < numBytes && iswxdigit ( hex [ 2 * numWritten ] ) && iswxdigit ( hex [ 2 * numWritten + 1 ] )	135:11:3570:3662	838794	0	True				
ANR	838806	AndExpression	numWritten < numBytes && iswxdigit ( hex [ 2 * numWritten ] ) && iswxdigit ( hex [ 2 * numWritten + 1 ] )		838794	0		&&			
ANR	838807	RelationalExpression	numWritten < numBytes		838794	0		<			
ANR	838808	Identifier	numWritten		838794	0					
ANR	838809	Identifier	numBytes		838794	1					
ANR	838810	AndExpression	iswxdigit ( hex [ 2 * numWritten ] ) && iswxdigit ( hex [ 2 * numWritten + 1 ] )		838794	1		&&			
ANR	838811	CallExpression	iswxdigit ( hex [ 2 * numWritten ] )		838794	0					
ANR	838812	Callee	iswxdigit		838794	0					
ANR	838813	Identifier	iswxdigit		838794	0					
ANR	838814	ArgumentList	hex [ 2 * numWritten ]		838794	1					
ANR	838815	Argument	hex [ 2 * numWritten ]		838794	0					
ANR	838816	ArrayIndexing	hex [ 2 * numWritten ]		838794	0					
ANR	838817	Identifier	hex		838794	0					
ANR	838818	MultiplicativeExpression	2 * numWritten		838794	1		*			
ANR	838819	PrimaryExpression	2		838794	0					
ANR	838820	Identifier	numWritten		838794	1					
ANR	838821	CallExpression	iswxdigit ( hex [ 2 * numWritten + 1 ] )		838794	1					
ANR	838822	Callee	iswxdigit		838794	0					
ANR	838823	Identifier	iswxdigit		838794	0					
ANR	838824	ArgumentList	hex [ 2 * numWritten + 1 ]		838794	1					
ANR	838825	Argument	hex [ 2 * numWritten + 1 ]		838794	0					
ANR	838826	ArrayIndexing	hex [ 2 * numWritten + 1 ]		838794	0					
ANR	838827	Identifier	hex		838794	0					
ANR	838828	AdditiveExpression	2 * numWritten + 1		838794	1		+			
ANR	838829	MultiplicativeExpression	2 * numWritten		838794	0		*			
ANR	838830	PrimaryExpression	2		838794	0					
ANR	838831	Identifier	numWritten		838794	1					
ANR	838832	PrimaryExpression	1		838794	1					
ANR	838833	CompoundStatement		10:8:489:497	838794	1					
ANR	838834	IdentifierDeclStatement	int byte ;	137:8:3681:3689	838794	0	True				
ANR	838835	IdentifierDecl	byte		838794	0					
ANR	838836	IdentifierDeclType	int		838794	0					
ANR	838837	Identifier	byte		838794	1					
ANR	838838	Statement	swscanf	138:8:3700:3706	838794	1	True				
ANR	838839	Statement	(	138:15:3707:3707	838794	2	True				
ANR	838840	Statement	&	138:16:3708:3708	838794	3	True				
ANR	838841	Statement	hex	138:17:3709:3711	838794	4	True				
ANR	838842	Statement	[	138:20:3712:3712	838794	5	True				
ANR	838843	Statement	2	138:21:3713:3713	838794	6	True				
ANR	838844	Statement	*	138:23:3715:3715	838794	7	True				
ANR	838845	Statement	numWritten	138:25:3717:3726	838794	8	True				
ANR	838846	Statement	]	138:35:3727:3727	838794	9	True				
ANR	838847	Statement	","	138:36:3728:3728	838794	10	True				
ANR	838848	Statement	L	138:38:3730:3730	838794	11	True				
ANR	838849	Statement	"""%02x"""	138:39:3731:3736	838794	12	True				
ANR	838850	Statement	","	138:45:3737:3737	838794	13	True				
ANR	838851	Statement	&	138:47:3739:3739	838794	14	True				
ANR	838852	Statement	byte	138:48:3740:3743	838794	15	True				
ANR	838853	Statement	)	138:52:3744:3744	838794	16	True				
ANR	838854	ExpressionStatement		138:53:3745:3745	838794	17	True				
ANR	838855	ExpressionStatement	bytes [ numWritten ] = ( unsigned char ) byte	139:8:3756:3796	838794	18	True				
ANR	838856	AssignmentExpression	bytes [ numWritten ] = ( unsigned char ) byte		838794	0		=			
ANR	838857	ArrayIndexing	bytes [ numWritten ]		838794	0					
ANR	838858	Identifier	bytes		838794	0					
ANR	838859	Identifier	numWritten		838794	1					
ANR	838860	CastExpression	( unsigned char ) byte		838794	1					
ANR	838861	CastTarget	unsigned char		838794	0					
ANR	838862	Identifier	byte		838794	1					
ANR	838863	ExpressionStatement	++ numWritten	140:8:3807:3819	838794	19	True				
ANR	838864	UnaryExpression	++ numWritten		838794	0					
ANR	838865	IncDec	++		838794	0					
ANR	838866	Identifier	numWritten		838794	1					
ANR	838867	ReturnStatement	return numWritten ;	143:4:3835:3852	838794	2	True				
ANR	838868	Identifier	numWritten		838794	0					
ANR	838869	ReturnType	size_t		838794	1					
ANR	838870	Identifier	decodeHexWChars		838794	2					
ANR	838871	ParameterList	"unsigned char * bytes , size_t numBytes , const wchar_t * hex"		838794	3					
ANR	838872	Parameter	unsigned char * bytes	127:24:3128:3148	838794	0	True				
ANR	838873	ParameterType	unsigned char *		838794	0					
ANR	838874	Identifier	bytes		838794	1					
ANR	838875	Parameter	size_t numBytes	127:47:3151:3165	838794	1	True				
ANR	838876	ParameterType	size_t		838794	0					
ANR	838877	Identifier	numBytes		838794	1					
ANR	838878	Parameter	const wchar_t * hex	127:64:3168:3186	838794	2	True				
ANR	838879	ParameterType	const wchar_t *		838794	0					
ANR	838880	Identifier	hex		838794	1					
ANR	838881	CFGEntryNode	ENTRY		838794		True				
ANR	838882	CFGExitNode	EXIT		838794		True				
ANR	838883	Symbol	numBytes		838794						
ANR	838884	Symbol	* numWritten		838794						
ANR	838885	Symbol	iswxdigit		838794						
ANR	838886	Symbol	bytes		838794						
ANR	838887	Symbol	byte		838794						
ANR	838888	Symbol	hex		838794						
ANR	838889	Symbol	* hex		838794						
ANR	838890	Symbol	numWritten		838794						
ANR	838891	Symbol	* bytes		838794						
ANR	838892	Function	globalReturnsTrue	148:0:4010:4054							
ANR	838893	FunctionDef	globalReturnsTrue ()		838892	0					
ANR	838894	CompoundStatement		149:0:4036:4054	838892	0					
ANR	838895	ReturnStatement	return 1 ;	150:4:4043:4051	838892	0	True				
ANR	838896	PrimaryExpression	1		838892	0					
ANR	838897	ReturnType	int		838892	1					
ANR	838898	Identifier	globalReturnsTrue		838892	2					
ANR	838899	ParameterList			838892	3					
ANR	838900	CFGEntryNode	ENTRY		838892		True				
ANR	838901	CFGExitNode	EXIT		838892		True				
ANR	838902	Function	globalReturnsFalse	153:0:4059:4104							
ANR	838903	FunctionDef	globalReturnsFalse ()		838902	0					
ANR	838904	CompoundStatement		154:0:4086:4104	838902	0					
ANR	838905	ReturnStatement	return 0 ;	155:4:4093:4101	838902	0	True				
ANR	838906	PrimaryExpression	0		838902	0					
ANR	838907	ReturnType	int		838902	1					
ANR	838908	Identifier	globalReturnsFalse		838902	2					
ANR	838909	ParameterList			838902	3					
ANR	838910	CFGEntryNode	ENTRY		838902		True				
ANR	838911	CFGExitNode	EXIT		838902		True				
ANR	838912	Function	globalReturnsTrueOrFalse	158:0:4109:4171							
ANR	838913	FunctionDef	globalReturnsTrueOrFalse ()		838912	0					
ANR	838914	CompoundStatement		159:0:4142:4171	838912	0					
ANR	838915	ReturnStatement	return ( rand ( ) % 2 ) ;	160:4:4149:4168	838912	0	True				
ANR	838916	MultiplicativeExpression	rand ( ) % 2		838912	0		%			
ANR	838917	CallExpression	rand ( )		838912	0					
ANR	838918	Callee	rand		838912	0					
ANR	838919	Identifier	rand		838912	0					
ANR	838920	ArgumentList			838912	1					
ANR	838921	PrimaryExpression	2		838912	1					
ANR	838922	ReturnType	int		838912	1					
ANR	838923	Identifier	globalReturnsTrueOrFalse		838912	2					
ANR	838924	ParameterList			838912	3					
ANR	838925	CFGEntryNode	ENTRY		838912		True				
ANR	838926	CFGExitNode	EXIT		838912		True				
ANR	838927	Symbol	rand		838912						
ANR	838928	DeclStmt									
ANR	838929	Decl							const int	const int	GLOBAL_CONST_TRUE
ANR	838930	DeclStmt									
ANR	838931	Decl							const int	const int	GLOBAL_CONST_FALSE
ANR	838932	DeclStmt									
ANR	838933	Decl							const int	const int	GLOBAL_CONST_FIVE
ANR	838934	DeclStmt									
ANR	838935	Decl							int	int	globalTrue
ANR	838936	DeclStmt									
ANR	838937	Decl							int	int	globalFalse
ANR	838938	DeclStmt									
ANR	838939	Decl							int	int	globalFive
ANR	838940	Function	good1	179:0:4905:4920							
ANR	838941	FunctionDef	good1 ()		838940	0					
ANR	838942	CompoundStatement		179:13:4918:4920	838940	0					
ANR	838943	ReturnType	void		838940	1					
ANR	838944	Identifier	good1		838940	2					
ANR	838945	ParameterList			838940	3					
ANR	838946	CFGEntryNode	ENTRY		838940		True				
ANR	838947	CFGExitNode	EXIT		838940		True				
ANR	838948	Function	good2	180:0:4923:4938							
ANR	838949	FunctionDef	good2 ()		838948	0					
ANR	838950	CompoundStatement		180:13:4936:4938	838948	0					
ANR	838951	ReturnType	void		838948	1					
ANR	838952	Identifier	good2		838948	2					
ANR	838953	ParameterList			838948	3					
ANR	838954	CFGEntryNode	ENTRY		838948		True				
ANR	838955	CFGExitNode	EXIT		838948		True				
ANR	838956	Function	good3	181:0:4941:4956							
ANR	838957	FunctionDef	good3 ()		838956	0					
ANR	838958	CompoundStatement		181:13:4954:4956	838956	0					
ANR	838959	ReturnType	void		838956	1					
ANR	838960	Identifier	good3		838956	2					
ANR	838961	ParameterList			838956	3					
ANR	838962	CFGEntryNode	ENTRY		838956		True				
ANR	838963	CFGExitNode	EXIT		838956		True				
ANR	838964	Function	good4	182:0:4959:4974							
ANR	838965	FunctionDef	good4 ()		838964	0					
ANR	838966	CompoundStatement		182:13:4972:4974	838964	0					
ANR	838967	ReturnType	void		838964	1					
ANR	838968	Identifier	good4		838964	2					
ANR	838969	ParameterList			838964	3					
ANR	838970	CFGEntryNode	ENTRY		838964		True				
ANR	838971	CFGExitNode	EXIT		838964		True				
ANR	838972	Function	good5	183:0:4977:4992							
ANR	838973	FunctionDef	good5 ()		838972	0					
ANR	838974	CompoundStatement		183:13:4990:4992	838972	0					
ANR	838975	ReturnType	void		838972	1					
ANR	838976	Identifier	good5		838972	2					
ANR	838977	ParameterList			838972	3					
ANR	838978	CFGEntryNode	ENTRY		838972		True				
ANR	838979	CFGExitNode	EXIT		838972		True				
ANR	838980	Function	good6	184:0:4995:5010							
ANR	838981	FunctionDef	good6 ()		838980	0					
ANR	838982	CompoundStatement		184:13:5008:5010	838980	0					
ANR	838983	ReturnType	void		838980	1					
ANR	838984	Identifier	good6		838980	2					
ANR	838985	ParameterList			838980	3					
ANR	838986	CFGEntryNode	ENTRY		838980		True				
ANR	838987	CFGExitNode	EXIT		838980		True				
ANR	838988	Function	good7	185:0:5013:5028							
ANR	838989	FunctionDef	good7 ()		838988	0					
ANR	838990	CompoundStatement		185:13:5026:5028	838988	0					
ANR	838991	ReturnType	void		838988	1					
ANR	838992	Identifier	good7		838988	2					
ANR	838993	ParameterList			838988	3					
ANR	838994	CFGEntryNode	ENTRY		838988		True				
ANR	838995	CFGExitNode	EXIT		838988		True				
ANR	838996	Function	good8	186:0:5031:5046							
ANR	838997	FunctionDef	good8 ()		838996	0					
ANR	838998	CompoundStatement		186:13:5044:5046	838996	0					
ANR	838999	ReturnType	void		838996	1					
ANR	839000	Identifier	good8		838996	2					
ANR	839001	ParameterList			838996	3					
ANR	839002	CFGEntryNode	ENTRY		838996		True				
ANR	839003	CFGExitNode	EXIT		838996		True				
ANR	839004	Function	good9	187:0:5049:5064							
ANR	839005	FunctionDef	good9 ()		839004	0					
ANR	839006	CompoundStatement		187:13:5062:5064	839004	0					
ANR	839007	ReturnType	void		839004	1					
ANR	839008	Identifier	good9		839004	2					
ANR	839009	ParameterList			839004	3					
ANR	839010	CFGEntryNode	ENTRY		839004		True				
ANR	839011	CFGExitNode	EXIT		839004		True				
ANR	839012	Function	bad1	190:0:5112:5126							
ANR	839013	FunctionDef	bad1 ()		839012	0					
ANR	839014	CompoundStatement		190:12:5124:5126	839012	0					
ANR	839015	ReturnType	void		839012	1					
ANR	839016	Identifier	bad1		839012	2					
ANR	839017	ParameterList			839012	3					
ANR	839018	CFGEntryNode	ENTRY		839012		True				
ANR	839019	CFGExitNode	EXIT		839012		True				
ANR	839020	Function	bad2	191:0:5129:5143							
ANR	839021	FunctionDef	bad2 ()		839020	0					
ANR	839022	CompoundStatement		191:12:5141:5143	839020	0					
ANR	839023	ReturnType	void		839020	1					
ANR	839024	Identifier	bad2		839020	2					
ANR	839025	ParameterList			839020	3					
ANR	839026	CFGEntryNode	ENTRY		839020		True				
ANR	839027	CFGExitNode	EXIT		839020		True				
ANR	839028	Function	bad3	192:0:5146:5160							
ANR	839029	FunctionDef	bad3 ()		839028	0					
ANR	839030	CompoundStatement		192:12:5158:5160	839028	0					
ANR	839031	ReturnType	void		839028	1					
ANR	839032	Identifier	bad3		839028	2					
ANR	839033	ParameterList			839028	3					
ANR	839034	CFGEntryNode	ENTRY		839028		True				
ANR	839035	CFGExitNode	EXIT		839028		True				
ANR	839036	Function	bad4	193:0:5163:5177							
ANR	839037	FunctionDef	bad4 ()		839036	0					
ANR	839038	CompoundStatement		193:12:5175:5177	839036	0					
ANR	839039	ReturnType	void		839036	1					
ANR	839040	Identifier	bad4		839036	2					
ANR	839041	ParameterList			839036	3					
ANR	839042	CFGEntryNode	ENTRY		839036		True				
ANR	839043	CFGExitNode	EXIT		839036		True				
ANR	839044	Function	bad5	194:0:5180:5194							
ANR	839045	FunctionDef	bad5 ()		839044	0					
ANR	839046	CompoundStatement		194:12:5192:5194	839044	0					
ANR	839047	ReturnType	void		839044	1					
ANR	839048	Identifier	bad5		839044	2					
ANR	839049	ParameterList			839044	3					
ANR	839050	CFGEntryNode	ENTRY		839044		True				
ANR	839051	CFGExitNode	EXIT		839044		True				
ANR	839052	Function	bad6	195:0:5197:5211							
ANR	839053	FunctionDef	bad6 ()		839052	0					
ANR	839054	CompoundStatement		195:12:5209:5211	839052	0					
ANR	839055	ReturnType	void		839052	1					
ANR	839056	Identifier	bad6		839052	2					
ANR	839057	ParameterList			839052	3					
ANR	839058	CFGEntryNode	ENTRY		839052		True				
ANR	839059	CFGExitNode	EXIT		839052		True				
ANR	839060	Function	bad7	196:0:5214:5228							
ANR	839061	FunctionDef	bad7 ()		839060	0					
ANR	839062	CompoundStatement		196:12:5226:5228	839060	0					
ANR	839063	ReturnType	void		839060	1					
ANR	839064	Identifier	bad7		839060	2					
ANR	839065	ParameterList			839060	3					
ANR	839066	CFGEntryNode	ENTRY		839060		True				
ANR	839067	CFGExitNode	EXIT		839060		True				
ANR	839068	Function	bad8	197:0:5231:5245							
ANR	839069	FunctionDef	bad8 ()		839068	0					
ANR	839070	CompoundStatement		197:12:5243:5245	839068	0					
ANR	839071	ReturnType	void		839068	1					
ANR	839072	Identifier	bad8		839068	2					
ANR	839073	ParameterList			839068	3					
ANR	839074	CFGEntryNode	ENTRY		839068		True				
ANR	839075	CFGExitNode	EXIT		839068		True				
ANR	839076	Function	bad9	198:0:5248:5262							
ANR	839077	FunctionDef	bad9 ()		839076	0					
ANR	839078	CompoundStatement		198:12:5260:5262	839076	0					
ANR	839079	ReturnType	void		839076	1					
ANR	839080	Identifier	bad9		839076	2					
ANR	839081	ParameterList			839076	3					
ANR	839082	CFGEntryNode	ENTRY		839076		True				
ANR	839083	CFGExitNode	EXIT		839076		True				
ANR	839084	DeclStmt									
ANR	839085	Decl							int	int	globalArgc
ANR	839086	DeclStmt									
ANR	839087	Decl							char	char * *	globalArgv
