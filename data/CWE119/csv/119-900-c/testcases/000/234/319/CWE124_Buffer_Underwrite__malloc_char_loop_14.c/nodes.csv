command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	801384	File	/develop/joernDwkProcess/joern-dev/./output/data/CWE119/source-code/119-900-c/testcases/000/234/319/CWE124_Buffer_Underwrite__malloc_char_loop_14.c								
ANR	801385	Function	CWE124_Buffer_Underwrite__malloc_char_loop_14_bad	23:0:616:1707							
ANR	801386	FunctionDef	CWE124_Buffer_Underwrite__malloc_char_loop_14_bad ()		801385	0					
ANR	801387	CompoundStatement		24:0:674:1707	801385	0					
ANR	801388	IdentifierDeclStatement	char * data ;	25:4:681:692	801385	0	True				
ANR	801389	IdentifierDecl	* data		801385	0					
ANR	801390	IdentifierDeclType	char *		801385	0					
ANR	801391	Identifier	data		801385	1					
ANR	801392	ExpressionStatement	data = NULL	26:4:699:710	801385	1	True				
ANR	801393	AssignmentExpression	data = NULL		801385	0		=			
ANR	801394	Identifier	data		801385	0					
ANR	801395	Identifier	NULL		801385	1					
ANR	801396	IfStatement	if ( globalFive == 5 )		801385	2					
ANR	801397	Condition	globalFive == 5	27:7:720:732	801385	0	True				
ANR	801398	EqualityExpression	globalFive == 5		801385	0		==			
ANR	801399	Identifier	globalFive		801385	0					
ANR	801400	PrimaryExpression	5		801385	1					
ANR	801401	CompoundStatement		5:4:65:65	801385	1					
ANR	801402	CompoundStatement		7:12:91:143	801385	0					
ANR	801403	IdentifierDeclStatement	char * dataBuffer = ( char * ) malloc ( 100 * sizeof ( char ) ) ;	30:12:766:818	801385	0	True				
ANR	801404	IdentifierDecl	* dataBuffer = ( char * ) malloc ( 100 * sizeof ( char ) )		801385	0					
ANR	801405	IdentifierDeclType	char *		801385	0					
ANR	801406	Identifier	dataBuffer		801385	1					
ANR	801407	AssignmentExpression	* dataBuffer = ( char * ) malloc ( 100 * sizeof ( char ) )		801385	2		=			
ANR	801408	Identifier	dataBuffer		801385	0					
ANR	801409	CastExpression	( char * ) malloc ( 100 * sizeof ( char ) )		801385	1					
ANR	801410	CastTarget	char *		801385	0					
ANR	801411	CallExpression	malloc ( 100 * sizeof ( char ) )		801385	1					
ANR	801412	Callee	malloc		801385	0					
ANR	801413	Identifier	malloc		801385	0					
ANR	801414	ArgumentList	100 * sizeof ( char )		801385	1					
ANR	801415	Argument	100 * sizeof ( char )		801385	0					
ANR	801416	MultiplicativeExpression	100 * sizeof ( char )		801385	0		*			
ANR	801417	PrimaryExpression	100		801385	0					
ANR	801418	SizeofExpression	sizeof ( char )		801385	1					
ANR	801419	Sizeof	sizeof		801385	0					
ANR	801420	SizeofOperand	char		801385	1					
ANR	801421	IfStatement	if ( dataBuffer == NULL )		801385	1					
ANR	801422	Condition	dataBuffer == NULL	31:16:837:854	801385	0	True				
ANR	801423	EqualityExpression	dataBuffer == NULL		801385	0		==			
ANR	801424	Identifier	dataBuffer		801385	0					
ANR	801425	Identifier	NULL		801385	1					
ANR	801426	CompoundStatement		8:36:182:182	801385	1					
ANR	801427	ExpressionStatement	exit ( - 1 )	31:37:858:866	801385	0	True				
ANR	801428	CallExpression	exit ( - 1 )		801385	0					
ANR	801429	Callee	exit		801385	0					
ANR	801430	Identifier	exit		801385	0					
ANR	801431	ArgumentList	- 1		801385	1					
ANR	801432	Argument	- 1		801385	0					
ANR	801433	UnaryOperationExpression	- 1		801385	0					
ANR	801434	UnaryOperator	-		801385	0					
ANR	801435	PrimaryExpression	1		801385	1					
ANR	801436	ExpressionStatement	"memset ( dataBuffer , 'A' , 100 - 1 )"	32:12:881:911	801385	2	True				
ANR	801437	CallExpression	"memset ( dataBuffer , 'A' , 100 - 1 )"		801385	0					
ANR	801438	Callee	memset		801385	0					
ANR	801439	Identifier	memset		801385	0					
ANR	801440	ArgumentList	dataBuffer		801385	1					
ANR	801441	Argument	dataBuffer		801385	0					
ANR	801442	Identifier	dataBuffer		801385	0					
ANR	801443	Argument	'A'		801385	1					
ANR	801444	PrimaryExpression	'A'		801385	0					
ANR	801445	Argument	100 - 1		801385	2					
ANR	801446	AdditiveExpression	100 - 1		801385	0		-			
ANR	801447	PrimaryExpression	100		801385	0					
ANR	801448	PrimaryExpression	1		801385	1					
ANR	801449	ExpressionStatement	dataBuffer [ 100 - 1 ] = '\\0'	33:12:926:950	801385	3	True				
ANR	801450	AssignmentExpression	dataBuffer [ 100 - 1 ] = '\\0'		801385	0		=			
ANR	801451	ArrayIndexing	dataBuffer [ 100 - 1 ]		801385	0					
ANR	801452	Identifier	dataBuffer		801385	0					
ANR	801453	AdditiveExpression	100 - 1		801385	1		-			
ANR	801454	PrimaryExpression	100		801385	0					
ANR	801455	PrimaryExpression	1		801385	1					
ANR	801456	PrimaryExpression	'\\0'		801385	1					
ANR	801457	ExpressionStatement	data = dataBuffer - 8	35:12:1045:1066	801385	4	True				
ANR	801458	AssignmentExpression	data = dataBuffer - 8		801385	0		=			
ANR	801459	Identifier	data		801385	0					
ANR	801460	AdditiveExpression	dataBuffer - 8		801385	1		-			
ANR	801461	Identifier	dataBuffer		801385	0					
ANR	801462	PrimaryExpression	8		801385	1					
ANR	801463	CompoundStatement		17:8:446:462	801385	3					
ANR	801464	IdentifierDeclStatement	size_t i ;	39:8:1102:1110	801385	0	True				
ANR	801465	IdentifierDecl	i		801385	0					
ANR	801466	IdentifierDeclType	size_t		801385	0					
ANR	801467	Identifier	i		801385	1					
ANR	801468	IdentifierDeclStatement	char source [ 100 ] ;	40:8:1121:1137	801385	1	True				
ANR	801469	IdentifierDecl	source [ 100 ]		801385	0					
ANR	801470	IdentifierDeclType	char [ 100 ]		801385	0					
ANR	801471	Identifier	source		801385	1					
ANR	801472	PrimaryExpression	100		801385	2					
ANR	801473	ExpressionStatement	"memset ( source , 'C' , 100 - 1 )"	41:8:1148:1174	801385	2	True				
ANR	801474	CallExpression	"memset ( source , 'C' , 100 - 1 )"		801385	0					
ANR	801475	Callee	memset		801385	0					
ANR	801476	Identifier	memset		801385	0					
ANR	801477	ArgumentList	source		801385	1					
ANR	801478	Argument	source		801385	0					
ANR	801479	Identifier	source		801385	0					
ANR	801480	Argument	'C'		801385	1					
ANR	801481	PrimaryExpression	'C'		801385	0					
ANR	801482	Argument	100 - 1		801385	2					
ANR	801483	AdditiveExpression	100 - 1		801385	0		-			
ANR	801484	PrimaryExpression	100		801385	0					
ANR	801485	PrimaryExpression	1		801385	1					
ANR	801486	ExpressionStatement	source [ 100 - 1 ] = '\\0'	42:8:1206:1226	801385	3	True				
ANR	801487	AssignmentExpression	source [ 100 - 1 ] = '\\0'		801385	0		=			
ANR	801488	ArrayIndexing	source [ 100 - 1 ]		801385	0					
ANR	801489	Identifier	source		801385	0					
ANR	801490	AdditiveExpression	100 - 1		801385	1		-			
ANR	801491	PrimaryExpression	100		801385	0					
ANR	801492	PrimaryExpression	1		801385	1					
ANR	801493	PrimaryExpression	'\\0'		801385	1					
ANR	801494	ForStatement	for ( i = 0 ; i < 100 ; i ++ )		801385	4					
ANR	801495	ForInit	i = 0 ;	44:13:1356:1361	801385	0	True				
ANR	801496	AssignmentExpression	i = 0		801385	0		=			
ANR	801497	Identifier	i		801385	0					
ANR	801498	PrimaryExpression	0		801385	1					
ANR	801499	Condition	i < 100	44:20:1363:1369	801385	1	True				
ANR	801500	RelationalExpression	i < 100		801385	0		<			
ANR	801501	Identifier	i		801385	0					
ANR	801502	PrimaryExpression	100		801385	1					
ANR	801503	PostIncDecOperationExpression	i ++	44:29:1372:1374	801385	2	True				
ANR	801504	Identifier	i		801385	0					
ANR	801505	IncDec	++		801385	1					
ANR	801506	CompoundStatement		22:8:711:711	801385	3					
ANR	801507	ExpressionStatement	data [ i ] = source [ i ]	46:12:1401:1420	801385	0	True				
ANR	801508	AssignmentExpression	data [ i ] = source [ i ]		801385	0		=			
ANR	801509	ArrayIndexing	data [ i ]		801385	0					
ANR	801510	Identifier	data		801385	0					
ANR	801511	Identifier	i		801385	1					
ANR	801512	ArrayIndexing	source [ i ]		801385	1					
ANR	801513	Identifier	source		801385	0					
ANR	801514	Identifier	i		801385	1					
ANR	801515	ExpressionStatement	data [ 100 - 1 ] = '\\0'	49:8:1506:1524	801385	5	True				
ANR	801516	AssignmentExpression	data [ 100 - 1 ] = '\\0'		801385	0		=			
ANR	801517	ArrayIndexing	data [ 100 - 1 ]		801385	0					
ANR	801518	Identifier	data		801385	0					
ANR	801519	AdditiveExpression	100 - 1		801385	1		-			
ANR	801520	PrimaryExpression	100		801385	0					
ANR	801521	PrimaryExpression	1		801385	1					
ANR	801522	PrimaryExpression	'\\0'		801385	1					
ANR	801523	ExpressionStatement	printLine ( data )	50:8:1535:1550	801385	6	True				
ANR	801524	CallExpression	printLine ( data )		801385	0					
ANR	801525	Callee	printLine		801385	0					
ANR	801526	Identifier	printLine		801385	0					
ANR	801527	ArgumentList	data		801385	1					
ANR	801528	Argument	data		801385	0					
ANR	801529	Identifier	data		801385	0					
ANR	801530	ReturnType	void		801385	1					
ANR	801531	Identifier	CWE124_Buffer_Underwrite__malloc_char_loop_14_bad		801385	2					
ANR	801532	ParameterList			801385	3					
ANR	801533	CFGEntryNode	ENTRY		801385		True				
ANR	801534	CFGExitNode	EXIT		801385		True				
ANR	801535	Symbol	malloc		801385						
ANR	801536	Symbol	NULL		801385						
ANR	801537	Symbol	* i		801385						
ANR	801538	Symbol	data		801385						
ANR	801539	Symbol	* source		801385						
ANR	801540	Symbol	dataBuffer		801385						
ANR	801541	Symbol	i		801385						
ANR	801542	Symbol	source		801385						
ANR	801543	Symbol	globalFive		801385						
ANR	801544	Symbol	* data		801385						
ANR	801545	Symbol	* dataBuffer		801385						
ANR	801546	Function	goodG2B1	61:0:1850:3039							
ANR	801547	FunctionDef	goodG2B1 ()		801546	0					
ANR	801548	CompoundStatement		62:0:1874:3039	801546	0					
ANR	801549	IdentifierDeclStatement	char * data ;	63:4:1881:1892	801546	0	True				
ANR	801550	IdentifierDecl	* data		801546	0					
ANR	801551	IdentifierDeclType	char *		801546	0					
ANR	801552	Identifier	data		801546	1					
ANR	801553	ExpressionStatement	data = NULL	64:4:1899:1910	801546	1	True				
ANR	801554	AssignmentExpression	data = NULL		801546	0		=			
ANR	801555	Identifier	data		801546	0					
ANR	801556	Identifier	NULL		801546	1					
ANR	801557	IfStatement	if ( globalFive != 5 )		801546	2					
ANR	801558	Condition	globalFive != 5	65:7:1920:1932	801546	0	True				
ANR	801559	EqualityExpression	globalFive != 5		801546	0		!=			
ANR	801560	Identifier	globalFive		801546	0					
ANR	801561	PrimaryExpression	5		801546	1					
ANR	801562	CompoundStatement		5:4:65:65	801546	1					
ANR	801563	ExpressionStatement	"printLine ( ""Benign, fixed string"" )"	68:8:2027:2060	801546	0	True				
ANR	801564	CallExpression	"printLine ( ""Benign, fixed string"" )"		801546	0					
ANR	801565	Callee	printLine		801546	0					
ANR	801566	Identifier	printLine		801546	0					
ANR	801567	ArgumentList	"""Benign, fixed string"""		801546	1					
ANR	801568	Argument	"""Benign, fixed string"""		801546	0					
ANR	801569	PrimaryExpression	"""Benign, fixed string"""		801546	0					
ANR	801570	ElseStatement	else		801546	0					
ANR	801571	CompoundStatement		10:4:209:209	801546	0					
ANR	801572	CompoundStatement		12:12:235:287	801546	0					
ANR	801573	IdentifierDeclStatement	char * dataBuffer = ( char * ) malloc ( 100 * sizeof ( char ) ) ;	73:12:2110:2162	801546	0	True				
ANR	801574	IdentifierDecl	* dataBuffer = ( char * ) malloc ( 100 * sizeof ( char ) )		801546	0					
ANR	801575	IdentifierDeclType	char *		801546	0					
ANR	801576	Identifier	dataBuffer		801546	1					
ANR	801577	AssignmentExpression	* dataBuffer = ( char * ) malloc ( 100 * sizeof ( char ) )		801546	2		=			
ANR	801578	Identifier	dataBuffer		801546	0					
ANR	801579	CastExpression	( char * ) malloc ( 100 * sizeof ( char ) )		801546	1					
ANR	801580	CastTarget	char *		801546	0					
ANR	801581	CallExpression	malloc ( 100 * sizeof ( char ) )		801546	1					
ANR	801582	Callee	malloc		801546	0					
ANR	801583	Identifier	malloc		801546	0					
ANR	801584	ArgumentList	100 * sizeof ( char )		801546	1					
ANR	801585	Argument	100 * sizeof ( char )		801546	0					
ANR	801586	MultiplicativeExpression	100 * sizeof ( char )		801546	0		*			
ANR	801587	PrimaryExpression	100		801546	0					
ANR	801588	SizeofExpression	sizeof ( char )		801546	1					
ANR	801589	Sizeof	sizeof		801546	0					
ANR	801590	SizeofOperand	char		801546	1					
ANR	801591	IfStatement	if ( dataBuffer == NULL )		801546	1					
ANR	801592	Condition	dataBuffer == NULL	74:16:2181:2198	801546	0	True				
ANR	801593	EqualityExpression	dataBuffer == NULL		801546	0		==			
ANR	801594	Identifier	dataBuffer		801546	0					
ANR	801595	Identifier	NULL		801546	1					
ANR	801596	CompoundStatement		13:36:326:326	801546	1					
ANR	801597	ExpressionStatement	exit ( - 1 )	74:37:2202:2210	801546	0	True				
ANR	801598	CallExpression	exit ( - 1 )		801546	0					
ANR	801599	Callee	exit		801546	0					
ANR	801600	Identifier	exit		801546	0					
ANR	801601	ArgumentList	- 1		801546	1					
ANR	801602	Argument	- 1		801546	0					
ANR	801603	UnaryOperationExpression	- 1		801546	0					
ANR	801604	UnaryOperator	-		801546	0					
ANR	801605	PrimaryExpression	1		801546	1					
ANR	801606	ExpressionStatement	"memset ( dataBuffer , 'A' , 100 - 1 )"	75:12:2225:2255	801546	2	True				
ANR	801607	CallExpression	"memset ( dataBuffer , 'A' , 100 - 1 )"		801546	0					
ANR	801608	Callee	memset		801546	0					
ANR	801609	Identifier	memset		801546	0					
ANR	801610	ArgumentList	dataBuffer		801546	1					
ANR	801611	Argument	dataBuffer		801546	0					
ANR	801612	Identifier	dataBuffer		801546	0					
ANR	801613	Argument	'A'		801546	1					
ANR	801614	PrimaryExpression	'A'		801546	0					
ANR	801615	Argument	100 - 1		801546	2					
ANR	801616	AdditiveExpression	100 - 1		801546	0		-			
ANR	801617	PrimaryExpression	100		801546	0					
ANR	801618	PrimaryExpression	1		801546	1					
ANR	801619	ExpressionStatement	dataBuffer [ 100 - 1 ] = '\\0'	76:12:2270:2294	801546	3	True				
ANR	801620	AssignmentExpression	dataBuffer [ 100 - 1 ] = '\\0'		801546	0		=			
ANR	801621	ArrayIndexing	dataBuffer [ 100 - 1 ]		801546	0					
ANR	801622	Identifier	dataBuffer		801546	0					
ANR	801623	AdditiveExpression	100 - 1		801546	1		-			
ANR	801624	PrimaryExpression	100		801546	0					
ANR	801625	PrimaryExpression	1		801546	1					
ANR	801626	PrimaryExpression	'\\0'		801546	1					
ANR	801627	ExpressionStatement	data = dataBuffer	78:12:2381:2398	801546	4	True				
ANR	801628	AssignmentExpression	data = dataBuffer		801546	0		=			
ANR	801629	Identifier	data		801546	0					
ANR	801630	Identifier	dataBuffer		801546	1					
ANR	801631	CompoundStatement		22:8:578:594	801546	3					
ANR	801632	IdentifierDeclStatement	size_t i ;	82:8:2434:2442	801546	0	True				
ANR	801633	IdentifierDecl	i		801546	0					
ANR	801634	IdentifierDeclType	size_t		801546	0					
ANR	801635	Identifier	i		801546	1					
ANR	801636	IdentifierDeclStatement	char source [ 100 ] ;	83:8:2453:2469	801546	1	True				
ANR	801637	IdentifierDecl	source [ 100 ]		801546	0					
ANR	801638	IdentifierDeclType	char [ 100 ]		801546	0					
ANR	801639	Identifier	source		801546	1					
ANR	801640	PrimaryExpression	100		801546	2					
ANR	801641	ExpressionStatement	"memset ( source , 'C' , 100 - 1 )"	84:8:2480:2506	801546	2	True				
ANR	801642	CallExpression	"memset ( source , 'C' , 100 - 1 )"		801546	0					
ANR	801643	Callee	memset		801546	0					
ANR	801644	Identifier	memset		801546	0					
ANR	801645	ArgumentList	source		801546	1					
ANR	801646	Argument	source		801546	0					
ANR	801647	Identifier	source		801546	0					
ANR	801648	Argument	'C'		801546	1					
ANR	801649	PrimaryExpression	'C'		801546	0					
ANR	801650	Argument	100 - 1		801546	2					
ANR	801651	AdditiveExpression	100 - 1		801546	0		-			
ANR	801652	PrimaryExpression	100		801546	0					
ANR	801653	PrimaryExpression	1		801546	1					
ANR	801654	ExpressionStatement	source [ 100 - 1 ] = '\\0'	85:8:2538:2558	801546	3	True				
ANR	801655	AssignmentExpression	source [ 100 - 1 ] = '\\0'		801546	0		=			
ANR	801656	ArrayIndexing	source [ 100 - 1 ]		801546	0					
ANR	801657	Identifier	source		801546	0					
ANR	801658	AdditiveExpression	100 - 1		801546	1		-			
ANR	801659	PrimaryExpression	100		801546	0					
ANR	801660	PrimaryExpression	1		801546	1					
ANR	801661	PrimaryExpression	'\\0'		801546	1					
ANR	801662	ForStatement	for ( i = 0 ; i < 100 ; i ++ )		801546	4					
ANR	801663	ForInit	i = 0 ;	87:13:2688:2693	801546	0	True				
ANR	801664	AssignmentExpression	i = 0		801546	0		=			
ANR	801665	Identifier	i		801546	0					
ANR	801666	PrimaryExpression	0		801546	1					
ANR	801667	Condition	i < 100	87:20:2695:2701	801546	1	True				
ANR	801668	RelationalExpression	i < 100		801546	0		<			
ANR	801669	Identifier	i		801546	0					
ANR	801670	PrimaryExpression	100		801546	1					
ANR	801671	PostIncDecOperationExpression	i ++	87:29:2704:2706	801546	2	True				
ANR	801672	Identifier	i		801546	0					
ANR	801673	IncDec	++		801546	1					
ANR	801674	CompoundStatement		27:8:843:843	801546	3					
ANR	801675	ExpressionStatement	data [ i ] = source [ i ]	89:12:2733:2752	801546	0	True				
ANR	801676	AssignmentExpression	data [ i ] = source [ i ]		801546	0		=			
ANR	801677	ArrayIndexing	data [ i ]		801546	0					
ANR	801678	Identifier	data		801546	0					
ANR	801679	Identifier	i		801546	1					
ANR	801680	ArrayIndexing	source [ i ]		801546	1					
ANR	801681	Identifier	source		801546	0					
ANR	801682	Identifier	i		801546	1					
ANR	801683	ExpressionStatement	data [ 100 - 1 ] = '\\0'	92:8:2838:2856	801546	5	True				
ANR	801684	AssignmentExpression	data [ 100 - 1 ] = '\\0'		801546	0		=			
ANR	801685	ArrayIndexing	data [ 100 - 1 ]		801546	0					
ANR	801686	Identifier	data		801546	0					
ANR	801687	AdditiveExpression	100 - 1		801546	1		-			
ANR	801688	PrimaryExpression	100		801546	0					
ANR	801689	PrimaryExpression	1		801546	1					
ANR	801690	PrimaryExpression	'\\0'		801546	1					
ANR	801691	ExpressionStatement	printLine ( data )	93:8:2867:2882	801546	6	True				
ANR	801692	CallExpression	printLine ( data )		801546	0					
ANR	801693	Callee	printLine		801546	0					
ANR	801694	Identifier	printLine		801546	0					
ANR	801695	ArgumentList	data		801546	1					
ANR	801696	Argument	data		801546	0					
ANR	801697	Identifier	data		801546	0					
ANR	801698	ReturnType	static void		801546	1					
ANR	801699	Identifier	goodG2B1		801546	2					
ANR	801700	ParameterList			801546	3					
ANR	801701	CFGEntryNode	ENTRY		801546		True				
ANR	801702	CFGExitNode	EXIT		801546		True				
ANR	801703	Symbol	malloc		801546						
ANR	801704	Symbol	NULL		801546						
ANR	801705	Symbol	* i		801546						
ANR	801706	Symbol	data		801546						
ANR	801707	Symbol	* source		801546						
ANR	801708	Symbol	dataBuffer		801546						
ANR	801709	Symbol	i		801546						
ANR	801710	Symbol	source		801546						
ANR	801711	Symbol	globalFive		801546						
ANR	801712	Symbol	* data		801546						
ANR	801713	Symbol	* dataBuffer		801546						
ANR	801714	Function	goodG2B2	100:0:3135:4180							
ANR	801715	FunctionDef	goodG2B2 ()		801714	0					
ANR	801716	CompoundStatement		101:0:3159:4180	801714	0					
ANR	801717	IdentifierDeclStatement	char * data ;	102:4:3166:3177	801714	0	True				
ANR	801718	IdentifierDecl	* data		801714	0					
ANR	801719	IdentifierDeclType	char *		801714	0					
ANR	801720	Identifier	data		801714	1					
ANR	801721	ExpressionStatement	data = NULL	103:4:3184:3195	801714	1	True				
ANR	801722	AssignmentExpression	data = NULL		801714	0		=			
ANR	801723	Identifier	data		801714	0					
ANR	801724	Identifier	NULL		801714	1					
ANR	801725	IfStatement	if ( globalFive == 5 )		801714	2					
ANR	801726	Condition	globalFive == 5	104:7:3205:3217	801714	0	True				
ANR	801727	EqualityExpression	globalFive == 5		801714	0		==			
ANR	801728	Identifier	globalFive		801714	0					
ANR	801729	PrimaryExpression	5		801714	1					
ANR	801730	CompoundStatement		5:4:65:65	801714	1					
ANR	801731	CompoundStatement		7:12:91:143	801714	0					
ANR	801732	IdentifierDeclStatement	char * dataBuffer = ( char * ) malloc ( 100 * sizeof ( char ) ) ;	107:12:3251:3303	801714	0	True				
ANR	801733	IdentifierDecl	* dataBuffer = ( char * ) malloc ( 100 * sizeof ( char ) )		801714	0					
ANR	801734	IdentifierDeclType	char *		801714	0					
ANR	801735	Identifier	dataBuffer		801714	1					
ANR	801736	AssignmentExpression	* dataBuffer = ( char * ) malloc ( 100 * sizeof ( char ) )		801714	2		=			
ANR	801737	Identifier	dataBuffer		801714	0					
ANR	801738	CastExpression	( char * ) malloc ( 100 * sizeof ( char ) )		801714	1					
ANR	801739	CastTarget	char *		801714	0					
ANR	801740	CallExpression	malloc ( 100 * sizeof ( char ) )		801714	1					
ANR	801741	Callee	malloc		801714	0					
ANR	801742	Identifier	malloc		801714	0					
ANR	801743	ArgumentList	100 * sizeof ( char )		801714	1					
ANR	801744	Argument	100 * sizeof ( char )		801714	0					
ANR	801745	MultiplicativeExpression	100 * sizeof ( char )		801714	0		*			
ANR	801746	PrimaryExpression	100		801714	0					
ANR	801747	SizeofExpression	sizeof ( char )		801714	1					
ANR	801748	Sizeof	sizeof		801714	0					
ANR	801749	SizeofOperand	char		801714	1					
ANR	801750	IfStatement	if ( dataBuffer == NULL )		801714	1					
ANR	801751	Condition	dataBuffer == NULL	108:16:3322:3339	801714	0	True				
ANR	801752	EqualityExpression	dataBuffer == NULL		801714	0		==			
ANR	801753	Identifier	dataBuffer		801714	0					
ANR	801754	Identifier	NULL		801714	1					
ANR	801755	CompoundStatement		8:36:182:182	801714	1					
ANR	801756	ExpressionStatement	exit ( - 1 )	108:37:3343:3351	801714	0	True				
ANR	801757	CallExpression	exit ( - 1 )		801714	0					
ANR	801758	Callee	exit		801714	0					
ANR	801759	Identifier	exit		801714	0					
ANR	801760	ArgumentList	- 1		801714	1					
ANR	801761	Argument	- 1		801714	0					
ANR	801762	UnaryOperationExpression	- 1		801714	0					
ANR	801763	UnaryOperator	-		801714	0					
ANR	801764	PrimaryExpression	1		801714	1					
ANR	801765	ExpressionStatement	"memset ( dataBuffer , 'A' , 100 - 1 )"	109:12:3366:3396	801714	2	True				
ANR	801766	CallExpression	"memset ( dataBuffer , 'A' , 100 - 1 )"		801714	0					
ANR	801767	Callee	memset		801714	0					
ANR	801768	Identifier	memset		801714	0					
ANR	801769	ArgumentList	dataBuffer		801714	1					
ANR	801770	Argument	dataBuffer		801714	0					
ANR	801771	Identifier	dataBuffer		801714	0					
ANR	801772	Argument	'A'		801714	1					
ANR	801773	PrimaryExpression	'A'		801714	0					
ANR	801774	Argument	100 - 1		801714	2					
ANR	801775	AdditiveExpression	100 - 1		801714	0		-			
ANR	801776	PrimaryExpression	100		801714	0					
ANR	801777	PrimaryExpression	1		801714	1					
ANR	801778	ExpressionStatement	dataBuffer [ 100 - 1 ] = '\\0'	110:12:3411:3435	801714	3	True				
ANR	801779	AssignmentExpression	dataBuffer [ 100 - 1 ] = '\\0'		801714	0		=			
ANR	801780	ArrayIndexing	dataBuffer [ 100 - 1 ]		801714	0					
ANR	801781	Identifier	dataBuffer		801714	0					
ANR	801782	AdditiveExpression	100 - 1		801714	1		-			
ANR	801783	PrimaryExpression	100		801714	0					
ANR	801784	PrimaryExpression	1		801714	1					
ANR	801785	PrimaryExpression	'\\0'		801714	1					
ANR	801786	ExpressionStatement	data = dataBuffer	112:12:3522:3539	801714	4	True				
ANR	801787	AssignmentExpression	data = dataBuffer		801714	0		=			
ANR	801788	Identifier	data		801714	0					
ANR	801789	Identifier	dataBuffer		801714	1					
ANR	801790	CompoundStatement		17:8:434:450	801714	3					
ANR	801791	IdentifierDeclStatement	size_t i ;	116:8:3575:3583	801714	0	True				
ANR	801792	IdentifierDecl	i		801714	0					
ANR	801793	IdentifierDeclType	size_t		801714	0					
ANR	801794	Identifier	i		801714	1					
ANR	801795	IdentifierDeclStatement	char source [ 100 ] ;	117:8:3594:3610	801714	1	True				
ANR	801796	IdentifierDecl	source [ 100 ]		801714	0					
ANR	801797	IdentifierDeclType	char [ 100 ]		801714	0					
ANR	801798	Identifier	source		801714	1					
ANR	801799	PrimaryExpression	100		801714	2					
ANR	801800	ExpressionStatement	"memset ( source , 'C' , 100 - 1 )"	118:8:3621:3647	801714	2	True				
ANR	801801	CallExpression	"memset ( source , 'C' , 100 - 1 )"		801714	0					
ANR	801802	Callee	memset		801714	0					
ANR	801803	Identifier	memset		801714	0					
ANR	801804	ArgumentList	source		801714	1					
ANR	801805	Argument	source		801714	0					
ANR	801806	Identifier	source		801714	0					
ANR	801807	Argument	'C'		801714	1					
ANR	801808	PrimaryExpression	'C'		801714	0					
ANR	801809	Argument	100 - 1		801714	2					
ANR	801810	AdditiveExpression	100 - 1		801714	0		-			
ANR	801811	PrimaryExpression	100		801714	0					
ANR	801812	PrimaryExpression	1		801714	1					
ANR	801813	ExpressionStatement	source [ 100 - 1 ] = '\\0'	119:8:3679:3699	801714	3	True				
ANR	801814	AssignmentExpression	source [ 100 - 1 ] = '\\0'		801714	0		=			
ANR	801815	ArrayIndexing	source [ 100 - 1 ]		801714	0					
ANR	801816	Identifier	source		801714	0					
ANR	801817	AdditiveExpression	100 - 1		801714	1		-			
ANR	801818	PrimaryExpression	100		801714	0					
ANR	801819	PrimaryExpression	1		801714	1					
ANR	801820	PrimaryExpression	'\\0'		801714	1					
ANR	801821	ForStatement	for ( i = 0 ; i < 100 ; i ++ )		801714	4					
ANR	801822	ForInit	i = 0 ;	121:13:3829:3834	801714	0	True				
ANR	801823	AssignmentExpression	i = 0		801714	0		=			
ANR	801824	Identifier	i		801714	0					
ANR	801825	PrimaryExpression	0		801714	1					
ANR	801826	Condition	i < 100	121:20:3836:3842	801714	1	True				
ANR	801827	RelationalExpression	i < 100		801714	0		<			
ANR	801828	Identifier	i		801714	0					
ANR	801829	PrimaryExpression	100		801714	1					
ANR	801830	PostIncDecOperationExpression	i ++	121:29:3845:3847	801714	2	True				
ANR	801831	Identifier	i		801714	0					
ANR	801832	IncDec	++		801714	1					
ANR	801833	CompoundStatement		22:8:699:699	801714	3					
ANR	801834	ExpressionStatement	data [ i ] = source [ i ]	123:12:3874:3893	801714	0	True				
ANR	801835	AssignmentExpression	data [ i ] = source [ i ]		801714	0		=			
ANR	801836	ArrayIndexing	data [ i ]		801714	0					
ANR	801837	Identifier	data		801714	0					
ANR	801838	Identifier	i		801714	1					
ANR	801839	ArrayIndexing	source [ i ]		801714	1					
ANR	801840	Identifier	source		801714	0					
ANR	801841	Identifier	i		801714	1					
ANR	801842	ExpressionStatement	data [ 100 - 1 ] = '\\0'	126:8:3979:3997	801714	5	True				
ANR	801843	AssignmentExpression	data [ 100 - 1 ] = '\\0'		801714	0		=			
ANR	801844	ArrayIndexing	data [ 100 - 1 ]		801714	0					
ANR	801845	Identifier	data		801714	0					
ANR	801846	AdditiveExpression	100 - 1		801714	1		-			
ANR	801847	PrimaryExpression	100		801714	0					
ANR	801848	PrimaryExpression	1		801714	1					
ANR	801849	PrimaryExpression	'\\0'		801714	1					
ANR	801850	ExpressionStatement	printLine ( data )	127:8:4008:4023	801714	6	True				
ANR	801851	CallExpression	printLine ( data )		801714	0					
ANR	801852	Callee	printLine		801714	0					
ANR	801853	Identifier	printLine		801714	0					
ANR	801854	ArgumentList	data		801714	1					
ANR	801855	Argument	data		801714	0					
ANR	801856	Identifier	data		801714	0					
ANR	801857	ReturnType	static void		801714	1					
ANR	801858	Identifier	goodG2B2		801714	2					
ANR	801859	ParameterList			801714	3					
ANR	801860	CFGEntryNode	ENTRY		801714		True				
ANR	801861	CFGExitNode	EXIT		801714		True				
ANR	801862	Symbol	malloc		801714						
ANR	801863	Symbol	NULL		801714						
ANR	801864	Symbol	* i		801714						
ANR	801865	Symbol	data		801714						
ANR	801866	Symbol	* source		801714						
ANR	801867	Symbol	dataBuffer		801714						
ANR	801868	Symbol	i		801714						
ANR	801869	Symbol	source		801714						
ANR	801870	Symbol	globalFive		801714						
ANR	801871	Symbol	* data		801714						
ANR	801872	Symbol	* dataBuffer		801714						
ANR	801873	Function	CWE124_Buffer_Underwrite__malloc_char_loop_14_good	133:0:4185:4281							
ANR	801874	FunctionDef	CWE124_Buffer_Underwrite__malloc_char_loop_14_good ()		801873	0					
ANR	801875	CompoundStatement		134:0:4244:4281	801873	0					
ANR	801876	ExpressionStatement	goodG2B1 ( )	135:4:4251:4261	801873	0	True				
ANR	801877	CallExpression	goodG2B1 ( )		801873	0					
ANR	801878	Callee	goodG2B1		801873	0					
ANR	801879	Identifier	goodG2B1		801873	0					
ANR	801880	ArgumentList			801873	1					
ANR	801881	ExpressionStatement	goodG2B2 ( )	136:4:4268:4278	801873	1	True				
ANR	801882	CallExpression	goodG2B2 ( )		801873	0					
ANR	801883	Callee	goodG2B2		801873	0					
ANR	801884	Identifier	goodG2B2		801873	0					
ANR	801885	ArgumentList			801873	1					
ANR	801886	ReturnType	void		801873	1					
ANR	801887	Identifier	CWE124_Buffer_Underwrite__malloc_char_loop_14_good		801873	2					
ANR	801888	ParameterList			801873	3					
ANR	801889	CFGEntryNode	ENTRY		801873		True				
ANR	801890	CFGExitNode	EXIT		801873		True				
ANR	801891	Function	main	149:0:4630:5085							
ANR	801892	FunctionDef	"main (int argc , char * argv [ ])"		801891	0					
ANR	801893	CompoundStatement		150:0:4665:5085	801891	0					
ANR	801894	ExpressionStatement	srand ( ( unsigned ) time ( NULL ) )	152:4:4699:4728	801891	0	True				
ANR	801895	CallExpression	srand ( ( unsigned ) time ( NULL ) )		801891	0					
ANR	801896	Callee	srand		801891	0					
ANR	801897	Identifier	srand		801891	0					
ANR	801898	ArgumentList	( unsigned ) time ( NULL )		801891	1					
ANR	801899	Argument	( unsigned ) time ( NULL )		801891	0					
ANR	801900	CastExpression	( unsigned ) time ( NULL )		801891	0					
ANR	801901	CastTarget	unsigned		801891	0					
ANR	801902	CallExpression	time ( NULL )		801891	1					
ANR	801903	Callee	time		801891	0					
ANR	801904	Identifier	time		801891	0					
ANR	801905	ArgumentList	NULL		801891	1					
ANR	801906	Argument	NULL		801891	0					
ANR	801907	Identifier	NULL		801891	0					
ANR	801908	ExpressionStatement	"printLine ( ""Calling good()..."" )"	154:4:4753:4783	801891	1	True				
ANR	801909	CallExpression	"printLine ( ""Calling good()..."" )"		801891	0					
ANR	801910	Callee	printLine		801891	0					
ANR	801911	Identifier	printLine		801891	0					
ANR	801912	ArgumentList	"""Calling good()..."""		801891	1					
ANR	801913	Argument	"""Calling good()..."""		801891	0					
ANR	801914	PrimaryExpression	"""Calling good()..."""		801891	0					
ANR	801915	ExpressionStatement	CWE124_Buffer_Underwrite__malloc_char_loop_14_good ( )	155:4:4790:4842	801891	2	True				
ANR	801916	CallExpression	CWE124_Buffer_Underwrite__malloc_char_loop_14_good ( )		801891	0					
ANR	801917	Callee	CWE124_Buffer_Underwrite__malloc_char_loop_14_good		801891	0					
ANR	801918	Identifier	CWE124_Buffer_Underwrite__malloc_char_loop_14_good		801891	0					
ANR	801919	ArgumentList			801891	1					
ANR	801920	ExpressionStatement	"printLine ( ""Finished good()"" )"	156:4:4849:4877	801891	3	True				
ANR	801921	CallExpression	"printLine ( ""Finished good()"" )"		801891	0					
ANR	801922	Callee	printLine		801891	0					
ANR	801923	Identifier	printLine		801891	0					
ANR	801924	ArgumentList	"""Finished good()"""		801891	1					
ANR	801925	Argument	"""Finished good()"""		801891	0					
ANR	801926	PrimaryExpression	"""Finished good()"""		801891	0					
ANR	801927	ExpressionStatement	"printLine ( ""Calling bad()..."" )"	159:4:4924:4953	801891	4	True				
ANR	801928	CallExpression	"printLine ( ""Calling bad()..."" )"		801891	0					
ANR	801929	Callee	printLine		801891	0					
ANR	801930	Identifier	printLine		801891	0					
ANR	801931	ArgumentList	"""Calling bad()..."""		801891	1					
ANR	801932	Argument	"""Calling bad()..."""		801891	0					
ANR	801933	PrimaryExpression	"""Calling bad()..."""		801891	0					
ANR	801934	ExpressionStatement	CWE124_Buffer_Underwrite__malloc_char_loop_14_bad ( )	160:4:4960:5011	801891	5	True				
ANR	801935	CallExpression	CWE124_Buffer_Underwrite__malloc_char_loop_14_bad ( )		801891	0					
ANR	801936	Callee	CWE124_Buffer_Underwrite__malloc_char_loop_14_bad		801891	0					
ANR	801937	Identifier	CWE124_Buffer_Underwrite__malloc_char_loop_14_bad		801891	0					
ANR	801938	ArgumentList			801891	1					
ANR	801939	ExpressionStatement	"printLine ( ""Finished bad()"" )"	161:4:5018:5045	801891	6	True				
ANR	801940	CallExpression	"printLine ( ""Finished bad()"" )"		801891	0					
ANR	801941	Callee	printLine		801891	0					
ANR	801942	Identifier	printLine		801891	0					
ANR	801943	ArgumentList	"""Finished bad()"""		801891	1					
ANR	801944	Argument	"""Finished bad()"""		801891	0					
ANR	801945	PrimaryExpression	"""Finished bad()"""		801891	0					
ANR	801946	ReturnStatement	return 0 ;	163:4:5074:5082	801891	7	True				
ANR	801947	PrimaryExpression	0		801891	0					
ANR	801948	ReturnType	int		801891	1					
ANR	801949	Identifier	main		801891	2					
ANR	801950	ParameterList	"int argc , char * argv [ ]"		801891	3					
ANR	801951	Parameter	int argc	149:9:4639:4646	801891	0	True				
ANR	801952	ParameterType	int		801891	0					
ANR	801953	Identifier	argc		801891	1					
ANR	801954	Parameter	char * argv [ ]	149:19:4649:4661	801891	1	True				
ANR	801955	ParameterType	char * [ ]		801891	0					
ANR	801956	Identifier	argv		801891	1					
ANR	801957	CFGEntryNode	ENTRY		801891		True				
ANR	801958	CFGExitNode	EXIT		801891		True				
ANR	801959	Symbol	argc		801891						
ANR	801960	Symbol	NULL		801891						
ANR	801961	Symbol	time		801891						
ANR	801962	Symbol	argv		801891						
