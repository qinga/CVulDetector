command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	800804	File	/develop/joernDwkProcess/joern-dev/./output/data/CWE119/source-code/119-900-c/testcases/000/234/318/CWE124_Buffer_Underwrite__malloc_char_loop_13.c								
ANR	800805	Function	CWE124_Buffer_Underwrite__malloc_char_loop_13_bad	23:0:630:1728							
ANR	800806	FunctionDef	CWE124_Buffer_Underwrite__malloc_char_loop_13_bad ()		800805	0					
ANR	800807	CompoundStatement		24:0:688:1728	800805	0					
ANR	800808	IdentifierDeclStatement	char * data ;	25:4:695:706	800805	0	True				
ANR	800809	IdentifierDecl	* data		800805	0					
ANR	800810	IdentifierDeclType	char *		800805	0					
ANR	800811	Identifier	data		800805	1					
ANR	800812	ExpressionStatement	data = NULL	26:4:713:724	800805	1	True				
ANR	800813	AssignmentExpression	data = NULL		800805	0		=			
ANR	800814	Identifier	data		800805	0					
ANR	800815	Identifier	NULL		800805	1					
ANR	800816	IfStatement	if ( GLOBAL_CONST_FIVE == 5 )		800805	2					
ANR	800817	Condition	GLOBAL_CONST_FIVE == 5	27:7:734:753	800805	0	True				
ANR	800818	EqualityExpression	GLOBAL_CONST_FIVE == 5		800805	0		==			
ANR	800819	Identifier	GLOBAL_CONST_FIVE		800805	0					
ANR	800820	PrimaryExpression	5		800805	1					
ANR	800821	CompoundStatement		5:4:72:72	800805	1					
ANR	800822	CompoundStatement		7:12:98:150	800805	0					
ANR	800823	IdentifierDeclStatement	char * dataBuffer = ( char * ) malloc ( 100 * sizeof ( char ) ) ;	30:12:787:839	800805	0	True				
ANR	800824	IdentifierDecl	* dataBuffer = ( char * ) malloc ( 100 * sizeof ( char ) )		800805	0					
ANR	800825	IdentifierDeclType	char *		800805	0					
ANR	800826	Identifier	dataBuffer		800805	1					
ANR	800827	AssignmentExpression	* dataBuffer = ( char * ) malloc ( 100 * sizeof ( char ) )		800805	2		=			
ANR	800828	Identifier	dataBuffer		800805	0					
ANR	800829	CastExpression	( char * ) malloc ( 100 * sizeof ( char ) )		800805	1					
ANR	800830	CastTarget	char *		800805	0					
ANR	800831	CallExpression	malloc ( 100 * sizeof ( char ) )		800805	1					
ANR	800832	Callee	malloc		800805	0					
ANR	800833	Identifier	malloc		800805	0					
ANR	800834	ArgumentList	100 * sizeof ( char )		800805	1					
ANR	800835	Argument	100 * sizeof ( char )		800805	0					
ANR	800836	MultiplicativeExpression	100 * sizeof ( char )		800805	0		*			
ANR	800837	PrimaryExpression	100		800805	0					
ANR	800838	SizeofExpression	sizeof ( char )		800805	1					
ANR	800839	Sizeof	sizeof		800805	0					
ANR	800840	SizeofOperand	char		800805	1					
ANR	800841	IfStatement	if ( dataBuffer == NULL )		800805	1					
ANR	800842	Condition	dataBuffer == NULL	31:16:858:875	800805	0	True				
ANR	800843	EqualityExpression	dataBuffer == NULL		800805	0		==			
ANR	800844	Identifier	dataBuffer		800805	0					
ANR	800845	Identifier	NULL		800805	1					
ANR	800846	CompoundStatement		8:36:189:189	800805	1					
ANR	800847	ExpressionStatement	exit ( - 1 )	31:37:879:887	800805	0	True				
ANR	800848	CallExpression	exit ( - 1 )		800805	0					
ANR	800849	Callee	exit		800805	0					
ANR	800850	Identifier	exit		800805	0					
ANR	800851	ArgumentList	- 1		800805	1					
ANR	800852	Argument	- 1		800805	0					
ANR	800853	UnaryOperationExpression	- 1		800805	0					
ANR	800854	UnaryOperator	-		800805	0					
ANR	800855	PrimaryExpression	1		800805	1					
ANR	800856	ExpressionStatement	"memset ( dataBuffer , 'A' , 100 - 1 )"	32:12:902:932	800805	2	True				
ANR	800857	CallExpression	"memset ( dataBuffer , 'A' , 100 - 1 )"		800805	0					
ANR	800858	Callee	memset		800805	0					
ANR	800859	Identifier	memset		800805	0					
ANR	800860	ArgumentList	dataBuffer		800805	1					
ANR	800861	Argument	dataBuffer		800805	0					
ANR	800862	Identifier	dataBuffer		800805	0					
ANR	800863	Argument	'A'		800805	1					
ANR	800864	PrimaryExpression	'A'		800805	0					
ANR	800865	Argument	100 - 1		800805	2					
ANR	800866	AdditiveExpression	100 - 1		800805	0		-			
ANR	800867	PrimaryExpression	100		800805	0					
ANR	800868	PrimaryExpression	1		800805	1					
ANR	800869	ExpressionStatement	dataBuffer [ 100 - 1 ] = '\\0'	33:12:947:971	800805	3	True				
ANR	800870	AssignmentExpression	dataBuffer [ 100 - 1 ] = '\\0'		800805	0		=			
ANR	800871	ArrayIndexing	dataBuffer [ 100 - 1 ]		800805	0					
ANR	800872	Identifier	dataBuffer		800805	0					
ANR	800873	AdditiveExpression	100 - 1		800805	1		-			
ANR	800874	PrimaryExpression	100		800805	0					
ANR	800875	PrimaryExpression	1		800805	1					
ANR	800876	PrimaryExpression	'\\0'		800805	1					
ANR	800877	ExpressionStatement	data = dataBuffer - 8	35:12:1066:1087	800805	4	True				
ANR	800878	AssignmentExpression	data = dataBuffer - 8		800805	0		=			
ANR	800879	Identifier	data		800805	0					
ANR	800880	AdditiveExpression	dataBuffer - 8		800805	1		-			
ANR	800881	Identifier	dataBuffer		800805	0					
ANR	800882	PrimaryExpression	8		800805	1					
ANR	800883	CompoundStatement		17:8:453:469	800805	3					
ANR	800884	IdentifierDeclStatement	size_t i ;	39:8:1123:1131	800805	0	True				
ANR	800885	IdentifierDecl	i		800805	0					
ANR	800886	IdentifierDeclType	size_t		800805	0					
ANR	800887	Identifier	i		800805	1					
ANR	800888	IdentifierDeclStatement	char source [ 100 ] ;	40:8:1142:1158	800805	1	True				
ANR	800889	IdentifierDecl	source [ 100 ]		800805	0					
ANR	800890	IdentifierDeclType	char [ 100 ]		800805	0					
ANR	800891	Identifier	source		800805	1					
ANR	800892	PrimaryExpression	100		800805	2					
ANR	800893	ExpressionStatement	"memset ( source , 'C' , 100 - 1 )"	41:8:1169:1195	800805	2	True				
ANR	800894	CallExpression	"memset ( source , 'C' , 100 - 1 )"		800805	0					
ANR	800895	Callee	memset		800805	0					
ANR	800896	Identifier	memset		800805	0					
ANR	800897	ArgumentList	source		800805	1					
ANR	800898	Argument	source		800805	0					
ANR	800899	Identifier	source		800805	0					
ANR	800900	Argument	'C'		800805	1					
ANR	800901	PrimaryExpression	'C'		800805	0					
ANR	800902	Argument	100 - 1		800805	2					
ANR	800903	AdditiveExpression	100 - 1		800805	0		-			
ANR	800904	PrimaryExpression	100		800805	0					
ANR	800905	PrimaryExpression	1		800805	1					
ANR	800906	ExpressionStatement	source [ 100 - 1 ] = '\\0'	42:8:1227:1247	800805	3	True				
ANR	800907	AssignmentExpression	source [ 100 - 1 ] = '\\0'		800805	0		=			
ANR	800908	ArrayIndexing	source [ 100 - 1 ]		800805	0					
ANR	800909	Identifier	source		800805	0					
ANR	800910	AdditiveExpression	100 - 1		800805	1		-			
ANR	800911	PrimaryExpression	100		800805	0					
ANR	800912	PrimaryExpression	1		800805	1					
ANR	800913	PrimaryExpression	'\\0'		800805	1					
ANR	800914	ForStatement	for ( i = 0 ; i < 100 ; i ++ )		800805	4					
ANR	800915	ForInit	i = 0 ;	44:13:1377:1382	800805	0	True				
ANR	800916	AssignmentExpression	i = 0		800805	0		=			
ANR	800917	Identifier	i		800805	0					
ANR	800918	PrimaryExpression	0		800805	1					
ANR	800919	Condition	i < 100	44:20:1384:1390	800805	1	True				
ANR	800920	RelationalExpression	i < 100		800805	0		<			
ANR	800921	Identifier	i		800805	0					
ANR	800922	PrimaryExpression	100		800805	1					
ANR	800923	PostIncDecOperationExpression	i ++	44:29:1393:1395	800805	2	True				
ANR	800924	Identifier	i		800805	0					
ANR	800925	IncDec	++		800805	1					
ANR	800926	CompoundStatement		22:8:718:718	800805	3					
ANR	800927	ExpressionStatement	data [ i ] = source [ i ]	46:12:1422:1441	800805	0	True				
ANR	800928	AssignmentExpression	data [ i ] = source [ i ]		800805	0		=			
ANR	800929	ArrayIndexing	data [ i ]		800805	0					
ANR	800930	Identifier	data		800805	0					
ANR	800931	Identifier	i		800805	1					
ANR	800932	ArrayIndexing	source [ i ]		800805	1					
ANR	800933	Identifier	source		800805	0					
ANR	800934	Identifier	i		800805	1					
ANR	800935	ExpressionStatement	data [ 100 - 1 ] = '\\0'	49:8:1527:1545	800805	5	True				
ANR	800936	AssignmentExpression	data [ 100 - 1 ] = '\\0'		800805	0		=			
ANR	800937	ArrayIndexing	data [ 100 - 1 ]		800805	0					
ANR	800938	Identifier	data		800805	0					
ANR	800939	AdditiveExpression	100 - 1		800805	1		-			
ANR	800940	PrimaryExpression	100		800805	0					
ANR	800941	PrimaryExpression	1		800805	1					
ANR	800942	PrimaryExpression	'\\0'		800805	1					
ANR	800943	ExpressionStatement	printLine ( data )	50:8:1556:1571	800805	6	True				
ANR	800944	CallExpression	printLine ( data )		800805	0					
ANR	800945	Callee	printLine		800805	0					
ANR	800946	Identifier	printLine		800805	0					
ANR	800947	ArgumentList	data		800805	1					
ANR	800948	Argument	data		800805	0					
ANR	800949	Identifier	data		800805	0					
ANR	800950	ReturnType	void		800805	1					
ANR	800951	Identifier	CWE124_Buffer_Underwrite__malloc_char_loop_13_bad		800805	2					
ANR	800952	ParameterList			800805	3					
ANR	800953	CFGEntryNode	ENTRY		800805		True				
ANR	800954	CFGExitNode	EXIT		800805		True				
ANR	800955	Symbol	malloc		800805						
ANR	800956	Symbol	GLOBAL_CONST_FIVE		800805						
ANR	800957	Symbol	NULL		800805						
ANR	800958	Symbol	* i		800805						
ANR	800959	Symbol	data		800805						
ANR	800960	Symbol	* source		800805						
ANR	800961	Symbol	dataBuffer		800805						
ANR	800962	Symbol	i		800805						
ANR	800963	Symbol	source		800805						
ANR	800964	Symbol	* data		800805						
ANR	800965	Symbol	* dataBuffer		800805						
ANR	800966	Function	goodG2B1	61:0:1885:3081							
ANR	800967	FunctionDef	goodG2B1 ()		800966	0					
ANR	800968	CompoundStatement		62:0:1909:3081	800966	0					
ANR	800969	IdentifierDeclStatement	char * data ;	63:4:1916:1927	800966	0	True				
ANR	800970	IdentifierDecl	* data		800966	0					
ANR	800971	IdentifierDeclType	char *		800966	0					
ANR	800972	Identifier	data		800966	1					
ANR	800973	ExpressionStatement	data = NULL	64:4:1934:1945	800966	1	True				
ANR	800974	AssignmentExpression	data = NULL		800966	0		=			
ANR	800975	Identifier	data		800966	0					
ANR	800976	Identifier	NULL		800966	1					
ANR	800977	IfStatement	if ( GLOBAL_CONST_FIVE != 5 )		800966	2					
ANR	800978	Condition	GLOBAL_CONST_FIVE != 5	65:7:1955:1974	800966	0	True				
ANR	800979	EqualityExpression	GLOBAL_CONST_FIVE != 5		800966	0		!=			
ANR	800980	Identifier	GLOBAL_CONST_FIVE		800966	0					
ANR	800981	PrimaryExpression	5		800966	1					
ANR	800982	CompoundStatement		5:4:72:72	800966	1					
ANR	800983	ExpressionStatement	"printLine ( ""Benign, fixed string"" )"	68:8:2069:2102	800966	0	True				
ANR	800984	CallExpression	"printLine ( ""Benign, fixed string"" )"		800966	0					
ANR	800985	Callee	printLine		800966	0					
ANR	800986	Identifier	printLine		800966	0					
ANR	800987	ArgumentList	"""Benign, fixed string"""		800966	1					
ANR	800988	Argument	"""Benign, fixed string"""		800966	0					
ANR	800989	PrimaryExpression	"""Benign, fixed string"""		800966	0					
ANR	800990	ElseStatement	else		800966	0					
ANR	800991	CompoundStatement		10:4:216:216	800966	0					
ANR	800992	CompoundStatement		12:12:242:294	800966	0					
ANR	800993	IdentifierDeclStatement	char * dataBuffer = ( char * ) malloc ( 100 * sizeof ( char ) ) ;	73:12:2152:2204	800966	0	True				
ANR	800994	IdentifierDecl	* dataBuffer = ( char * ) malloc ( 100 * sizeof ( char ) )		800966	0					
ANR	800995	IdentifierDeclType	char *		800966	0					
ANR	800996	Identifier	dataBuffer		800966	1					
ANR	800997	AssignmentExpression	* dataBuffer = ( char * ) malloc ( 100 * sizeof ( char ) )		800966	2		=			
ANR	800998	Identifier	dataBuffer		800966	0					
ANR	800999	CastExpression	( char * ) malloc ( 100 * sizeof ( char ) )		800966	1					
ANR	801000	CastTarget	char *		800966	0					
ANR	801001	CallExpression	malloc ( 100 * sizeof ( char ) )		800966	1					
ANR	801002	Callee	malloc		800966	0					
ANR	801003	Identifier	malloc		800966	0					
ANR	801004	ArgumentList	100 * sizeof ( char )		800966	1					
ANR	801005	Argument	100 * sizeof ( char )		800966	0					
ANR	801006	MultiplicativeExpression	100 * sizeof ( char )		800966	0		*			
ANR	801007	PrimaryExpression	100		800966	0					
ANR	801008	SizeofExpression	sizeof ( char )		800966	1					
ANR	801009	Sizeof	sizeof		800966	0					
ANR	801010	SizeofOperand	char		800966	1					
ANR	801011	IfStatement	if ( dataBuffer == NULL )		800966	1					
ANR	801012	Condition	dataBuffer == NULL	74:16:2223:2240	800966	0	True				
ANR	801013	EqualityExpression	dataBuffer == NULL		800966	0		==			
ANR	801014	Identifier	dataBuffer		800966	0					
ANR	801015	Identifier	NULL		800966	1					
ANR	801016	CompoundStatement		13:36:333:333	800966	1					
ANR	801017	ExpressionStatement	exit ( - 1 )	74:37:2244:2252	800966	0	True				
ANR	801018	CallExpression	exit ( - 1 )		800966	0					
ANR	801019	Callee	exit		800966	0					
ANR	801020	Identifier	exit		800966	0					
ANR	801021	ArgumentList	- 1		800966	1					
ANR	801022	Argument	- 1		800966	0					
ANR	801023	UnaryOperationExpression	- 1		800966	0					
ANR	801024	UnaryOperator	-		800966	0					
ANR	801025	PrimaryExpression	1		800966	1					
ANR	801026	ExpressionStatement	"memset ( dataBuffer , 'A' , 100 - 1 )"	75:12:2267:2297	800966	2	True				
ANR	801027	CallExpression	"memset ( dataBuffer , 'A' , 100 - 1 )"		800966	0					
ANR	801028	Callee	memset		800966	0					
ANR	801029	Identifier	memset		800966	0					
ANR	801030	ArgumentList	dataBuffer		800966	1					
ANR	801031	Argument	dataBuffer		800966	0					
ANR	801032	Identifier	dataBuffer		800966	0					
ANR	801033	Argument	'A'		800966	1					
ANR	801034	PrimaryExpression	'A'		800966	0					
ANR	801035	Argument	100 - 1		800966	2					
ANR	801036	AdditiveExpression	100 - 1		800966	0		-			
ANR	801037	PrimaryExpression	100		800966	0					
ANR	801038	PrimaryExpression	1		800966	1					
ANR	801039	ExpressionStatement	dataBuffer [ 100 - 1 ] = '\\0'	76:12:2312:2336	800966	3	True				
ANR	801040	AssignmentExpression	dataBuffer [ 100 - 1 ] = '\\0'		800966	0		=			
ANR	801041	ArrayIndexing	dataBuffer [ 100 - 1 ]		800966	0					
ANR	801042	Identifier	dataBuffer		800966	0					
ANR	801043	AdditiveExpression	100 - 1		800966	1		-			
ANR	801044	PrimaryExpression	100		800966	0					
ANR	801045	PrimaryExpression	1		800966	1					
ANR	801046	PrimaryExpression	'\\0'		800966	1					
ANR	801047	ExpressionStatement	data = dataBuffer	78:12:2423:2440	800966	4	True				
ANR	801048	AssignmentExpression	data = dataBuffer		800966	0		=			
ANR	801049	Identifier	data		800966	0					
ANR	801050	Identifier	dataBuffer		800966	1					
ANR	801051	CompoundStatement		22:8:585:601	800966	3					
ANR	801052	IdentifierDeclStatement	size_t i ;	82:8:2476:2484	800966	0	True				
ANR	801053	IdentifierDecl	i		800966	0					
ANR	801054	IdentifierDeclType	size_t		800966	0					
ANR	801055	Identifier	i		800966	1					
ANR	801056	IdentifierDeclStatement	char source [ 100 ] ;	83:8:2495:2511	800966	1	True				
ANR	801057	IdentifierDecl	source [ 100 ]		800966	0					
ANR	801058	IdentifierDeclType	char [ 100 ]		800966	0					
ANR	801059	Identifier	source		800966	1					
ANR	801060	PrimaryExpression	100		800966	2					
ANR	801061	ExpressionStatement	"memset ( source , 'C' , 100 - 1 )"	84:8:2522:2548	800966	2	True				
ANR	801062	CallExpression	"memset ( source , 'C' , 100 - 1 )"		800966	0					
ANR	801063	Callee	memset		800966	0					
ANR	801064	Identifier	memset		800966	0					
ANR	801065	ArgumentList	source		800966	1					
ANR	801066	Argument	source		800966	0					
ANR	801067	Identifier	source		800966	0					
ANR	801068	Argument	'C'		800966	1					
ANR	801069	PrimaryExpression	'C'		800966	0					
ANR	801070	Argument	100 - 1		800966	2					
ANR	801071	AdditiveExpression	100 - 1		800966	0		-			
ANR	801072	PrimaryExpression	100		800966	0					
ANR	801073	PrimaryExpression	1		800966	1					
ANR	801074	ExpressionStatement	source [ 100 - 1 ] = '\\0'	85:8:2580:2600	800966	3	True				
ANR	801075	AssignmentExpression	source [ 100 - 1 ] = '\\0'		800966	0		=			
ANR	801076	ArrayIndexing	source [ 100 - 1 ]		800966	0					
ANR	801077	Identifier	source		800966	0					
ANR	801078	AdditiveExpression	100 - 1		800966	1		-			
ANR	801079	PrimaryExpression	100		800966	0					
ANR	801080	PrimaryExpression	1		800966	1					
ANR	801081	PrimaryExpression	'\\0'		800966	1					
ANR	801082	ForStatement	for ( i = 0 ; i < 100 ; i ++ )		800966	4					
ANR	801083	ForInit	i = 0 ;	87:13:2730:2735	800966	0	True				
ANR	801084	AssignmentExpression	i = 0		800966	0		=			
ANR	801085	Identifier	i		800966	0					
ANR	801086	PrimaryExpression	0		800966	1					
ANR	801087	Condition	i < 100	87:20:2737:2743	800966	1	True				
ANR	801088	RelationalExpression	i < 100		800966	0		<			
ANR	801089	Identifier	i		800966	0					
ANR	801090	PrimaryExpression	100		800966	1					
ANR	801091	PostIncDecOperationExpression	i ++	87:29:2746:2748	800966	2	True				
ANR	801092	Identifier	i		800966	0					
ANR	801093	IncDec	++		800966	1					
ANR	801094	CompoundStatement		27:8:850:850	800966	3					
ANR	801095	ExpressionStatement	data [ i ] = source [ i ]	89:12:2775:2794	800966	0	True				
ANR	801096	AssignmentExpression	data [ i ] = source [ i ]		800966	0		=			
ANR	801097	ArrayIndexing	data [ i ]		800966	0					
ANR	801098	Identifier	data		800966	0					
ANR	801099	Identifier	i		800966	1					
ANR	801100	ArrayIndexing	source [ i ]		800966	1					
ANR	801101	Identifier	source		800966	0					
ANR	801102	Identifier	i		800966	1					
ANR	801103	ExpressionStatement	data [ 100 - 1 ] = '\\0'	92:8:2880:2898	800966	5	True				
ANR	801104	AssignmentExpression	data [ 100 - 1 ] = '\\0'		800966	0		=			
ANR	801105	ArrayIndexing	data [ 100 - 1 ]		800966	0					
ANR	801106	Identifier	data		800966	0					
ANR	801107	AdditiveExpression	100 - 1		800966	1		-			
ANR	801108	PrimaryExpression	100		800966	0					
ANR	801109	PrimaryExpression	1		800966	1					
ANR	801110	PrimaryExpression	'\\0'		800966	1					
ANR	801111	ExpressionStatement	printLine ( data )	93:8:2909:2924	800966	6	True				
ANR	801112	CallExpression	printLine ( data )		800966	0					
ANR	801113	Callee	printLine		800966	0					
ANR	801114	Identifier	printLine		800966	0					
ANR	801115	ArgumentList	data		800966	1					
ANR	801116	Argument	data		800966	0					
ANR	801117	Identifier	data		800966	0					
ANR	801118	ReturnType	static void		800966	1					
ANR	801119	Identifier	goodG2B1		800966	2					
ANR	801120	ParameterList			800966	3					
ANR	801121	CFGEntryNode	ENTRY		800966		True				
ANR	801122	CFGExitNode	EXIT		800966		True				
ANR	801123	Symbol	malloc		800966						
ANR	801124	Symbol	GLOBAL_CONST_FIVE		800966						
ANR	801125	Symbol	NULL		800966						
ANR	801126	Symbol	* i		800966						
ANR	801127	Symbol	data		800966						
ANR	801128	Symbol	* source		800966						
ANR	801129	Symbol	dataBuffer		800966						
ANR	801130	Symbol	i		800966						
ANR	801131	Symbol	source		800966						
ANR	801132	Symbol	* data		800966						
ANR	801133	Symbol	* dataBuffer		800966						
ANR	801134	Function	goodG2B2	100:0:3177:4229							
ANR	801135	FunctionDef	goodG2B2 ()		801134	0					
ANR	801136	CompoundStatement		101:0:3201:4229	801134	0					
ANR	801137	IdentifierDeclStatement	char * data ;	102:4:3208:3219	801134	0	True				
ANR	801138	IdentifierDecl	* data		801134	0					
ANR	801139	IdentifierDeclType	char *		801134	0					
ANR	801140	Identifier	data		801134	1					
ANR	801141	ExpressionStatement	data = NULL	103:4:3226:3237	801134	1	True				
ANR	801142	AssignmentExpression	data = NULL		801134	0		=			
ANR	801143	Identifier	data		801134	0					
ANR	801144	Identifier	NULL		801134	1					
ANR	801145	IfStatement	if ( GLOBAL_CONST_FIVE == 5 )		801134	2					
ANR	801146	Condition	GLOBAL_CONST_FIVE == 5	104:7:3247:3266	801134	0	True				
ANR	801147	EqualityExpression	GLOBAL_CONST_FIVE == 5		801134	0		==			
ANR	801148	Identifier	GLOBAL_CONST_FIVE		801134	0					
ANR	801149	PrimaryExpression	5		801134	1					
ANR	801150	CompoundStatement		5:4:72:72	801134	1					
ANR	801151	CompoundStatement		7:12:98:150	801134	0					
ANR	801152	IdentifierDeclStatement	char * dataBuffer = ( char * ) malloc ( 100 * sizeof ( char ) ) ;	107:12:3300:3352	801134	0	True				
ANR	801153	IdentifierDecl	* dataBuffer = ( char * ) malloc ( 100 * sizeof ( char ) )		801134	0					
ANR	801154	IdentifierDeclType	char *		801134	0					
ANR	801155	Identifier	dataBuffer		801134	1					
ANR	801156	AssignmentExpression	* dataBuffer = ( char * ) malloc ( 100 * sizeof ( char ) )		801134	2		=			
ANR	801157	Identifier	dataBuffer		801134	0					
ANR	801158	CastExpression	( char * ) malloc ( 100 * sizeof ( char ) )		801134	1					
ANR	801159	CastTarget	char *		801134	0					
ANR	801160	CallExpression	malloc ( 100 * sizeof ( char ) )		801134	1					
ANR	801161	Callee	malloc		801134	0					
ANR	801162	Identifier	malloc		801134	0					
ANR	801163	ArgumentList	100 * sizeof ( char )		801134	1					
ANR	801164	Argument	100 * sizeof ( char )		801134	0					
ANR	801165	MultiplicativeExpression	100 * sizeof ( char )		801134	0		*			
ANR	801166	PrimaryExpression	100		801134	0					
ANR	801167	SizeofExpression	sizeof ( char )		801134	1					
ANR	801168	Sizeof	sizeof		801134	0					
ANR	801169	SizeofOperand	char		801134	1					
ANR	801170	IfStatement	if ( dataBuffer == NULL )		801134	1					
ANR	801171	Condition	dataBuffer == NULL	108:16:3371:3388	801134	0	True				
ANR	801172	EqualityExpression	dataBuffer == NULL		801134	0		==			
ANR	801173	Identifier	dataBuffer		801134	0					
ANR	801174	Identifier	NULL		801134	1					
ANR	801175	CompoundStatement		8:36:189:189	801134	1					
ANR	801176	ExpressionStatement	exit ( - 1 )	108:37:3392:3400	801134	0	True				
ANR	801177	CallExpression	exit ( - 1 )		801134	0					
ANR	801178	Callee	exit		801134	0					
ANR	801179	Identifier	exit		801134	0					
ANR	801180	ArgumentList	- 1		801134	1					
ANR	801181	Argument	- 1		801134	0					
ANR	801182	UnaryOperationExpression	- 1		801134	0					
ANR	801183	UnaryOperator	-		801134	0					
ANR	801184	PrimaryExpression	1		801134	1					
ANR	801185	ExpressionStatement	"memset ( dataBuffer , 'A' , 100 - 1 )"	109:12:3415:3445	801134	2	True				
ANR	801186	CallExpression	"memset ( dataBuffer , 'A' , 100 - 1 )"		801134	0					
ANR	801187	Callee	memset		801134	0					
ANR	801188	Identifier	memset		801134	0					
ANR	801189	ArgumentList	dataBuffer		801134	1					
ANR	801190	Argument	dataBuffer		801134	0					
ANR	801191	Identifier	dataBuffer		801134	0					
ANR	801192	Argument	'A'		801134	1					
ANR	801193	PrimaryExpression	'A'		801134	0					
ANR	801194	Argument	100 - 1		801134	2					
ANR	801195	AdditiveExpression	100 - 1		801134	0		-			
ANR	801196	PrimaryExpression	100		801134	0					
ANR	801197	PrimaryExpression	1		801134	1					
ANR	801198	ExpressionStatement	dataBuffer [ 100 - 1 ] = '\\0'	110:12:3460:3484	801134	3	True				
ANR	801199	AssignmentExpression	dataBuffer [ 100 - 1 ] = '\\0'		801134	0		=			
ANR	801200	ArrayIndexing	dataBuffer [ 100 - 1 ]		801134	0					
ANR	801201	Identifier	dataBuffer		801134	0					
ANR	801202	AdditiveExpression	100 - 1		801134	1		-			
ANR	801203	PrimaryExpression	100		801134	0					
ANR	801204	PrimaryExpression	1		801134	1					
ANR	801205	PrimaryExpression	'\\0'		801134	1					
ANR	801206	ExpressionStatement	data = dataBuffer	112:12:3571:3588	801134	4	True				
ANR	801207	AssignmentExpression	data = dataBuffer		801134	0		=			
ANR	801208	Identifier	data		801134	0					
ANR	801209	Identifier	dataBuffer		801134	1					
ANR	801210	CompoundStatement		17:8:441:457	801134	3					
ANR	801211	IdentifierDeclStatement	size_t i ;	116:8:3624:3632	801134	0	True				
ANR	801212	IdentifierDecl	i		801134	0					
ANR	801213	IdentifierDeclType	size_t		801134	0					
ANR	801214	Identifier	i		801134	1					
ANR	801215	IdentifierDeclStatement	char source [ 100 ] ;	117:8:3643:3659	801134	1	True				
ANR	801216	IdentifierDecl	source [ 100 ]		801134	0					
ANR	801217	IdentifierDeclType	char [ 100 ]		801134	0					
ANR	801218	Identifier	source		801134	1					
ANR	801219	PrimaryExpression	100		801134	2					
ANR	801220	ExpressionStatement	"memset ( source , 'C' , 100 - 1 )"	118:8:3670:3696	801134	2	True				
ANR	801221	CallExpression	"memset ( source , 'C' , 100 - 1 )"		801134	0					
ANR	801222	Callee	memset		801134	0					
ANR	801223	Identifier	memset		801134	0					
ANR	801224	ArgumentList	source		801134	1					
ANR	801225	Argument	source		801134	0					
ANR	801226	Identifier	source		801134	0					
ANR	801227	Argument	'C'		801134	1					
ANR	801228	PrimaryExpression	'C'		801134	0					
ANR	801229	Argument	100 - 1		801134	2					
ANR	801230	AdditiveExpression	100 - 1		801134	0		-			
ANR	801231	PrimaryExpression	100		801134	0					
ANR	801232	PrimaryExpression	1		801134	1					
ANR	801233	ExpressionStatement	source [ 100 - 1 ] = '\\0'	119:8:3728:3748	801134	3	True				
ANR	801234	AssignmentExpression	source [ 100 - 1 ] = '\\0'		801134	0		=			
ANR	801235	ArrayIndexing	source [ 100 - 1 ]		801134	0					
ANR	801236	Identifier	source		801134	0					
ANR	801237	AdditiveExpression	100 - 1		801134	1		-			
ANR	801238	PrimaryExpression	100		801134	0					
ANR	801239	PrimaryExpression	1		801134	1					
ANR	801240	PrimaryExpression	'\\0'		801134	1					
ANR	801241	ForStatement	for ( i = 0 ; i < 100 ; i ++ )		801134	4					
ANR	801242	ForInit	i = 0 ;	121:13:3878:3883	801134	0	True				
ANR	801243	AssignmentExpression	i = 0		801134	0		=			
ANR	801244	Identifier	i		801134	0					
ANR	801245	PrimaryExpression	0		801134	1					
ANR	801246	Condition	i < 100	121:20:3885:3891	801134	1	True				
ANR	801247	RelationalExpression	i < 100		801134	0		<			
ANR	801248	Identifier	i		801134	0					
ANR	801249	PrimaryExpression	100		801134	1					
ANR	801250	PostIncDecOperationExpression	i ++	121:29:3894:3896	801134	2	True				
ANR	801251	Identifier	i		801134	0					
ANR	801252	IncDec	++		801134	1					
ANR	801253	CompoundStatement		22:8:706:706	801134	3					
ANR	801254	ExpressionStatement	data [ i ] = source [ i ]	123:12:3923:3942	801134	0	True				
ANR	801255	AssignmentExpression	data [ i ] = source [ i ]		801134	0		=			
ANR	801256	ArrayIndexing	data [ i ]		801134	0					
ANR	801257	Identifier	data		801134	0					
ANR	801258	Identifier	i		801134	1					
ANR	801259	ArrayIndexing	source [ i ]		801134	1					
ANR	801260	Identifier	source		801134	0					
ANR	801261	Identifier	i		801134	1					
ANR	801262	ExpressionStatement	data [ 100 - 1 ] = '\\0'	126:8:4028:4046	801134	5	True				
ANR	801263	AssignmentExpression	data [ 100 - 1 ] = '\\0'		801134	0		=			
ANR	801264	ArrayIndexing	data [ 100 - 1 ]		801134	0					
ANR	801265	Identifier	data		801134	0					
ANR	801266	AdditiveExpression	100 - 1		801134	1		-			
ANR	801267	PrimaryExpression	100		801134	0					
ANR	801268	PrimaryExpression	1		801134	1					
ANR	801269	PrimaryExpression	'\\0'		801134	1					
ANR	801270	ExpressionStatement	printLine ( data )	127:8:4057:4072	801134	6	True				
ANR	801271	CallExpression	printLine ( data )		801134	0					
ANR	801272	Callee	printLine		801134	0					
ANR	801273	Identifier	printLine		801134	0					
ANR	801274	ArgumentList	data		801134	1					
ANR	801275	Argument	data		801134	0					
ANR	801276	Identifier	data		801134	0					
ANR	801277	ReturnType	static void		801134	1					
ANR	801278	Identifier	goodG2B2		801134	2					
ANR	801279	ParameterList			801134	3					
ANR	801280	CFGEntryNode	ENTRY		801134		True				
ANR	801281	CFGExitNode	EXIT		801134		True				
ANR	801282	Symbol	malloc		801134						
ANR	801283	Symbol	GLOBAL_CONST_FIVE		801134						
ANR	801284	Symbol	NULL		801134						
ANR	801285	Symbol	* i		801134						
ANR	801286	Symbol	data		801134						
ANR	801287	Symbol	* source		801134						
ANR	801288	Symbol	dataBuffer		801134						
ANR	801289	Symbol	i		801134						
ANR	801290	Symbol	source		801134						
ANR	801291	Symbol	* data		801134						
ANR	801292	Symbol	* dataBuffer		801134						
ANR	801293	Function	CWE124_Buffer_Underwrite__malloc_char_loop_13_good	133:0:4234:4330							
ANR	801294	FunctionDef	CWE124_Buffer_Underwrite__malloc_char_loop_13_good ()		801293	0					
ANR	801295	CompoundStatement		134:0:4293:4330	801293	0					
ANR	801296	ExpressionStatement	goodG2B1 ( )	135:4:4300:4310	801293	0	True				
ANR	801297	CallExpression	goodG2B1 ( )		801293	0					
ANR	801298	Callee	goodG2B1		801293	0					
ANR	801299	Identifier	goodG2B1		801293	0					
ANR	801300	ArgumentList			801293	1					
ANR	801301	ExpressionStatement	goodG2B2 ( )	136:4:4317:4327	801293	1	True				
ANR	801302	CallExpression	goodG2B2 ( )		801293	0					
ANR	801303	Callee	goodG2B2		801293	0					
ANR	801304	Identifier	goodG2B2		801293	0					
ANR	801305	ArgumentList			801293	1					
ANR	801306	ReturnType	void		801293	1					
ANR	801307	Identifier	CWE124_Buffer_Underwrite__malloc_char_loop_13_good		801293	2					
ANR	801308	ParameterList			801293	3					
ANR	801309	CFGEntryNode	ENTRY		801293		True				
ANR	801310	CFGExitNode	EXIT		801293		True				
ANR	801311	Function	main	149:0:4679:5134							
ANR	801312	FunctionDef	"main (int argc , char * argv [ ])"		801311	0					
ANR	801313	CompoundStatement		150:0:4714:5134	801311	0					
ANR	801314	ExpressionStatement	srand ( ( unsigned ) time ( NULL ) )	152:4:4748:4777	801311	0	True				
ANR	801315	CallExpression	srand ( ( unsigned ) time ( NULL ) )		801311	0					
ANR	801316	Callee	srand		801311	0					
ANR	801317	Identifier	srand		801311	0					
ANR	801318	ArgumentList	( unsigned ) time ( NULL )		801311	1					
ANR	801319	Argument	( unsigned ) time ( NULL )		801311	0					
ANR	801320	CastExpression	( unsigned ) time ( NULL )		801311	0					
ANR	801321	CastTarget	unsigned		801311	0					
ANR	801322	CallExpression	time ( NULL )		801311	1					
ANR	801323	Callee	time		801311	0					
ANR	801324	Identifier	time		801311	0					
ANR	801325	ArgumentList	NULL		801311	1					
ANR	801326	Argument	NULL		801311	0					
ANR	801327	Identifier	NULL		801311	0					
ANR	801328	ExpressionStatement	"printLine ( ""Calling good()..."" )"	154:4:4802:4832	801311	1	True				
ANR	801329	CallExpression	"printLine ( ""Calling good()..."" )"		801311	0					
ANR	801330	Callee	printLine		801311	0					
ANR	801331	Identifier	printLine		801311	0					
ANR	801332	ArgumentList	"""Calling good()..."""		801311	1					
ANR	801333	Argument	"""Calling good()..."""		801311	0					
ANR	801334	PrimaryExpression	"""Calling good()..."""		801311	0					
ANR	801335	ExpressionStatement	CWE124_Buffer_Underwrite__malloc_char_loop_13_good ( )	155:4:4839:4891	801311	2	True				
ANR	801336	CallExpression	CWE124_Buffer_Underwrite__malloc_char_loop_13_good ( )		801311	0					
ANR	801337	Callee	CWE124_Buffer_Underwrite__malloc_char_loop_13_good		801311	0					
ANR	801338	Identifier	CWE124_Buffer_Underwrite__malloc_char_loop_13_good		801311	0					
ANR	801339	ArgumentList			801311	1					
ANR	801340	ExpressionStatement	"printLine ( ""Finished good()"" )"	156:4:4898:4926	801311	3	True				
ANR	801341	CallExpression	"printLine ( ""Finished good()"" )"		801311	0					
ANR	801342	Callee	printLine		801311	0					
ANR	801343	Identifier	printLine		801311	0					
ANR	801344	ArgumentList	"""Finished good()"""		801311	1					
ANR	801345	Argument	"""Finished good()"""		801311	0					
ANR	801346	PrimaryExpression	"""Finished good()"""		801311	0					
ANR	801347	ExpressionStatement	"printLine ( ""Calling bad()..."" )"	159:4:4973:5002	801311	4	True				
ANR	801348	CallExpression	"printLine ( ""Calling bad()..."" )"		801311	0					
ANR	801349	Callee	printLine		801311	0					
ANR	801350	Identifier	printLine		801311	0					
ANR	801351	ArgumentList	"""Calling bad()..."""		801311	1					
ANR	801352	Argument	"""Calling bad()..."""		801311	0					
ANR	801353	PrimaryExpression	"""Calling bad()..."""		801311	0					
ANR	801354	ExpressionStatement	CWE124_Buffer_Underwrite__malloc_char_loop_13_bad ( )	160:4:5009:5060	801311	5	True				
ANR	801355	CallExpression	CWE124_Buffer_Underwrite__malloc_char_loop_13_bad ( )		801311	0					
ANR	801356	Callee	CWE124_Buffer_Underwrite__malloc_char_loop_13_bad		801311	0					
ANR	801357	Identifier	CWE124_Buffer_Underwrite__malloc_char_loop_13_bad		801311	0					
ANR	801358	ArgumentList			801311	1					
ANR	801359	ExpressionStatement	"printLine ( ""Finished bad()"" )"	161:4:5067:5094	801311	6	True				
ANR	801360	CallExpression	"printLine ( ""Finished bad()"" )"		801311	0					
ANR	801361	Callee	printLine		801311	0					
ANR	801362	Identifier	printLine		801311	0					
ANR	801363	ArgumentList	"""Finished bad()"""		801311	1					
ANR	801364	Argument	"""Finished bad()"""		801311	0					
ANR	801365	PrimaryExpression	"""Finished bad()"""		801311	0					
ANR	801366	ReturnStatement	return 0 ;	163:4:5123:5131	801311	7	True				
ANR	801367	PrimaryExpression	0		801311	0					
ANR	801368	ReturnType	int		801311	1					
ANR	801369	Identifier	main		801311	2					
ANR	801370	ParameterList	"int argc , char * argv [ ]"		801311	3					
ANR	801371	Parameter	int argc	149:9:4688:4695	801311	0	True				
ANR	801372	ParameterType	int		801311	0					
ANR	801373	Identifier	argc		801311	1					
ANR	801374	Parameter	char * argv [ ]	149:19:4698:4710	801311	1	True				
ANR	801375	ParameterType	char * [ ]		801311	0					
ANR	801376	Identifier	argv		801311	1					
ANR	801377	CFGEntryNode	ENTRY		801311		True				
ANR	801378	CFGExitNode	EXIT		801311		True				
ANR	801379	Symbol	argc		801311						
ANR	801380	Symbol	NULL		801311						
ANR	801381	Symbol	time		801311						
ANR	801382	Symbol	argv		801311						
