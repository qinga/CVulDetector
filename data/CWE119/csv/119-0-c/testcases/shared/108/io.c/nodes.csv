command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	54986	File	/develop/joernDwkProcess/joern-dev/./output/data/CWE119/source-code/119-0-c/testcases/shared/108/io.c								
ANR	54987	Function	printLine	11:0:174:281							
ANR	54988	FunctionDef	printLine (const char * line)		54987	0					
ANR	54989	CompoundStatement		12:0:210:281	54987	0					
ANR	54990	IfStatement	if ( line != NULL )		54987	0					
ANR	54991	Condition	line != NULL	13:7:220:231	54987	0	True				
ANR	54992	EqualityExpression	line != NULL		54987	0		!=			
ANR	54993	Identifier	line		54987	0					
ANR	54994	Identifier	NULL		54987	1					
ANR	54995	CompoundStatement		3:4:29:29	54987	1					
ANR	54996	ExpressionStatement	"printf ( ""%s\\n"" , line )"	15:8:251:271	54987	0	True				
ANR	54997	CallExpression	"printf ( ""%s\\n"" , line )"		54987	0					
ANR	54998	Callee	printf		54987	0					
ANR	54999	Identifier	printf		54987	0					
ANR	55000	ArgumentList	"""%s\\n"""		54987	1					
ANR	55001	Argument	"""%s\\n"""		54987	0					
ANR	55002	PrimaryExpression	"""%s\\n"""		54987	0					
ANR	55003	Argument	line		54987	1					
ANR	55004	Identifier	line		54987	0					
ANR	55005	ReturnType	void		54987	1					
ANR	55006	Identifier	printLine		54987	2					
ANR	55007	ParameterList	const char * line		54987	3					
ANR	55008	Parameter	const char * line	11:16:190:206	54987	0	True				
ANR	55009	ParameterType	const char *		54987	0					
ANR	55010	Identifier	line		54987	1					
ANR	55011	CFGEntryNode	ENTRY		54987		True				
ANR	55012	CFGExitNode	EXIT		54987		True				
ANR	55013	Symbol	NULL		54987						
ANR	55014	Symbol	line		54987						
ANR	55015	Function	printWLine	19:0:286:400							
ANR	55016	FunctionDef	printWLine (const wchar_t * line)		55015	0					
ANR	55017	CompoundStatement		20:0:326:400	55015	0					
ANR	55018	IfStatement	if ( line != NULL )		55015	0					
ANR	55019	Condition	line != NULL	21:7:336:347	55015	0	True				
ANR	55020	EqualityExpression	line != NULL		55015	0		!=			
ANR	55021	Identifier	line		55015	0					
ANR	55022	Identifier	NULL		55015	1					
ANR	55023	CompoundStatement		3:4:29:29	55015	1					
ANR	55024	Statement	wprintf	23:8:367:373	55015	0	True				
ANR	55025	Statement	(	23:15:374:374	55015	1	True				
ANR	55026	Statement	L	23:16:375:375	55015	2	True				
ANR	55027	Statement	"""%ls\\n"""	23:17:376:382	55015	3	True				
ANR	55028	Statement	","	23:24:383:383	55015	4	True				
ANR	55029	Statement	line	23:26:385:388	55015	5	True				
ANR	55030	Statement	)	23:30:389:389	55015	6	True				
ANR	55031	ExpressionStatement		23:31:390:390	55015	7	True				
ANR	55032	ReturnType	void		55015	1					
ANR	55033	Identifier	printWLine		55015	2					
ANR	55034	ParameterList	const wchar_t * line		55015	3					
ANR	55035	Parameter	const wchar_t * line	19:17:303:322	55015	0	True				
ANR	55036	ParameterType	const wchar_t *		55015	0					
ANR	55037	Identifier	line		55015	1					
ANR	55038	CFGEntryNode	ENTRY		55015		True				
ANR	55039	CFGExitNode	EXIT		55015		True				
ANR	55040	Symbol	NULL		55015						
ANR	55041	Symbol	line		55015						
ANR	55042	Function	printIntLine	27:0:405:475							
ANR	55043	FunctionDef	printIntLine (int intNumber)		55042	0					
ANR	55044	CompoundStatement		28:0:440:475	55042	0					
ANR	55045	ExpressionStatement	"printf ( ""%d\\n"" , intNumber )"	29:4:447:472	55042	0	True				
ANR	55046	CallExpression	"printf ( ""%d\\n"" , intNumber )"		55042	0					
ANR	55047	Callee	printf		55042	0					
ANR	55048	Identifier	printf		55042	0					
ANR	55049	ArgumentList	"""%d\\n"""		55042	1					
ANR	55050	Argument	"""%d\\n"""		55042	0					
ANR	55051	PrimaryExpression	"""%d\\n"""		55042	0					
ANR	55052	Argument	intNumber		55042	1					
ANR	55053	Identifier	intNumber		55042	0					
ANR	55054	ReturnType	void		55042	1					
ANR	55055	Identifier	printIntLine		55042	2					
ANR	55056	ParameterList	int intNumber		55042	3					
ANR	55057	Parameter	int intNumber	27:19:424:436	55042	0	True				
ANR	55058	ParameterType	int		55042	0					
ANR	55059	Identifier	intNumber		55042	1					
ANR	55060	CFGEntryNode	ENTRY		55042		True				
ANR	55061	CFGExitNode	EXIT		55042		True				
ANR	55062	Symbol	intNumber		55042						
ANR	55063	Function	printShortLine	32:0:480:559							
ANR	55064	FunctionDef	printShortLine (short shortNumber)		55063	0					
ANR	55065	CompoundStatement		33:0:521:559	55063	0					
ANR	55066	ExpressionStatement	"printf ( ""%hd\\n"" , shortNumber )"	34:4:528:556	55063	0	True				
ANR	55067	CallExpression	"printf ( ""%hd\\n"" , shortNumber )"		55063	0					
ANR	55068	Callee	printf		55063	0					
ANR	55069	Identifier	printf		55063	0					
ANR	55070	ArgumentList	"""%hd\\n"""		55063	1					
ANR	55071	Argument	"""%hd\\n"""		55063	0					
ANR	55072	PrimaryExpression	"""%hd\\n"""		55063	0					
ANR	55073	Argument	shortNumber		55063	1					
ANR	55074	Identifier	shortNumber		55063	0					
ANR	55075	ReturnType	void		55063	1					
ANR	55076	Identifier	printShortLine		55063	2					
ANR	55077	ParameterList	short shortNumber		55063	3					
ANR	55078	Parameter	short shortNumber	32:21:501:517	55063	0	True				
ANR	55079	ParameterType	short		55063	0					
ANR	55080	Identifier	shortNumber		55063	1					
ANR	55081	CFGEntryNode	ENTRY		55063		True				
ANR	55082	CFGExitNode	EXIT		55063		True				
ANR	55083	Symbol	shortNumber		55063						
ANR	55084	Function	printFloatLine	37:0:564:642							
ANR	55085	FunctionDef	printFloatLine (float floatNumber)		55084	0					
ANR	55086	CompoundStatement		38:0:605:642	55084	0					
ANR	55087	ExpressionStatement	"printf ( ""%f\\n"" , floatNumber )"	39:4:612:639	55084	0	True				
ANR	55088	CallExpression	"printf ( ""%f\\n"" , floatNumber )"		55084	0					
ANR	55089	Callee	printf		55084	0					
ANR	55090	Identifier	printf		55084	0					
ANR	55091	ArgumentList	"""%f\\n"""		55084	1					
ANR	55092	Argument	"""%f\\n"""		55084	0					
ANR	55093	PrimaryExpression	"""%f\\n"""		55084	0					
ANR	55094	Argument	floatNumber		55084	1					
ANR	55095	Identifier	floatNumber		55084	0					
ANR	55096	ReturnType	void		55084	1					
ANR	55097	Identifier	printFloatLine		55084	2					
ANR	55098	ParameterList	float floatNumber		55084	3					
ANR	55099	Parameter	float floatNumber	37:21:585:601	55084	0	True				
ANR	55100	ParameterType	float		55084	0					
ANR	55101	Identifier	floatNumber		55084	1					
ANR	55102	CFGEntryNode	ENTRY		55084		True				
ANR	55103	CFGExitNode	EXIT		55084		True				
ANR	55104	Symbol	floatNumber		55084						
ANR	55105	Function	printLongLine	42:0:647:722							
ANR	55106	FunctionDef	printLongLine (long longNumber)		55105	0					
ANR	55107	CompoundStatement		43:0:685:722	55105	0					
ANR	55108	ExpressionStatement	"printf ( ""%ld\\n"" , longNumber )"	44:4:692:719	55105	0	True				
ANR	55109	CallExpression	"printf ( ""%ld\\n"" , longNumber )"		55105	0					
ANR	55110	Callee	printf		55105	0					
ANR	55111	Identifier	printf		55105	0					
ANR	55112	ArgumentList	"""%ld\\n"""		55105	1					
ANR	55113	Argument	"""%ld\\n"""		55105	0					
ANR	55114	PrimaryExpression	"""%ld\\n"""		55105	0					
ANR	55115	Argument	longNumber		55105	1					
ANR	55116	Identifier	longNumber		55105	0					
ANR	55117	ReturnType	void		55105	1					
ANR	55118	Identifier	printLongLine		55105	2					
ANR	55119	ParameterList	long longNumber		55105	3					
ANR	55120	Parameter	long longNumber	42:20:667:681	55105	0	True				
ANR	55121	ParameterType	long		55105	0					
ANR	55122	Identifier	longNumber		55105	1					
ANR	55123	CFGEntryNode	ENTRY		55105		True				
ANR	55124	CFGExitNode	EXIT		55105		True				
ANR	55125	Symbol	longNumber		55105						
ANR	55126	Function	printLongLongLine	47:0:727:831							
ANR	55127	FunctionDef	printLongLongLine (int64_t longLongIntNumber)		55126	0					
ANR	55128	CompoundStatement		48:0:779:831	55126	0					
ANR	55129	Statement	printf	49:4:786:791	55126	0	True				
ANR	55130	Statement	(	49:10:792:792	55126	1	True				
ANR	55131	Statement	"""%"""	49:11:793:795	55126	2	True				
ANR	55132	Statement	PRId64	49:15:797:802	55126	3	True				
ANR	55133	Statement	"""\\n"""	49:22:804:807	55126	4	True				
ANR	55134	Statement	","	49:26:808:808	55126	5	True				
ANR	55135	Statement	longLongIntNumber	49:28:810:826	55126	6	True				
ANR	55136	Statement	)	49:45:827:827	55126	7	True				
ANR	55137	ExpressionStatement		49:46:828:828	55126	8	True				
ANR	55138	ReturnType	void		55126	1					
ANR	55139	Identifier	printLongLongLine		55126	2					
ANR	55140	ParameterList	int64_t longLongIntNumber		55126	3					
ANR	55141	Parameter	int64_t longLongIntNumber	47:24:751:775	55126	0	True				
ANR	55142	ParameterType	int64_t		55126	0					
ANR	55143	Identifier	longLongIntNumber		55126	1					
ANR	55144	CFGEntryNode	ENTRY		55126		True				
ANR	55145	CFGExitNode	EXIT		55126		True				
ANR	55146	Symbol	longLongIntNumber		55126						
ANR	55147	Function	printSizeTLine	52:0:836:916							
ANR	55148	FunctionDef	printSizeTLine (size_t sizeTNumber)		55147	0					
ANR	55149	CompoundStatement		53:0:878:916	55147	0					
ANR	55150	ExpressionStatement	"printf ( ""%zu\\n"" , sizeTNumber )"	54:4:885:913	55147	0	True				
ANR	55151	CallExpression	"printf ( ""%zu\\n"" , sizeTNumber )"		55147	0					
ANR	55152	Callee	printf		55147	0					
ANR	55153	Identifier	printf		55147	0					
ANR	55154	ArgumentList	"""%zu\\n"""		55147	1					
ANR	55155	Argument	"""%zu\\n"""		55147	0					
ANR	55156	PrimaryExpression	"""%zu\\n"""		55147	0					
ANR	55157	Argument	sizeTNumber		55147	1					
ANR	55158	Identifier	sizeTNumber		55147	0					
ANR	55159	ReturnType	void		55147	1					
ANR	55160	Identifier	printSizeTLine		55147	2					
ANR	55161	ParameterList	size_t sizeTNumber		55147	3					
ANR	55162	Parameter	size_t sizeTNumber	52:21:857:874	55147	0	True				
ANR	55163	ParameterType	size_t		55147	0					
ANR	55164	Identifier	sizeTNumber		55147	1					
ANR	55165	CFGEntryNode	ENTRY		55147		True				
ANR	55166	CFGExitNode	EXIT		55147		True				
ANR	55167	Symbol	sizeTNumber		55147						
ANR	55168	Function	printHexCharLine	57:0:921:994							
ANR	55169	FunctionDef	printHexCharLine (char charHex)		55168	0					
ANR	55170	CompoundStatement		58:0:959:994	55168	0					
ANR	55171	ExpressionStatement	"printf ( ""%02x\\n"" , charHex )"	59:4:966:991	55168	0	True				
ANR	55172	CallExpression	"printf ( ""%02x\\n"" , charHex )"		55168	0					
ANR	55173	Callee	printf		55168	0					
ANR	55174	Identifier	printf		55168	0					
ANR	55175	ArgumentList	"""%02x\\n"""		55168	1					
ANR	55176	Argument	"""%02x\\n"""		55168	0					
ANR	55177	PrimaryExpression	"""%02x\\n"""		55168	0					
ANR	55178	Argument	charHex		55168	1					
ANR	55179	Identifier	charHex		55168	0					
ANR	55180	ReturnType	void		55168	1					
ANR	55181	Identifier	printHexCharLine		55168	2					
ANR	55182	ParameterList	char charHex		55168	3					
ANR	55183	Parameter	char charHex	57:23:944:955	55168	0	True				
ANR	55184	ParameterType	char		55168	0					
ANR	55185	Identifier	charHex		55168	1					
ANR	55186	CFGEntryNode	ENTRY		55168		True				
ANR	55187	CFGExitNode	EXIT		55168		True				
ANR	55188	Symbol	charHex		55168						
ANR	55189	Function	printWcharLine	62:0:999:1254							
ANR	55190	FunctionDef	printWcharLine (wchar_t wideChar)		55189	0					
ANR	55191	CompoundStatement		63:0:1039:1254	55189	0					
ANR	55192	IdentifierDeclStatement	wchar_t s [ 2 ] ;	66:4:1165:1177	55189	0	True				
ANR	55193	IdentifierDecl	s [ 2 ]		55189	0					
ANR	55194	IdentifierDeclType	wchar_t [ 2 ]		55189	0					
ANR	55195	Identifier	s		55189	1					
ANR	55196	PrimaryExpression	2		55189	2					
ANR	55197	ExpressionStatement	s [ 0 ] = wideChar	67:8:1188:1203	55189	1	True				
ANR	55198	AssignmentExpression	s [ 0 ] = wideChar		55189	0		=			
ANR	55199	ArrayIndexing	s [ 0 ]		55189	0					
ANR	55200	Identifier	s		55189	0					
ANR	55201	PrimaryExpression	0		55189	1					
ANR	55202	Identifier	wideChar		55189	1					
ANR	55203	Statement	s	68:8:1214:1214	55189	2	True				
ANR	55204	Statement	[	68:9:1215:1215	55189	3	True				
ANR	55205	Statement	1	68:10:1216:1216	55189	4	True				
ANR	55206	Statement	]	68:11:1217:1217	55189	5	True				
ANR	55207	Statement	=	68:13:1219:1219	55189	6	True				
ANR	55208	Statement	L	68:15:1221:1221	55189	7	True				
ANR	55209	ExpressionStatement	'\\0'	68:16:1222:1226	55189	8	True				
ANR	55210	PrimaryExpression	'\\0'		55189	0					
ANR	55211	ExpressionStatement	"printf ( ""%ls\\n"" , s )"	69:4:1233:1251	55189	9	True				
ANR	55212	CallExpression	"printf ( ""%ls\\n"" , s )"		55189	0					
ANR	55213	Callee	printf		55189	0					
ANR	55214	Identifier	printf		55189	0					
ANR	55215	ArgumentList	"""%ls\\n"""		55189	1					
ANR	55216	Argument	"""%ls\\n"""		55189	0					
ANR	55217	PrimaryExpression	"""%ls\\n"""		55189	0					
ANR	55218	Argument	s		55189	1					
ANR	55219	Identifier	s		55189	0					
ANR	55220	ReturnType	void		55189	1					
ANR	55221	Identifier	printWcharLine		55189	2					
ANR	55222	ParameterList	wchar_t wideChar		55189	3					
ANR	55223	Parameter	wchar_t wideChar	62:20:1019:1034	55189	0	True				
ANR	55224	ParameterType	wchar_t		55189	0					
ANR	55225	Identifier	wideChar		55189	1					
ANR	55226	CFGEntryNode	ENTRY		55189		True				
ANR	55227	CFGExitNode	EXIT		55189		True				
ANR	55228	Symbol	s		55189						
ANR	55229	Symbol	wideChar		55189						
ANR	55230	Symbol	* s		55189						
ANR	55231	Function	printUnsignedLine	72:0:1259:1349							
ANR	55232	FunctionDef	printUnsignedLine (unsigned unsignedNumber)		55231	0					
ANR	55233	CompoundStatement		73:0:1309:1349	55231	0					
ANR	55234	ExpressionStatement	"printf ( ""%u\\n"" , unsignedNumber )"	74:4:1316:1346	55231	0	True				
ANR	55235	CallExpression	"printf ( ""%u\\n"" , unsignedNumber )"		55231	0					
ANR	55236	Callee	printf		55231	0					
ANR	55237	Identifier	printf		55231	0					
ANR	55238	ArgumentList	"""%u\\n"""		55231	1					
ANR	55239	Argument	"""%u\\n"""		55231	0					
ANR	55240	PrimaryExpression	"""%u\\n"""		55231	0					
ANR	55241	Argument	unsignedNumber		55231	1					
ANR	55242	Identifier	unsignedNumber		55231	0					
ANR	55243	ReturnType	void		55231	1					
ANR	55244	Identifier	printUnsignedLine		55231	2					
ANR	55245	ParameterList	unsigned unsignedNumber		55231	3					
ANR	55246	Parameter	unsigned unsignedNumber	72:23:1282:1304	55231	0	True				
ANR	55247	ParameterType	unsigned		55231	0					
ANR	55248	Identifier	unsignedNumber		55231	1					
ANR	55249	CFGEntryNode	ENTRY		55231		True				
ANR	55250	CFGExitNode	EXIT		55231		True				
ANR	55251	Symbol	unsignedNumber		55231						
ANR	55252	Function	printHexUnsignedCharLine	77:0:1354:1464							
ANR	55253	FunctionDef	printHexUnsignedCharLine (unsigned char unsignedCharacter)		55252	0					
ANR	55254	CompoundStatement		78:0:1419:1464	55252	0					
ANR	55255	ExpressionStatement	"printf ( ""%02x\\n"" , unsignedCharacter )"	79:4:1426:1461	55252	0	True				
ANR	55256	CallExpression	"printf ( ""%02x\\n"" , unsignedCharacter )"		55252	0					
ANR	55257	Callee	printf		55252	0					
ANR	55258	Identifier	printf		55252	0					
ANR	55259	ArgumentList	"""%02x\\n"""		55252	1					
ANR	55260	Argument	"""%02x\\n"""		55252	0					
ANR	55261	PrimaryExpression	"""%02x\\n"""		55252	0					
ANR	55262	Argument	unsignedCharacter		55252	1					
ANR	55263	Identifier	unsignedCharacter		55252	0					
ANR	55264	ReturnType	void		55252	1					
ANR	55265	Identifier	printHexUnsignedCharLine		55252	2					
ANR	55266	ParameterList	unsigned char unsignedCharacter		55252	3					
ANR	55267	Parameter	unsigned char unsignedCharacter	77:30:1384:1414	55252	0	True				
ANR	55268	ParameterType	unsigned char		55252	0					
ANR	55269	Identifier	unsignedCharacter		55252	1					
ANR	55270	CFGEntryNode	ENTRY		55252		True				
ANR	55271	CFGExitNode	EXIT		55252		True				
ANR	55272	Symbol	unsignedCharacter		55252						
ANR	55273	Function	printDoubleLine	82:0:1469:1551							
ANR	55274	FunctionDef	printDoubleLine (double doubleNumber)		55273	0					
ANR	55275	CompoundStatement		83:0:1513:1551	55273	0					
ANR	55276	ExpressionStatement	"printf ( ""%g\\n"" , doubleNumber )"	84:4:1520:1548	55273	0	True				
ANR	55277	CallExpression	"printf ( ""%g\\n"" , doubleNumber )"		55273	0					
ANR	55278	Callee	printf		55273	0					
ANR	55279	Identifier	printf		55273	0					
ANR	55280	ArgumentList	"""%g\\n"""		55273	1					
ANR	55281	Argument	"""%g\\n"""		55273	0					
ANR	55282	PrimaryExpression	"""%g\\n"""		55273	0					
ANR	55283	Argument	doubleNumber		55273	1					
ANR	55284	Identifier	doubleNumber		55273	0					
ANR	55285	ReturnType	void		55273	1					
ANR	55286	Identifier	printDoubleLine		55273	2					
ANR	55287	ParameterList	double doubleNumber		55273	3					
ANR	55288	Parameter	double doubleNumber	82:21:1490:1508	55273	0	True				
ANR	55289	ParameterType	double		55273	0					
ANR	55290	Identifier	doubleNumber		55273	1					
ANR	55291	CFGEntryNode	ENTRY		55273		True				
ANR	55292	CFGExitNode	EXIT		55273		True				
ANR	55293	Symbol	doubleNumber		55273						
ANR	55294	Function	printStructLine	87:0:1556:1710							
ANR	55295	FunctionDef	printStructLine (const twoIntsStruct * structTwoIntsStruct)		55294	0					
ANR	55296	CompoundStatement		88:0:1622:1710	55294	0					
ANR	55297	ExpressionStatement	"printf ( ""%d -- %d\\n"" , structTwoIntsStruct -> intOne , structTwoIntsStruct -> intTwo )"	89:4:1629:1707	55294	0	True				
ANR	55298	CallExpression	"printf ( ""%d -- %d\\n"" , structTwoIntsStruct -> intOne , structTwoIntsStruct -> intTwo )"		55294	0					
ANR	55299	Callee	printf		55294	0					
ANR	55300	Identifier	printf		55294	0					
ANR	55301	ArgumentList	"""%d -- %d\\n"""		55294	1					
ANR	55302	Argument	"""%d -- %d\\n"""		55294	0					
ANR	55303	PrimaryExpression	"""%d -- %d\\n"""		55294	0					
ANR	55304	Argument	structTwoIntsStruct -> intOne		55294	1					
ANR	55305	PtrMemberAccess	structTwoIntsStruct -> intOne		55294	0					
ANR	55306	Identifier	structTwoIntsStruct		55294	0					
ANR	55307	Identifier	intOne		55294	1					
ANR	55308	Argument	structTwoIntsStruct -> intTwo		55294	2					
ANR	55309	PtrMemberAccess	structTwoIntsStruct -> intTwo		55294	0					
ANR	55310	Identifier	structTwoIntsStruct		55294	0					
ANR	55311	Identifier	intTwo		55294	1					
ANR	55312	ReturnType	void		55294	1					
ANR	55313	Identifier	printStructLine		55294	2					
ANR	55314	ParameterList	const twoIntsStruct * structTwoIntsStruct		55294	3					
ANR	55315	Parameter	const twoIntsStruct * structTwoIntsStruct	87:22:1578:1618	55294	0	True				
ANR	55316	ParameterType	const twoIntsStruct *		55294	0					
ANR	55317	Identifier	structTwoIntsStruct		55294	1					
ANR	55318	CFGEntryNode	ENTRY		55294		True				
ANR	55319	CFGExitNode	EXIT		55294		True				
ANR	55320	Symbol	structTwoIntsStruct		55294						
ANR	55321	Symbol	structTwoIntsStruct -> intTwo		55294						
ANR	55322	Symbol	* structTwoIntsStruct		55294						
ANR	55323	Symbol	structTwoIntsStruct -> intOne		55294						
ANR	55324	Function	printBytesLine	92:0:1715:1921							
ANR	55325	FunctionDef	"printBytesLine (const unsigned char * bytes , size_t numBytes)"		55324	0					
ANR	55326	CompoundStatement		93:0:1782:1921	55324	0					
ANR	55327	IdentifierDeclStatement	size_t i ;	94:4:1789:1797	55324	0	True				
ANR	55328	IdentifierDecl	i		55324	0					
ANR	55329	IdentifierDeclType	size_t		55324	0					
ANR	55330	Identifier	i		55324	1					
ANR	55331	ForStatement	for ( i = 0 ; i < numBytes ; ++ i )		55324	1					
ANR	55332	ForInit	i = 0 ;	95:9:1809:1814	55324	0	True				
ANR	55333	AssignmentExpression	i = 0		55324	0		=			
ANR	55334	Identifier	i		55324	0					
ANR	55335	PrimaryExpression	0		55324	1					
ANR	55336	Condition	i < numBytes	95:16:1816:1827	55324	1	True				
ANR	55337	RelationalExpression	i < numBytes		55324	0		<			
ANR	55338	Identifier	i		55324	0					
ANR	55339	Identifier	numBytes		55324	1					
ANR	55340	UnaryExpression	++ i	95:30:1830:1832	55324	2	True				
ANR	55341	IncDec	++		55324	0					
ANR	55342	Identifier	i		55324	1					
ANR	55343	CompoundStatement		4:4:57:57	55324	3					
ANR	55344	ExpressionStatement	"printf ( ""%02x"" , bytes [ i ] )"	97:8:1851:1875	55324	0	True				
ANR	55345	CallExpression	"printf ( ""%02x"" , bytes [ i ] )"		55324	0					
ANR	55346	Callee	printf		55324	0					
ANR	55347	Identifier	printf		55324	0					
ANR	55348	ArgumentList	"""%02x"""		55324	1					
ANR	55349	Argument	"""%02x"""		55324	0					
ANR	55350	PrimaryExpression	"""%02x"""		55324	0					
ANR	55351	Argument	bytes [ i ]		55324	1					
ANR	55352	ArrayIndexing	bytes [ i ]		55324	0					
ANR	55353	Identifier	bytes		55324	0					
ANR	55354	Identifier	i		55324	1					
ANR	55355	ExpressionStatement	"puts ( """" )"	99:4:1889:1897	55324	2	True				
ANR	55356	CallExpression	"puts ( """" )"		55324	0					
ANR	55357	Callee	puts		55324	0					
ANR	55358	Identifier	puts		55324	0					
ANR	55359	ArgumentList	""""""		55324	1					
ANR	55360	Argument	""""""		55324	0					
ANR	55361	PrimaryExpression	""""""		55324	0					
ANR	55362	ReturnType	void		55324	1					
ANR	55363	Identifier	printBytesLine		55324	2					
ANR	55364	ParameterList	"const unsigned char * bytes , size_t numBytes"		55324	3					
ANR	55365	Parameter	const unsigned char * bytes	92:20:1735:1761	55324	0	True				
ANR	55366	ParameterType	const unsigned char *		55324	0					
ANR	55367	Identifier	bytes		55324	1					
ANR	55368	Parameter	size_t numBytes	92:49:1764:1778	55324	1	True				
ANR	55369	ParameterType	size_t		55324	0					
ANR	55370	Identifier	numBytes		55324	1					
ANR	55371	CFGEntryNode	ENTRY		55324		True				
ANR	55372	CFGExitNode	EXIT		55324		True				
ANR	55373	Symbol	numBytes		55324						
ANR	55374	Symbol	* i		55324						
ANR	55375	Symbol	bytes		55324						
ANR	55376	Symbol	i		55324						
ANR	55377	Symbol	* bytes		55324						
ANR	55378	Function	decodeHexChars	105:0:2143:2882							
ANR	55379	FunctionDef	"decodeHexChars (unsigned char * bytes , size_t numBytes , const char * hex)"		55378	0					
ANR	55380	CompoundStatement		106:0:2224:2882	55378	0					
ANR	55381	IdentifierDeclStatement	size_t numWritten = 0 ;	107:4:2231:2252	55378	0	True				
ANR	55382	IdentifierDecl	numWritten = 0		55378	0					
ANR	55383	IdentifierDeclType	size_t		55378	0					
ANR	55384	Identifier	numWritten		55378	1					
ANR	55385	AssignmentExpression	numWritten = 0		55378	2		=			
ANR	55386	Identifier	numWritten		55378	0					
ANR	55387	PrimaryExpression	0		55378	1					
ANR	55388	WhileStatement	while ( numWritten < numBytes && isxdigit ( hex [ 2 * numWritten ] ) && isxdigit ( hex [ 2 * numWritten + 1 ] ) )		55378	1					
ANR	55389	Condition	numWritten < numBytes && isxdigit ( hex [ 2 * numWritten ] ) && isxdigit ( hex [ 2 * numWritten + 1 ] )	113:11:2601:2691	55378	0	True				
ANR	55390	AndExpression	numWritten < numBytes && isxdigit ( hex [ 2 * numWritten ] ) && isxdigit ( hex [ 2 * numWritten + 1 ] )		55378	0		&&			
ANR	55391	RelationalExpression	numWritten < numBytes		55378	0		<			
ANR	55392	Identifier	numWritten		55378	0					
ANR	55393	Identifier	numBytes		55378	1					
ANR	55394	AndExpression	isxdigit ( hex [ 2 * numWritten ] ) && isxdigit ( hex [ 2 * numWritten + 1 ] )		55378	1		&&			
ANR	55395	CallExpression	isxdigit ( hex [ 2 * numWritten ] )		55378	0					
ANR	55396	Callee	isxdigit		55378	0					
ANR	55397	Identifier	isxdigit		55378	0					
ANR	55398	ArgumentList	hex [ 2 * numWritten ]		55378	1					
ANR	55399	Argument	hex [ 2 * numWritten ]		55378	0					
ANR	55400	ArrayIndexing	hex [ 2 * numWritten ]		55378	0					
ANR	55401	Identifier	hex		55378	0					
ANR	55402	MultiplicativeExpression	2 * numWritten		55378	1		*			
ANR	55403	PrimaryExpression	2		55378	0					
ANR	55404	Identifier	numWritten		55378	1					
ANR	55405	CallExpression	isxdigit ( hex [ 2 * numWritten + 1 ] )		55378	1					
ANR	55406	Callee	isxdigit		55378	0					
ANR	55407	Identifier	isxdigit		55378	0					
ANR	55408	ArgumentList	hex [ 2 * numWritten + 1 ]		55378	1					
ANR	55409	Argument	hex [ 2 * numWritten + 1 ]		55378	0					
ANR	55410	ArrayIndexing	hex [ 2 * numWritten + 1 ]		55378	0					
ANR	55411	Identifier	hex		55378	0					
ANR	55412	AdditiveExpression	2 * numWritten + 1		55378	1		+			
ANR	55413	MultiplicativeExpression	2 * numWritten		55378	0		*			
ANR	55414	PrimaryExpression	2		55378	0					
ANR	55415	Identifier	numWritten		55378	1					
ANR	55416	PrimaryExpression	1		55378	1					
ANR	55417	CompoundStatement		10:8:485:493	55378	1					
ANR	55418	IdentifierDeclStatement	int byte ;	115:8:2710:2718	55378	0	True				
ANR	55419	IdentifierDecl	byte		55378	0					
ANR	55420	IdentifierDeclType	int		55378	0					
ANR	55421	Identifier	byte		55378	1					
ANR	55422	ExpressionStatement	"sscanf ( & hex [ 2 * numWritten ] , ""%02x"" , & byte )"	116:8:2729:2772	55378	1	True				
ANR	55423	CallExpression	"sscanf ( & hex [ 2 * numWritten ] , ""%02x"" , & byte )"		55378	0					
ANR	55424	Callee	sscanf		55378	0					
ANR	55425	Identifier	sscanf		55378	0					
ANR	55426	ArgumentList	& hex [ 2 * numWritten ]		55378	1					
ANR	55427	Argument	& hex [ 2 * numWritten ]		55378	0					
ANR	55428	UnaryOperationExpression	& hex [ 2 * numWritten ]		55378	0					
ANR	55429	UnaryOperator	&		55378	0					
ANR	55430	ArrayIndexing	hex [ 2 * numWritten ]		55378	1					
ANR	55431	Identifier	hex		55378	0					
ANR	55432	MultiplicativeExpression	2 * numWritten		55378	1		*			
ANR	55433	PrimaryExpression	2		55378	0					
ANR	55434	Identifier	numWritten		55378	1					
ANR	55435	Argument	"""%02x"""		55378	1					
ANR	55436	PrimaryExpression	"""%02x"""		55378	0					
ANR	55437	Argument	& byte		55378	2					
ANR	55438	UnaryOperationExpression	& byte		55378	0					
ANR	55439	UnaryOperator	&		55378	0					
ANR	55440	Identifier	byte		55378	1					
ANR	55441	ExpressionStatement	bytes [ numWritten ] = ( unsigned char ) byte	117:8:2783:2823	55378	2	True				
ANR	55442	AssignmentExpression	bytes [ numWritten ] = ( unsigned char ) byte		55378	0		=			
ANR	55443	ArrayIndexing	bytes [ numWritten ]		55378	0					
ANR	55444	Identifier	bytes		55378	0					
ANR	55445	Identifier	numWritten		55378	1					
ANR	55446	CastExpression	( unsigned char ) byte		55378	1					
ANR	55447	CastTarget	unsigned char		55378	0					
ANR	55448	Identifier	byte		55378	1					
ANR	55449	ExpressionStatement	++ numWritten	118:8:2834:2846	55378	3	True				
ANR	55450	UnaryExpression	++ numWritten		55378	0					
ANR	55451	IncDec	++		55378	0					
ANR	55452	Identifier	numWritten		55378	1					
ANR	55453	ReturnStatement	return numWritten ;	121:4:2862:2879	55378	2	True				
ANR	55454	Identifier	numWritten		55378	0					
ANR	55455	ReturnType	size_t		55378	1					
ANR	55456	Identifier	decodeHexChars		55378	2					
ANR	55457	ParameterList	"unsigned char * bytes , size_t numBytes , const char * hex"		55378	3					
ANR	55458	Parameter	unsigned char * bytes	105:22:2165:2185	55378	0	True				
ANR	55459	ParameterType	unsigned char *		55378	0					
ANR	55460	Identifier	bytes		55378	1					
ANR	55461	Parameter	size_t numBytes	105:45:2188:2202	55378	1	True				
ANR	55462	ParameterType	size_t		55378	0					
ANR	55463	Identifier	numBytes		55378	1					
ANR	55464	Parameter	const char * hex	105:62:2205:2220	55378	2	True				
ANR	55465	ParameterType	const char *		55378	0					
ANR	55466	Identifier	hex		55378	1					
ANR	55467	CFGEntryNode	ENTRY		55378		True				
ANR	55468	CFGExitNode	EXIT		55378		True				
ANR	55469	Symbol	numBytes		55378						
ANR	55470	Symbol	* numWritten		55378						
ANR	55471	Symbol	bytes		55378						
ANR	55472	Symbol	byte		55378						
ANR	55473	Symbol	hex		55378						
ANR	55474	Symbol	* hex		55378						
ANR	55475	Symbol	numWritten		55378						
ANR	55476	Symbol	& byte		55378						
ANR	55477	Symbol	* bytes		55378						
ANR	55478	Symbol	isxdigit		55378						
ANR	55479	Function	decodeHexWChars	127:1:3105:3855							
ANR	55480	FunctionDef	"decodeHexWChars (unsigned char * bytes , size_t numBytes , const wchar_t * hex)"		55479	0					
ANR	55481	CompoundStatement		128:1:3191:3855	55479	0					
ANR	55482	IdentifierDeclStatement	size_t numWritten = 0 ;	129:4:3198:3219	55479	0	True				
ANR	55483	IdentifierDecl	numWritten = 0		55479	0					
ANR	55484	IdentifierDeclType	size_t		55479	0					
ANR	55485	Identifier	numWritten		55479	1					
ANR	55486	AssignmentExpression	numWritten = 0		55479	2		=			
ANR	55487	Identifier	numWritten		55479	0					
ANR	55488	PrimaryExpression	0		55479	1					
ANR	55489	WhileStatement	while ( numWritten < numBytes && iswxdigit ( hex [ 2 * numWritten ] ) && iswxdigit ( hex [ 2 * numWritten + 1 ] ) )		55479	1					
ANR	55490	Condition	numWritten < numBytes && iswxdigit ( hex [ 2 * numWritten ] ) && iswxdigit ( hex [ 2 * numWritten + 1 ] )	135:11:3570:3662	55479	0	True				
ANR	55491	AndExpression	numWritten < numBytes && iswxdigit ( hex [ 2 * numWritten ] ) && iswxdigit ( hex [ 2 * numWritten + 1 ] )		55479	0		&&			
ANR	55492	RelationalExpression	numWritten < numBytes		55479	0		<			
ANR	55493	Identifier	numWritten		55479	0					
ANR	55494	Identifier	numBytes		55479	1					
ANR	55495	AndExpression	iswxdigit ( hex [ 2 * numWritten ] ) && iswxdigit ( hex [ 2 * numWritten + 1 ] )		55479	1		&&			
ANR	55496	CallExpression	iswxdigit ( hex [ 2 * numWritten ] )		55479	0					
ANR	55497	Callee	iswxdigit		55479	0					
ANR	55498	Identifier	iswxdigit		55479	0					
ANR	55499	ArgumentList	hex [ 2 * numWritten ]		55479	1					
ANR	55500	Argument	hex [ 2 * numWritten ]		55479	0					
ANR	55501	ArrayIndexing	hex [ 2 * numWritten ]		55479	0					
ANR	55502	Identifier	hex		55479	0					
ANR	55503	MultiplicativeExpression	2 * numWritten		55479	1		*			
ANR	55504	PrimaryExpression	2		55479	0					
ANR	55505	Identifier	numWritten		55479	1					
ANR	55506	CallExpression	iswxdigit ( hex [ 2 * numWritten + 1 ] )		55479	1					
ANR	55507	Callee	iswxdigit		55479	0					
ANR	55508	Identifier	iswxdigit		55479	0					
ANR	55509	ArgumentList	hex [ 2 * numWritten + 1 ]		55479	1					
ANR	55510	Argument	hex [ 2 * numWritten + 1 ]		55479	0					
ANR	55511	ArrayIndexing	hex [ 2 * numWritten + 1 ]		55479	0					
ANR	55512	Identifier	hex		55479	0					
ANR	55513	AdditiveExpression	2 * numWritten + 1		55479	1		+			
ANR	55514	MultiplicativeExpression	2 * numWritten		55479	0		*			
ANR	55515	PrimaryExpression	2		55479	0					
ANR	55516	Identifier	numWritten		55479	1					
ANR	55517	PrimaryExpression	1		55479	1					
ANR	55518	CompoundStatement		10:8:489:497	55479	1					
ANR	55519	IdentifierDeclStatement	int byte ;	137:8:3681:3689	55479	0	True				
ANR	55520	IdentifierDecl	byte		55479	0					
ANR	55521	IdentifierDeclType	int		55479	0					
ANR	55522	Identifier	byte		55479	1					
ANR	55523	Statement	swscanf	138:8:3700:3706	55479	1	True				
ANR	55524	Statement	(	138:15:3707:3707	55479	2	True				
ANR	55525	Statement	&	138:16:3708:3708	55479	3	True				
ANR	55526	Statement	hex	138:17:3709:3711	55479	4	True				
ANR	55527	Statement	[	138:20:3712:3712	55479	5	True				
ANR	55528	Statement	2	138:21:3713:3713	55479	6	True				
ANR	55529	Statement	*	138:23:3715:3715	55479	7	True				
ANR	55530	Statement	numWritten	138:25:3717:3726	55479	8	True				
ANR	55531	Statement	]	138:35:3727:3727	55479	9	True				
ANR	55532	Statement	","	138:36:3728:3728	55479	10	True				
ANR	55533	Statement	L	138:38:3730:3730	55479	11	True				
ANR	55534	Statement	"""%02x"""	138:39:3731:3736	55479	12	True				
ANR	55535	Statement	","	138:45:3737:3737	55479	13	True				
ANR	55536	Statement	&	138:47:3739:3739	55479	14	True				
ANR	55537	Statement	byte	138:48:3740:3743	55479	15	True				
ANR	55538	Statement	)	138:52:3744:3744	55479	16	True				
ANR	55539	ExpressionStatement		138:53:3745:3745	55479	17	True				
ANR	55540	ExpressionStatement	bytes [ numWritten ] = ( unsigned char ) byte	139:8:3756:3796	55479	18	True				
ANR	55541	AssignmentExpression	bytes [ numWritten ] = ( unsigned char ) byte		55479	0		=			
ANR	55542	ArrayIndexing	bytes [ numWritten ]		55479	0					
ANR	55543	Identifier	bytes		55479	0					
ANR	55544	Identifier	numWritten		55479	1					
ANR	55545	CastExpression	( unsigned char ) byte		55479	1					
ANR	55546	CastTarget	unsigned char		55479	0					
ANR	55547	Identifier	byte		55479	1					
ANR	55548	ExpressionStatement	++ numWritten	140:8:3807:3819	55479	19	True				
ANR	55549	UnaryExpression	++ numWritten		55479	0					
ANR	55550	IncDec	++		55479	0					
ANR	55551	Identifier	numWritten		55479	1					
ANR	55552	ReturnStatement	return numWritten ;	143:4:3835:3852	55479	2	True				
ANR	55553	Identifier	numWritten		55479	0					
ANR	55554	ReturnType	size_t		55479	1					
ANR	55555	Identifier	decodeHexWChars		55479	2					
ANR	55556	ParameterList	"unsigned char * bytes , size_t numBytes , const wchar_t * hex"		55479	3					
ANR	55557	Parameter	unsigned char * bytes	127:24:3128:3148	55479	0	True				
ANR	55558	ParameterType	unsigned char *		55479	0					
ANR	55559	Identifier	bytes		55479	1					
ANR	55560	Parameter	size_t numBytes	127:47:3151:3165	55479	1	True				
ANR	55561	ParameterType	size_t		55479	0					
ANR	55562	Identifier	numBytes		55479	1					
ANR	55563	Parameter	const wchar_t * hex	127:64:3168:3186	55479	2	True				
ANR	55564	ParameterType	const wchar_t *		55479	0					
ANR	55565	Identifier	hex		55479	1					
ANR	55566	CFGEntryNode	ENTRY		55479		True				
ANR	55567	CFGExitNode	EXIT		55479		True				
ANR	55568	Symbol	numBytes		55479						
ANR	55569	Symbol	* numWritten		55479						
ANR	55570	Symbol	iswxdigit		55479						
ANR	55571	Symbol	bytes		55479						
ANR	55572	Symbol	byte		55479						
ANR	55573	Symbol	hex		55479						
ANR	55574	Symbol	* hex		55479						
ANR	55575	Symbol	numWritten		55479						
ANR	55576	Symbol	* bytes		55479						
ANR	55577	Function	globalReturnsTrue	148:0:4010:4054							
ANR	55578	FunctionDef	globalReturnsTrue ()		55577	0					
ANR	55579	CompoundStatement		149:0:4036:4054	55577	0					
ANR	55580	ReturnStatement	return 1 ;	150:4:4043:4051	55577	0	True				
ANR	55581	PrimaryExpression	1		55577	0					
ANR	55582	ReturnType	int		55577	1					
ANR	55583	Identifier	globalReturnsTrue		55577	2					
ANR	55584	ParameterList			55577	3					
ANR	55585	CFGEntryNode	ENTRY		55577		True				
ANR	55586	CFGExitNode	EXIT		55577		True				
ANR	55587	Function	globalReturnsFalse	153:0:4059:4104							
ANR	55588	FunctionDef	globalReturnsFalse ()		55587	0					
ANR	55589	CompoundStatement		154:0:4086:4104	55587	0					
ANR	55590	ReturnStatement	return 0 ;	155:4:4093:4101	55587	0	True				
ANR	55591	PrimaryExpression	0		55587	0					
ANR	55592	ReturnType	int		55587	1					
ANR	55593	Identifier	globalReturnsFalse		55587	2					
ANR	55594	ParameterList			55587	3					
ANR	55595	CFGEntryNode	ENTRY		55587		True				
ANR	55596	CFGExitNode	EXIT		55587		True				
ANR	55597	Function	globalReturnsTrueOrFalse	158:0:4109:4171							
ANR	55598	FunctionDef	globalReturnsTrueOrFalse ()		55597	0					
ANR	55599	CompoundStatement		159:0:4142:4171	55597	0					
ANR	55600	ReturnStatement	return ( rand ( ) % 2 ) ;	160:4:4149:4168	55597	0	True				
ANR	55601	MultiplicativeExpression	rand ( ) % 2		55597	0		%			
ANR	55602	CallExpression	rand ( )		55597	0					
ANR	55603	Callee	rand		55597	0					
ANR	55604	Identifier	rand		55597	0					
ANR	55605	ArgumentList			55597	1					
ANR	55606	PrimaryExpression	2		55597	1					
ANR	55607	ReturnType	int		55597	1					
ANR	55608	Identifier	globalReturnsTrueOrFalse		55597	2					
ANR	55609	ParameterList			55597	3					
ANR	55610	CFGEntryNode	ENTRY		55597		True				
ANR	55611	CFGExitNode	EXIT		55597		True				
ANR	55612	Symbol	rand		55597						
ANR	55613	DeclStmt									
ANR	55614	Decl							const int	const int	GLOBAL_CONST_TRUE
ANR	55615	DeclStmt									
ANR	55616	Decl							const int	const int	GLOBAL_CONST_FALSE
ANR	55617	DeclStmt									
ANR	55618	Decl							const int	const int	GLOBAL_CONST_FIVE
ANR	55619	DeclStmt									
ANR	55620	Decl							int	int	globalTrue
ANR	55621	DeclStmt									
ANR	55622	Decl							int	int	globalFalse
ANR	55623	DeclStmt									
ANR	55624	Decl							int	int	globalFive
ANR	55625	Function	good1	179:0:4905:4920							
ANR	55626	FunctionDef	good1 ()		55625	0					
ANR	55627	CompoundStatement		179:13:4918:4920	55625	0					
ANR	55628	ReturnType	void		55625	1					
ANR	55629	Identifier	good1		55625	2					
ANR	55630	ParameterList			55625	3					
ANR	55631	CFGEntryNode	ENTRY		55625		True				
ANR	55632	CFGExitNode	EXIT		55625		True				
ANR	55633	Function	good2	180:0:4923:4938							
ANR	55634	FunctionDef	good2 ()		55633	0					
ANR	55635	CompoundStatement		180:13:4936:4938	55633	0					
ANR	55636	ReturnType	void		55633	1					
ANR	55637	Identifier	good2		55633	2					
ANR	55638	ParameterList			55633	3					
ANR	55639	CFGEntryNode	ENTRY		55633		True				
ANR	55640	CFGExitNode	EXIT		55633		True				
ANR	55641	Function	good3	181:0:4941:4956							
ANR	55642	FunctionDef	good3 ()		55641	0					
ANR	55643	CompoundStatement		181:13:4954:4956	55641	0					
ANR	55644	ReturnType	void		55641	1					
ANR	55645	Identifier	good3		55641	2					
ANR	55646	ParameterList			55641	3					
ANR	55647	CFGEntryNode	ENTRY		55641		True				
ANR	55648	CFGExitNode	EXIT		55641		True				
ANR	55649	Function	good4	182:0:4959:4974							
ANR	55650	FunctionDef	good4 ()		55649	0					
ANR	55651	CompoundStatement		182:13:4972:4974	55649	0					
ANR	55652	ReturnType	void		55649	1					
ANR	55653	Identifier	good4		55649	2					
ANR	55654	ParameterList			55649	3					
ANR	55655	CFGEntryNode	ENTRY		55649		True				
ANR	55656	CFGExitNode	EXIT		55649		True				
ANR	55657	Function	good5	183:0:4977:4992							
ANR	55658	FunctionDef	good5 ()		55657	0					
ANR	55659	CompoundStatement		183:13:4990:4992	55657	0					
ANR	55660	ReturnType	void		55657	1					
ANR	55661	Identifier	good5		55657	2					
ANR	55662	ParameterList			55657	3					
ANR	55663	CFGEntryNode	ENTRY		55657		True				
ANR	55664	CFGExitNode	EXIT		55657		True				
ANR	55665	Function	good6	184:0:4995:5010							
ANR	55666	FunctionDef	good6 ()		55665	0					
ANR	55667	CompoundStatement		184:13:5008:5010	55665	0					
ANR	55668	ReturnType	void		55665	1					
ANR	55669	Identifier	good6		55665	2					
ANR	55670	ParameterList			55665	3					
ANR	55671	CFGEntryNode	ENTRY		55665		True				
ANR	55672	CFGExitNode	EXIT		55665		True				
ANR	55673	Function	good7	185:0:5013:5028							
ANR	55674	FunctionDef	good7 ()		55673	0					
ANR	55675	CompoundStatement		185:13:5026:5028	55673	0					
ANR	55676	ReturnType	void		55673	1					
ANR	55677	Identifier	good7		55673	2					
ANR	55678	ParameterList			55673	3					
ANR	55679	CFGEntryNode	ENTRY		55673		True				
ANR	55680	CFGExitNode	EXIT		55673		True				
ANR	55681	Function	good8	186:0:5031:5046							
ANR	55682	FunctionDef	good8 ()		55681	0					
ANR	55683	CompoundStatement		186:13:5044:5046	55681	0					
ANR	55684	ReturnType	void		55681	1					
ANR	55685	Identifier	good8		55681	2					
ANR	55686	ParameterList			55681	3					
ANR	55687	CFGEntryNode	ENTRY		55681		True				
ANR	55688	CFGExitNode	EXIT		55681		True				
ANR	55689	Function	good9	187:0:5049:5064							
ANR	55690	FunctionDef	good9 ()		55689	0					
ANR	55691	CompoundStatement		187:13:5062:5064	55689	0					
ANR	55692	ReturnType	void		55689	1					
ANR	55693	Identifier	good9		55689	2					
ANR	55694	ParameterList			55689	3					
ANR	55695	CFGEntryNode	ENTRY		55689		True				
ANR	55696	CFGExitNode	EXIT		55689		True				
ANR	55697	Function	bad1	190:0:5112:5126							
ANR	55698	FunctionDef	bad1 ()		55697	0					
ANR	55699	CompoundStatement		190:12:5124:5126	55697	0					
ANR	55700	ReturnType	void		55697	1					
ANR	55701	Identifier	bad1		55697	2					
ANR	55702	ParameterList			55697	3					
ANR	55703	CFGEntryNode	ENTRY		55697		True				
ANR	55704	CFGExitNode	EXIT		55697		True				
ANR	55705	Function	bad2	191:0:5129:5143							
ANR	55706	FunctionDef	bad2 ()		55705	0					
ANR	55707	CompoundStatement		191:12:5141:5143	55705	0					
ANR	55708	ReturnType	void		55705	1					
ANR	55709	Identifier	bad2		55705	2					
ANR	55710	ParameterList			55705	3					
ANR	55711	CFGEntryNode	ENTRY		55705		True				
ANR	55712	CFGExitNode	EXIT		55705		True				
ANR	55713	Function	bad3	192:0:5146:5160							
ANR	55714	FunctionDef	bad3 ()		55713	0					
ANR	55715	CompoundStatement		192:12:5158:5160	55713	0					
ANR	55716	ReturnType	void		55713	1					
ANR	55717	Identifier	bad3		55713	2					
ANR	55718	ParameterList			55713	3					
ANR	55719	CFGEntryNode	ENTRY		55713		True				
ANR	55720	CFGExitNode	EXIT		55713		True				
ANR	55721	Function	bad4	193:0:5163:5177							
ANR	55722	FunctionDef	bad4 ()		55721	0					
ANR	55723	CompoundStatement		193:12:5175:5177	55721	0					
ANR	55724	ReturnType	void		55721	1					
ANR	55725	Identifier	bad4		55721	2					
ANR	55726	ParameterList			55721	3					
ANR	55727	CFGEntryNode	ENTRY		55721		True				
ANR	55728	CFGExitNode	EXIT		55721		True				
ANR	55729	Function	bad5	194:0:5180:5194							
ANR	55730	FunctionDef	bad5 ()		55729	0					
ANR	55731	CompoundStatement		194:12:5192:5194	55729	0					
ANR	55732	ReturnType	void		55729	1					
ANR	55733	Identifier	bad5		55729	2					
ANR	55734	ParameterList			55729	3					
ANR	55735	CFGEntryNode	ENTRY		55729		True				
ANR	55736	CFGExitNode	EXIT		55729		True				
ANR	55737	Function	bad6	195:0:5197:5211							
ANR	55738	FunctionDef	bad6 ()		55737	0					
ANR	55739	CompoundStatement		195:12:5209:5211	55737	0					
ANR	55740	ReturnType	void		55737	1					
ANR	55741	Identifier	bad6		55737	2					
ANR	55742	ParameterList			55737	3					
ANR	55743	CFGEntryNode	ENTRY		55737		True				
ANR	55744	CFGExitNode	EXIT		55737		True				
ANR	55745	Function	bad7	196:0:5214:5228							
ANR	55746	FunctionDef	bad7 ()		55745	0					
ANR	55747	CompoundStatement		196:12:5226:5228	55745	0					
ANR	55748	ReturnType	void		55745	1					
ANR	55749	Identifier	bad7		55745	2					
ANR	55750	ParameterList			55745	3					
ANR	55751	CFGEntryNode	ENTRY		55745		True				
ANR	55752	CFGExitNode	EXIT		55745		True				
ANR	55753	Function	bad8	197:0:5231:5245							
ANR	55754	FunctionDef	bad8 ()		55753	0					
ANR	55755	CompoundStatement		197:12:5243:5245	55753	0					
ANR	55756	ReturnType	void		55753	1					
ANR	55757	Identifier	bad8		55753	2					
ANR	55758	ParameterList			55753	3					
ANR	55759	CFGEntryNode	ENTRY		55753		True				
ANR	55760	CFGExitNode	EXIT		55753		True				
ANR	55761	Function	bad9	198:0:5248:5262							
ANR	55762	FunctionDef	bad9 ()		55761	0					
ANR	55763	CompoundStatement		198:12:5260:5262	55761	0					
ANR	55764	ReturnType	void		55761	1					
ANR	55765	Identifier	bad9		55761	2					
ANR	55766	ParameterList			55761	3					
ANR	55767	CFGEntryNode	ENTRY		55761		True				
ANR	55768	CFGExitNode	EXIT		55761		True				
ANR	55769	DeclStmt									
ANR	55770	Decl							int	int	globalArgc
ANR	55771	DeclStmt									
ANR	55772	Decl							char	char * *	globalArgv
