command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6530	File	/develop/joernDwkProcess/joern-dev/./output/data/CWE119/source-code/119-0-c/testcases/000/240/305/CWE416_Use_After_Free__malloc_free_int_03.c								
ANR	6531	Function	CWE416_Use_After_Free__malloc_free_int_03_bad	24:0:636:1338							
ANR	6532	FunctionDef	CWE416_Use_After_Free__malloc_free_int_03_bad ()		6531	0					
ANR	6533	CompoundStatement		25:0:690:1338	6531	0					
ANR	6534	IdentifierDeclStatement	int * data ;	26:4:697:707	6531	0	True				
ANR	6535	IdentifierDecl	* data		6531	0					
ANR	6536	IdentifierDeclType	int *		6531	0					
ANR	6537	Identifier	data		6531	1					
ANR	6538	ExpressionStatement	data = NULL	28:4:741:752	6531	1	True				
ANR	6539	AssignmentExpression	data = NULL		6531	0		=			
ANR	6540	Identifier	data		6531	0					
ANR	6541	Identifier	NULL		6531	1					
ANR	6542	IfStatement	if ( 5 == 5 )		6531	2					
ANR	6543	Condition	5 == 5	29:7:762:765	6531	0	True				
ANR	6544	EqualityExpression	5 == 5		6531	0		==			
ANR	6545	PrimaryExpression	5		6531	0					
ANR	6546	PrimaryExpression	5		6531	1					
ANR	6547	CompoundStatement		6:4:82:82	6531	1					
ANR	6548	ExpressionStatement	data = ( int * ) malloc ( 100 * sizeof ( int ) )	31:8:784:821	6531	0	True				
ANR	6549	AssignmentExpression	data = ( int * ) malloc ( 100 * sizeof ( int ) )		6531	0		=			
ANR	6550	Identifier	data		6531	0					
ANR	6551	CastExpression	( int * ) malloc ( 100 * sizeof ( int ) )		6531	1					
ANR	6552	CastTarget	int *		6531	0					
ANR	6553	CallExpression	malloc ( 100 * sizeof ( int ) )		6531	1					
ANR	6554	Callee	malloc		6531	0					
ANR	6555	Identifier	malloc		6531	0					
ANR	6556	ArgumentList	100 * sizeof ( int )		6531	1					
ANR	6557	Argument	100 * sizeof ( int )		6531	0					
ANR	6558	MultiplicativeExpression	100 * sizeof ( int )		6531	0		*			
ANR	6559	PrimaryExpression	100		6531	0					
ANR	6560	SizeofExpression	sizeof ( int )		6531	1					
ANR	6561	Sizeof	sizeof		6531	0					
ANR	6562	SizeofOperand	int		6531	1					
ANR	6563	IfStatement	if ( data == NULL )		6531	1					
ANR	6564	Condition	data == NULL	32:12:836:847	6531	0	True				
ANR	6565	EqualityExpression	data == NULL		6531	0		==			
ANR	6566	Identifier	data		6531	0					
ANR	6567	Identifier	NULL		6531	1					
ANR	6568	CompoundStatement		8:26:159:159	6531	1					
ANR	6569	ExpressionStatement	exit ( - 1 )	32:27:851:859	6531	0	True				
ANR	6570	CallExpression	exit ( - 1 )		6531	0					
ANR	6571	Callee	exit		6531	0					
ANR	6572	Identifier	exit		6531	0					
ANR	6573	ArgumentList	- 1		6531	1					
ANR	6574	Argument	- 1		6531	0					
ANR	6575	UnaryOperationExpression	- 1		6531	0					
ANR	6576	UnaryOperator	-		6531	0					
ANR	6577	PrimaryExpression	1		6531	1					
ANR	6578	CompoundStatement		10:12:194:202	6531	2					
ANR	6579	IdentifierDeclStatement	size_t i ;	34:12:885:893	6531	0	True				
ANR	6580	IdentifierDecl	i		6531	0					
ANR	6581	IdentifierDeclType	size_t		6531	0					
ANR	6582	Identifier	i		6531	1					
ANR	6583	ForStatement	for ( i = 0 ; i < 100 ; i ++ )		6531	1					
ANR	6584	ForInit	i = 0 ;	35:16:912:917	6531	0	True				
ANR	6585	AssignmentExpression	i = 0		6531	0		=			
ANR	6586	Identifier	i		6531	0					
ANR	6587	PrimaryExpression	0		6531	1					
ANR	6588	Condition	i < 100	35:23:919:925	6531	1	True				
ANR	6589	RelationalExpression	i < 100		6531	0		<			
ANR	6590	Identifier	i		6531	0					
ANR	6591	PrimaryExpression	100		6531	1					
ANR	6592	PostIncDecOperationExpression	i ++	35:32:928:930	6531	2	True				
ANR	6593	Identifier	i		6531	0					
ANR	6594	IncDec	++		6531	1					
ANR	6595	CompoundStatement		12:12:255:255	6531	3					
ANR	6596	ExpressionStatement	data [ i ] = 5	37:16:965:976	6531	0	True				
ANR	6597	AssignmentExpression	data [ i ] = 5		6531	0		=			
ANR	6598	ArrayIndexing	data [ i ]		6531	0					
ANR	6599	Identifier	data		6531	0					
ANR	6600	Identifier	i		6531	1					
ANR	6601	PrimaryExpression	5		6531	1					
ANR	6602	ExpressionStatement	free ( data )	41:8:1104:1114	6531	3	True				
ANR	6603	CallExpression	free ( data )		6531	0					
ANR	6604	Callee	free		6531	0					
ANR	6605	Identifier	free		6531	0					
ANR	6606	ArgumentList	data		6531	1					
ANR	6607	Argument	data		6531	0					
ANR	6608	Identifier	data		6531	0					
ANR	6609	IfStatement	if ( 5 == 5 )		6531	3					
ANR	6610	Condition	5 == 5	43:7:1131:1134	6531	0	True				
ANR	6611	EqualityExpression	5 == 5		6531	0		==			
ANR	6612	PrimaryExpression	5		6531	0					
ANR	6613	PrimaryExpression	5		6531	1					
ANR	6614	CompoundStatement		20:4:451:451	6531	1					
ANR	6615	ExpressionStatement	printIntLine ( data [ 0 ] )	46:8:1221:1242	6531	0	True				
ANR	6616	CallExpression	printIntLine ( data [ 0 ] )		6531	0					
ANR	6617	Callee	printIntLine		6531	0					
ANR	6618	Identifier	printIntLine		6531	0					
ANR	6619	ArgumentList	data [ 0 ]		6531	1					
ANR	6620	Argument	data [ 0 ]		6531	0					
ANR	6621	ArrayIndexing	data [ 0 ]		6531	0					
ANR	6622	Identifier	data		6531	0					
ANR	6623	PrimaryExpression	0		6531	1					
ANR	6624	ReturnType	void		6531	1					
ANR	6625	Identifier	CWE416_Use_After_Free__malloc_free_int_03_bad		6531	2					
ANR	6626	ParameterList			6531	3					
ANR	6627	CFGEntryNode	ENTRY		6531		True				
ANR	6628	CFGExitNode	EXIT		6531		True				
ANR	6629	Symbol	malloc		6531						
ANR	6630	Symbol	NULL		6531						
ANR	6631	Symbol	* i		6531						
ANR	6632	Symbol	data		6531						
ANR	6633	Symbol	i		6531						
ANR	6634	Symbol	* data		6531						
ANR	6635	Function	goodB2G1	56:0:1470:2343							
ANR	6636	FunctionDef	goodB2G1 ()		6635	0					
ANR	6637	CompoundStatement		57:0:1494:2343	6635	0					
ANR	6638	IdentifierDeclStatement	int * data ;	58:4:1501:1511	6635	0	True				
ANR	6639	IdentifierDecl	* data		6635	0					
ANR	6640	IdentifierDeclType	int *		6635	0					
ANR	6641	Identifier	data		6635	1					
ANR	6642	ExpressionStatement	data = NULL	60:4:1545:1556	6635	1	True				
ANR	6643	AssignmentExpression	data = NULL		6635	0		=			
ANR	6644	Identifier	data		6635	0					
ANR	6645	Identifier	NULL		6635	1					
ANR	6646	IfStatement	if ( 5 == 5 )		6635	2					
ANR	6647	Condition	5 == 5	61:7:1566:1569	6635	0	True				
ANR	6648	EqualityExpression	5 == 5		6635	0		==			
ANR	6649	PrimaryExpression	5		6635	0					
ANR	6650	PrimaryExpression	5		6635	1					
ANR	6651	CompoundStatement		6:4:82:82	6635	1					
ANR	6652	ExpressionStatement	data = ( int * ) malloc ( 100 * sizeof ( int ) )	63:8:1588:1625	6635	0	True				
ANR	6653	AssignmentExpression	data = ( int * ) malloc ( 100 * sizeof ( int ) )		6635	0		=			
ANR	6654	Identifier	data		6635	0					
ANR	6655	CastExpression	( int * ) malloc ( 100 * sizeof ( int ) )		6635	1					
ANR	6656	CastTarget	int *		6635	0					
ANR	6657	CallExpression	malloc ( 100 * sizeof ( int ) )		6635	1					
ANR	6658	Callee	malloc		6635	0					
ANR	6659	Identifier	malloc		6635	0					
ANR	6660	ArgumentList	100 * sizeof ( int )		6635	1					
ANR	6661	Argument	100 * sizeof ( int )		6635	0					
ANR	6662	MultiplicativeExpression	100 * sizeof ( int )		6635	0		*			
ANR	6663	PrimaryExpression	100		6635	0					
ANR	6664	SizeofExpression	sizeof ( int )		6635	1					
ANR	6665	Sizeof	sizeof		6635	0					
ANR	6666	SizeofOperand	int		6635	1					
ANR	6667	IfStatement	if ( data == NULL )		6635	1					
ANR	6668	Condition	data == NULL	64:12:1640:1651	6635	0	True				
ANR	6669	EqualityExpression	data == NULL		6635	0		==			
ANR	6670	Identifier	data		6635	0					
ANR	6671	Identifier	NULL		6635	1					
ANR	6672	CompoundStatement		8:26:159:159	6635	1					
ANR	6673	ExpressionStatement	exit ( - 1 )	64:27:1655:1663	6635	0	True				
ANR	6674	CallExpression	exit ( - 1 )		6635	0					
ANR	6675	Callee	exit		6635	0					
ANR	6676	Identifier	exit		6635	0					
ANR	6677	ArgumentList	- 1		6635	1					
ANR	6678	Argument	- 1		6635	0					
ANR	6679	UnaryOperationExpression	- 1		6635	0					
ANR	6680	UnaryOperator	-		6635	0					
ANR	6681	PrimaryExpression	1		6635	1					
ANR	6682	CompoundStatement		10:12:194:202	6635	2					
ANR	6683	IdentifierDeclStatement	size_t i ;	66:12:1689:1697	6635	0	True				
ANR	6684	IdentifierDecl	i		6635	0					
ANR	6685	IdentifierDeclType	size_t		6635	0					
ANR	6686	Identifier	i		6635	1					
ANR	6687	ForStatement	for ( i = 0 ; i < 100 ; i ++ )		6635	1					
ANR	6688	ForInit	i = 0 ;	67:16:1716:1721	6635	0	True				
ANR	6689	AssignmentExpression	i = 0		6635	0		=			
ANR	6690	Identifier	i		6635	0					
ANR	6691	PrimaryExpression	0		6635	1					
ANR	6692	Condition	i < 100	67:23:1723:1729	6635	1	True				
ANR	6693	RelationalExpression	i < 100		6635	0		<			
ANR	6694	Identifier	i		6635	0					
ANR	6695	PrimaryExpression	100		6635	1					
ANR	6696	PostIncDecOperationExpression	i ++	67:32:1732:1734	6635	2	True				
ANR	6697	Identifier	i		6635	0					
ANR	6698	IncDec	++		6635	1					
ANR	6699	CompoundStatement		12:12:255:255	6635	3					
ANR	6700	ExpressionStatement	data [ i ] = 5	69:16:1769:1780	6635	0	True				
ANR	6701	AssignmentExpression	data [ i ] = 5		6635	0		=			
ANR	6702	ArrayIndexing	data [ i ]		6635	0					
ANR	6703	Identifier	data		6635	0					
ANR	6704	Identifier	i		6635	1					
ANR	6705	PrimaryExpression	5		6635	1					
ANR	6706	ExpressionStatement	free ( data )	73:8:1908:1918	6635	3	True				
ANR	6707	CallExpression	free ( data )		6635	0					
ANR	6708	Callee	free		6635	0					
ANR	6709	Identifier	free		6635	0					
ANR	6710	ArgumentList	data		6635	1					
ANR	6711	Argument	data		6635	0					
ANR	6712	Identifier	data		6635	0					
ANR	6713	IfStatement	if ( 5 != 5 )		6635	3					
ANR	6714	Condition	5 != 5	75:7:1935:1938	6635	0	True				
ANR	6715	EqualityExpression	5 != 5		6635	0		!=			
ANR	6716	PrimaryExpression	5		6635	0					
ANR	6717	PrimaryExpression	5		6635	1					
ANR	6718	CompoundStatement		20:4:451:451	6635	1					
ANR	6719	ExpressionStatement	"printLine ( ""Benign, fixed string"" )"	78:8:2033:2066	6635	0	True				
ANR	6720	CallExpression	"printLine ( ""Benign, fixed string"" )"		6635	0					
ANR	6721	Callee	printLine		6635	0					
ANR	6722	Identifier	printLine		6635	0					
ANR	6723	ArgumentList	"""Benign, fixed string"""		6635	1					
ANR	6724	Argument	"""Benign, fixed string"""		6635	0					
ANR	6725	PrimaryExpression	"""Benign, fixed string"""		6635	0					
ANR	6726	ElseStatement	else		6635	0					
ANR	6727	CompoundStatement		25:4:595:595	6635	0					
ANR	6728	ExpressionStatement		85:8:2281:2281	6635	0	True				
ANR	6729	ReturnType	static void		6635	1					
ANR	6730	Identifier	goodB2G1		6635	2					
ANR	6731	ParameterList			6635	3					
ANR	6732	CFGEntryNode	ENTRY		6635		True				
ANR	6733	CFGExitNode	EXIT		6635		True				
ANR	6734	Symbol	malloc		6635						
ANR	6735	Symbol	NULL		6635						
ANR	6736	Symbol	* i		6635						
ANR	6737	Symbol	data		6635						
ANR	6738	Symbol	i		6635						
ANR	6739	Symbol	* data		6635						
ANR	6740	Function	goodB2G2	90:0:2436:3165							
ANR	6741	FunctionDef	goodB2G2 ()		6740	0					
ANR	6742	CompoundStatement		91:0:2460:3165	6740	0					
ANR	6743	IdentifierDeclStatement	int * data ;	92:4:2467:2477	6740	0	True				
ANR	6744	IdentifierDecl	* data		6740	0					
ANR	6745	IdentifierDeclType	int *		6740	0					
ANR	6746	Identifier	data		6740	1					
ANR	6747	ExpressionStatement	data = NULL	94:4:2511:2522	6740	1	True				
ANR	6748	AssignmentExpression	data = NULL		6740	0		=			
ANR	6749	Identifier	data		6740	0					
ANR	6750	Identifier	NULL		6740	1					
ANR	6751	IfStatement	if ( 5 == 5 )		6740	2					
ANR	6752	Condition	5 == 5	95:7:2532:2535	6740	0	True				
ANR	6753	EqualityExpression	5 == 5		6740	0		==			
ANR	6754	PrimaryExpression	5		6740	0					
ANR	6755	PrimaryExpression	5		6740	1					
ANR	6756	CompoundStatement		6:4:82:82	6740	1					
ANR	6757	ExpressionStatement	data = ( int * ) malloc ( 100 * sizeof ( int ) )	97:8:2554:2591	6740	0	True				
ANR	6758	AssignmentExpression	data = ( int * ) malloc ( 100 * sizeof ( int ) )		6740	0		=			
ANR	6759	Identifier	data		6740	0					
ANR	6760	CastExpression	( int * ) malloc ( 100 * sizeof ( int ) )		6740	1					
ANR	6761	CastTarget	int *		6740	0					
ANR	6762	CallExpression	malloc ( 100 * sizeof ( int ) )		6740	1					
ANR	6763	Callee	malloc		6740	0					
ANR	6764	Identifier	malloc		6740	0					
ANR	6765	ArgumentList	100 * sizeof ( int )		6740	1					
ANR	6766	Argument	100 * sizeof ( int )		6740	0					
ANR	6767	MultiplicativeExpression	100 * sizeof ( int )		6740	0		*			
ANR	6768	PrimaryExpression	100		6740	0					
ANR	6769	SizeofExpression	sizeof ( int )		6740	1					
ANR	6770	Sizeof	sizeof		6740	0					
ANR	6771	SizeofOperand	int		6740	1					
ANR	6772	IfStatement	if ( data == NULL )		6740	1					
ANR	6773	Condition	data == NULL	98:12:2606:2617	6740	0	True				
ANR	6774	EqualityExpression	data == NULL		6740	0		==			
ANR	6775	Identifier	data		6740	0					
ANR	6776	Identifier	NULL		6740	1					
ANR	6777	CompoundStatement		8:26:159:159	6740	1					
ANR	6778	ExpressionStatement	exit ( - 1 )	98:27:2621:2629	6740	0	True				
ANR	6779	CallExpression	exit ( - 1 )		6740	0					
ANR	6780	Callee	exit		6740	0					
ANR	6781	Identifier	exit		6740	0					
ANR	6782	ArgumentList	- 1		6740	1					
ANR	6783	Argument	- 1		6740	0					
ANR	6784	UnaryOperationExpression	- 1		6740	0					
ANR	6785	UnaryOperator	-		6740	0					
ANR	6786	PrimaryExpression	1		6740	1					
ANR	6787	CompoundStatement		10:12:194:202	6740	2					
ANR	6788	IdentifierDeclStatement	size_t i ;	100:12:2655:2663	6740	0	True				
ANR	6789	IdentifierDecl	i		6740	0					
ANR	6790	IdentifierDeclType	size_t		6740	0					
ANR	6791	Identifier	i		6740	1					
ANR	6792	ForStatement	for ( i = 0 ; i < 100 ; i ++ )		6740	1					
ANR	6793	ForInit	i = 0 ;	101:16:2682:2687	6740	0	True				
ANR	6794	AssignmentExpression	i = 0		6740	0		=			
ANR	6795	Identifier	i		6740	0					
ANR	6796	PrimaryExpression	0		6740	1					
ANR	6797	Condition	i < 100	101:23:2689:2695	6740	1	True				
ANR	6798	RelationalExpression	i < 100		6740	0		<			
ANR	6799	Identifier	i		6740	0					
ANR	6800	PrimaryExpression	100		6740	1					
ANR	6801	PostIncDecOperationExpression	i ++	101:32:2698:2700	6740	2	True				
ANR	6802	Identifier	i		6740	0					
ANR	6803	IncDec	++		6740	1					
ANR	6804	CompoundStatement		12:12:255:255	6740	3					
ANR	6805	ExpressionStatement	data [ i ] = 5	103:16:2735:2746	6740	0	True				
ANR	6806	AssignmentExpression	data [ i ] = 5		6740	0		=			
ANR	6807	ArrayIndexing	data [ i ]		6740	0					
ANR	6808	Identifier	data		6740	0					
ANR	6809	Identifier	i		6740	1					
ANR	6810	PrimaryExpression	5		6740	1					
ANR	6811	ExpressionStatement	free ( data )	107:8:2874:2884	6740	3	True				
ANR	6812	CallExpression	free ( data )		6740	0					
ANR	6813	Callee	free		6740	0					
ANR	6814	Identifier	free		6740	0					
ANR	6815	ArgumentList	data		6740	1					
ANR	6816	Argument	data		6740	0					
ANR	6817	Identifier	data		6740	0					
ANR	6818	IfStatement	if ( 5 == 5 )		6740	3					
ANR	6819	Condition	5 == 5	109:7:2901:2904	6740	0	True				
ANR	6820	EqualityExpression	5 == 5		6740	0		==			
ANR	6821	PrimaryExpression	5		6740	0					
ANR	6822	PrimaryExpression	5		6740	1					
ANR	6823	CompoundStatement		20:4:451:451	6740	1					
ANR	6824	ExpressionStatement		114:8:3103:3103	6740	0	True				
ANR	6825	ReturnType	static void		6740	1					
ANR	6826	Identifier	goodB2G2		6740	2					
ANR	6827	ParameterList			6740	3					
ANR	6828	CFGEntryNode	ENTRY		6740		True				
ANR	6829	CFGExitNode	EXIT		6740		True				
ANR	6830	Symbol	malloc		6740						
ANR	6831	Symbol	NULL		6740						
ANR	6832	Symbol	* i		6740						
ANR	6833	Symbol	data		6740						
ANR	6834	Symbol	i		6740						
ANR	6835	Symbol	* data		6740						
ANR	6836	Function	goodG2B1	119:0:3252:4007							
ANR	6837	FunctionDef	goodG2B1 ()		6836	0					
ANR	6838	CompoundStatement		120:0:3276:4007	6836	0					
ANR	6839	IdentifierDeclStatement	int * data ;	121:4:3283:3293	6836	0	True				
ANR	6840	IdentifierDecl	* data		6836	0					
ANR	6841	IdentifierDeclType	int *		6836	0					
ANR	6842	Identifier	data		6836	1					
ANR	6843	ExpressionStatement	data = NULL	123:4:3327:3338	6836	1	True				
ANR	6844	AssignmentExpression	data = NULL		6836	0		=			
ANR	6845	Identifier	data		6836	0					
ANR	6846	Identifier	NULL		6836	1					
ANR	6847	IfStatement	if ( 5 != 5 )		6836	2					
ANR	6848	Condition	5 != 5	124:7:3348:3351	6836	0	True				
ANR	6849	EqualityExpression	5 != 5		6836	0		!=			
ANR	6850	PrimaryExpression	5		6836	0					
ANR	6851	PrimaryExpression	5		6836	1					
ANR	6852	CompoundStatement		6:4:82:82	6836	1					
ANR	6853	ExpressionStatement	"printLine ( ""Benign, fixed string"" )"	127:8:3446:3479	6836	0	True				
ANR	6854	CallExpression	"printLine ( ""Benign, fixed string"" )"		6836	0					
ANR	6855	Callee	printLine		6836	0					
ANR	6856	Identifier	printLine		6836	0					
ANR	6857	ArgumentList	"""Benign, fixed string"""		6836	1					
ANR	6858	Argument	"""Benign, fixed string"""		6836	0					
ANR	6859	PrimaryExpression	"""Benign, fixed string"""		6836	0					
ANR	6860	ElseStatement	else		6836	0					
ANR	6861	CompoundStatement		11:4:226:226	6836	0					
ANR	6862	ExpressionStatement	data = ( int * ) malloc ( 100 * sizeof ( int ) )	131:8:3514:3551	6836	0	True				
ANR	6863	AssignmentExpression	data = ( int * ) malloc ( 100 * sizeof ( int ) )		6836	0		=			
ANR	6864	Identifier	data		6836	0					
ANR	6865	CastExpression	( int * ) malloc ( 100 * sizeof ( int ) )		6836	1					
ANR	6866	CastTarget	int *		6836	0					
ANR	6867	CallExpression	malloc ( 100 * sizeof ( int ) )		6836	1					
ANR	6868	Callee	malloc		6836	0					
ANR	6869	Identifier	malloc		6836	0					
ANR	6870	ArgumentList	100 * sizeof ( int )		6836	1					
ANR	6871	Argument	100 * sizeof ( int )		6836	0					
ANR	6872	MultiplicativeExpression	100 * sizeof ( int )		6836	0		*			
ANR	6873	PrimaryExpression	100		6836	0					
ANR	6874	SizeofExpression	sizeof ( int )		6836	1					
ANR	6875	Sizeof	sizeof		6836	0					
ANR	6876	SizeofOperand	int		6836	1					
ANR	6877	IfStatement	if ( data == NULL )		6836	1					
ANR	6878	Condition	data == NULL	132:12:3566:3577	6836	0	True				
ANR	6879	EqualityExpression	data == NULL		6836	0		==			
ANR	6880	Identifier	data		6836	0					
ANR	6881	Identifier	NULL		6836	1					
ANR	6882	CompoundStatement		13:26:303:303	6836	1					
ANR	6883	ExpressionStatement	exit ( - 1 )	132:27:3581:3589	6836	0	True				
ANR	6884	CallExpression	exit ( - 1 )		6836	0					
ANR	6885	Callee	exit		6836	0					
ANR	6886	Identifier	exit		6836	0					
ANR	6887	ArgumentList	- 1		6836	1					
ANR	6888	Argument	- 1		6836	0					
ANR	6889	UnaryOperationExpression	- 1		6836	0					
ANR	6890	UnaryOperator	-		6836	0					
ANR	6891	PrimaryExpression	1		6836	1					
ANR	6892	CompoundStatement		15:12:338:346	6836	2					
ANR	6893	IdentifierDeclStatement	size_t i ;	134:12:3615:3623	6836	0	True				
ANR	6894	IdentifierDecl	i		6836	0					
ANR	6895	IdentifierDeclType	size_t		6836	0					
ANR	6896	Identifier	i		6836	1					
ANR	6897	ForStatement	for ( i = 0 ; i < 100 ; i ++ )		6836	1					
ANR	6898	ForInit	i = 0 ;	135:16:3642:3647	6836	0	True				
ANR	6899	AssignmentExpression	i = 0		6836	0		=			
ANR	6900	Identifier	i		6836	0					
ANR	6901	PrimaryExpression	0		6836	1					
ANR	6902	Condition	i < 100	135:23:3649:3655	6836	1	True				
ANR	6903	RelationalExpression	i < 100		6836	0		<			
ANR	6904	Identifier	i		6836	0					
ANR	6905	PrimaryExpression	100		6836	1					
ANR	6906	PostIncDecOperationExpression	i ++	135:32:3658:3660	6836	2	True				
ANR	6907	Identifier	i		6836	0					
ANR	6908	IncDec	++		6836	1					
ANR	6909	CompoundStatement		17:12:399:399	6836	3					
ANR	6910	ExpressionStatement	data [ i ] = 5	137:16:3695:3706	6836	0	True				
ANR	6911	AssignmentExpression	data [ i ] = 5		6836	0		=			
ANR	6912	ArrayIndexing	data [ i ]		6836	0					
ANR	6913	Identifier	data		6836	0					
ANR	6914	Identifier	i		6836	1					
ANR	6915	PrimaryExpression	5		6836	1					
ANR	6916	IfStatement	if ( 5 == 5 )		6836	3					
ANR	6917	Condition	5 == 5	142:7:3800:3803	6836	0	True				
ANR	6918	EqualityExpression	5 == 5		6836	0		==			
ANR	6919	PrimaryExpression	5		6836	0					
ANR	6920	PrimaryExpression	5		6836	1					
ANR	6921	CompoundStatement		24:4:534:534	6836	1					
ANR	6922	ExpressionStatement	printIntLine ( data [ 0 ] )	145:8:3890:3911	6836	0	True				
ANR	6923	CallExpression	printIntLine ( data [ 0 ] )		6836	0					
ANR	6924	Callee	printIntLine		6836	0					
ANR	6925	Identifier	printIntLine		6836	0					
ANR	6926	ArgumentList	data [ 0 ]		6836	1					
ANR	6927	Argument	data [ 0 ]		6836	0					
ANR	6928	ArrayIndexing	data [ 0 ]		6836	0					
ANR	6929	Identifier	data		6836	0					
ANR	6930	PrimaryExpression	0		6836	1					
ANR	6931	ReturnType	static void		6836	1					
ANR	6932	Identifier	goodG2B1		6836	2					
ANR	6933	ParameterList			6836	3					
ANR	6934	CFGEntryNode	ENTRY		6836		True				
ANR	6935	CFGExitNode	EXIT		6836		True				
ANR	6936	Symbol	malloc		6836						
ANR	6937	Symbol	NULL		6836						
ANR	6938	Symbol	* i		6836						
ANR	6939	Symbol	data		6836						
ANR	6940	Symbol	i		6836						
ANR	6941	Symbol	* data		6836						
ANR	6942	Function	goodG2B2	151:0:4099:4710							
ANR	6943	FunctionDef	goodG2B2 ()		6942	0					
ANR	6944	CompoundStatement		152:0:4123:4710	6942	0					
ANR	6945	IdentifierDeclStatement	int * data ;	153:4:4130:4140	6942	0	True				
ANR	6946	IdentifierDecl	* data		6942	0					
ANR	6947	IdentifierDeclType	int *		6942	0					
ANR	6948	Identifier	data		6942	1					
ANR	6949	ExpressionStatement	data = NULL	155:4:4174:4185	6942	1	True				
ANR	6950	AssignmentExpression	data = NULL		6942	0		=			
ANR	6951	Identifier	data		6942	0					
ANR	6952	Identifier	NULL		6942	1					
ANR	6953	IfStatement	if ( 5 == 5 )		6942	2					
ANR	6954	Condition	5 == 5	156:7:4195:4198	6942	0	True				
ANR	6955	EqualityExpression	5 == 5		6942	0		==			
ANR	6956	PrimaryExpression	5		6942	0					
ANR	6957	PrimaryExpression	5		6942	1					
ANR	6958	CompoundStatement		6:4:82:82	6942	1					
ANR	6959	ExpressionStatement	data = ( int * ) malloc ( 100 * sizeof ( int ) )	158:8:4217:4254	6942	0	True				
ANR	6960	AssignmentExpression	data = ( int * ) malloc ( 100 * sizeof ( int ) )		6942	0		=			
ANR	6961	Identifier	data		6942	0					
ANR	6962	CastExpression	( int * ) malloc ( 100 * sizeof ( int ) )		6942	1					
ANR	6963	CastTarget	int *		6942	0					
ANR	6964	CallExpression	malloc ( 100 * sizeof ( int ) )		6942	1					
ANR	6965	Callee	malloc		6942	0					
ANR	6966	Identifier	malloc		6942	0					
ANR	6967	ArgumentList	100 * sizeof ( int )		6942	1					
ANR	6968	Argument	100 * sizeof ( int )		6942	0					
ANR	6969	MultiplicativeExpression	100 * sizeof ( int )		6942	0		*			
ANR	6970	PrimaryExpression	100		6942	0					
ANR	6971	SizeofExpression	sizeof ( int )		6942	1					
ANR	6972	Sizeof	sizeof		6942	0					
ANR	6973	SizeofOperand	int		6942	1					
ANR	6974	IfStatement	if ( data == NULL )		6942	1					
ANR	6975	Condition	data == NULL	159:12:4269:4280	6942	0	True				
ANR	6976	EqualityExpression	data == NULL		6942	0		==			
ANR	6977	Identifier	data		6942	0					
ANR	6978	Identifier	NULL		6942	1					
ANR	6979	CompoundStatement		8:26:159:159	6942	1					
ANR	6980	ExpressionStatement	exit ( - 1 )	159:27:4284:4292	6942	0	True				
ANR	6981	CallExpression	exit ( - 1 )		6942	0					
ANR	6982	Callee	exit		6942	0					
ANR	6983	Identifier	exit		6942	0					
ANR	6984	ArgumentList	- 1		6942	1					
ANR	6985	Argument	- 1		6942	0					
ANR	6986	UnaryOperationExpression	- 1		6942	0					
ANR	6987	UnaryOperator	-		6942	0					
ANR	6988	PrimaryExpression	1		6942	1					
ANR	6989	CompoundStatement		10:12:194:202	6942	2					
ANR	6990	IdentifierDeclStatement	size_t i ;	161:12:4318:4326	6942	0	True				
ANR	6991	IdentifierDecl	i		6942	0					
ANR	6992	IdentifierDeclType	size_t		6942	0					
ANR	6993	Identifier	i		6942	1					
ANR	6994	ForStatement	for ( i = 0 ; i < 100 ; i ++ )		6942	1					
ANR	6995	ForInit	i = 0 ;	162:16:4345:4350	6942	0	True				
ANR	6996	AssignmentExpression	i = 0		6942	0		=			
ANR	6997	Identifier	i		6942	0					
ANR	6998	PrimaryExpression	0		6942	1					
ANR	6999	Condition	i < 100	162:23:4352:4358	6942	1	True				
ANR	7000	RelationalExpression	i < 100		6942	0		<			
ANR	7001	Identifier	i		6942	0					
ANR	7002	PrimaryExpression	100		6942	1					
ANR	7003	PostIncDecOperationExpression	i ++	162:32:4361:4363	6942	2	True				
ANR	7004	Identifier	i		6942	0					
ANR	7005	IncDec	++		6942	1					
ANR	7006	CompoundStatement		12:12:255:255	6942	3					
ANR	7007	ExpressionStatement	data [ i ] = 5	164:16:4398:4409	6942	0	True				
ANR	7008	AssignmentExpression	data [ i ] = 5		6942	0		=			
ANR	7009	ArrayIndexing	data [ i ]		6942	0					
ANR	7010	Identifier	data		6942	0					
ANR	7011	Identifier	i		6942	1					
ANR	7012	PrimaryExpression	5		6942	1					
ANR	7013	IfStatement	if ( 5 == 5 )		6942	3					
ANR	7014	Condition	5 == 5	169:7:4503:4506	6942	0	True				
ANR	7015	EqualityExpression	5 == 5		6942	0		==			
ANR	7016	PrimaryExpression	5		6942	0					
ANR	7017	PrimaryExpression	5		6942	1					
ANR	7018	CompoundStatement		19:4:390:390	6942	1					
ANR	7019	ExpressionStatement	printIntLine ( data [ 0 ] )	172:8:4593:4614	6942	0	True				
ANR	7020	CallExpression	printIntLine ( data [ 0 ] )		6942	0					
ANR	7021	Callee	printIntLine		6942	0					
ANR	7022	Identifier	printIntLine		6942	0					
ANR	7023	ArgumentList	data [ 0 ]		6942	1					
ANR	7024	Argument	data [ 0 ]		6942	0					
ANR	7025	ArrayIndexing	data [ 0 ]		6942	0					
ANR	7026	Identifier	data		6942	0					
ANR	7027	PrimaryExpression	0		6942	1					
ANR	7028	ReturnType	static void		6942	1					
ANR	7029	Identifier	goodG2B2		6942	2					
ANR	7030	ParameterList			6942	3					
ANR	7031	CFGEntryNode	ENTRY		6942		True				
ANR	7032	CFGExitNode	EXIT		6942		True				
ANR	7033	Symbol	malloc		6942						
ANR	7034	Symbol	NULL		6942						
ANR	7035	Symbol	* i		6942						
ANR	7036	Symbol	data		6942						
ANR	7037	Symbol	i		6942						
ANR	7038	Symbol	* data		6942						
ANR	7039	Function	CWE416_Use_After_Free__malloc_free_int_03_good	177:0:4715:4841							
ANR	7040	FunctionDef	CWE416_Use_After_Free__malloc_free_int_03_good ()		7039	0					
ANR	7041	CompoundStatement		178:0:4770:4841	7039	0					
ANR	7042	ExpressionStatement	goodB2G1 ( )	179:4:4777:4787	7039	0	True				
ANR	7043	CallExpression	goodB2G1 ( )		7039	0					
ANR	7044	Callee	goodB2G1		7039	0					
ANR	7045	Identifier	goodB2G1		7039	0					
ANR	7046	ArgumentList			7039	1					
ANR	7047	ExpressionStatement	goodB2G2 ( )	180:4:4794:4804	7039	1	True				
ANR	7048	CallExpression	goodB2G2 ( )		7039	0					
ANR	7049	Callee	goodB2G2		7039	0					
ANR	7050	Identifier	goodB2G2		7039	0					
ANR	7051	ArgumentList			7039	1					
ANR	7052	ExpressionStatement	goodG2B1 ( )	181:4:4811:4821	7039	2	True				
ANR	7053	CallExpression	goodG2B1 ( )		7039	0					
ANR	7054	Callee	goodG2B1		7039	0					
ANR	7055	Identifier	goodG2B1		7039	0					
ANR	7056	ArgumentList			7039	1					
ANR	7057	ExpressionStatement	goodG2B2 ( )	182:4:4828:4838	7039	3	True				
ANR	7058	CallExpression	goodG2B2 ( )		7039	0					
ANR	7059	Callee	goodG2B2		7039	0					
ANR	7060	Identifier	goodG2B2		7039	0					
ANR	7061	ArgumentList			7039	1					
ANR	7062	ReturnType	void		7039	1					
ANR	7063	Identifier	CWE416_Use_After_Free__malloc_free_int_03_good		7039	2					
ANR	7064	ParameterList			7039	3					
ANR	7065	CFGEntryNode	ENTRY		7039		True				
ANR	7066	CFGExitNode	EXIT		7039		True				
ANR	7067	Function	main	194:0:5188:5635							
ANR	7068	FunctionDef	"main (int argc , char * argv [ ])"		7067	0					
ANR	7069	CompoundStatement		195:0:5223:5635	7067	0					
ANR	7070	ExpressionStatement	srand ( ( unsigned ) time ( NULL ) )	197:4:5257:5286	7067	0	True				
ANR	7071	CallExpression	srand ( ( unsigned ) time ( NULL ) )		7067	0					
ANR	7072	Callee	srand		7067	0					
ANR	7073	Identifier	srand		7067	0					
ANR	7074	ArgumentList	( unsigned ) time ( NULL )		7067	1					
ANR	7075	Argument	( unsigned ) time ( NULL )		7067	0					
ANR	7076	CastExpression	( unsigned ) time ( NULL )		7067	0					
ANR	7077	CastTarget	unsigned		7067	0					
ANR	7078	CallExpression	time ( NULL )		7067	1					
ANR	7079	Callee	time		7067	0					
ANR	7080	Identifier	time		7067	0					
ANR	7081	ArgumentList	NULL		7067	1					
ANR	7082	Argument	NULL		7067	0					
ANR	7083	Identifier	NULL		7067	0					
ANR	7084	ExpressionStatement	"printLine ( ""Calling good()..."" )"	199:4:5311:5341	7067	1	True				
ANR	7085	CallExpression	"printLine ( ""Calling good()..."" )"		7067	0					
ANR	7086	Callee	printLine		7067	0					
ANR	7087	Identifier	printLine		7067	0					
ANR	7088	ArgumentList	"""Calling good()..."""		7067	1					
ANR	7089	Argument	"""Calling good()..."""		7067	0					
ANR	7090	PrimaryExpression	"""Calling good()..."""		7067	0					
ANR	7091	ExpressionStatement	CWE416_Use_After_Free__malloc_free_int_03_good ( )	200:4:5348:5396	7067	2	True				
ANR	7092	CallExpression	CWE416_Use_After_Free__malloc_free_int_03_good ( )		7067	0					
ANR	7093	Callee	CWE416_Use_After_Free__malloc_free_int_03_good		7067	0					
ANR	7094	Identifier	CWE416_Use_After_Free__malloc_free_int_03_good		7067	0					
ANR	7095	ArgumentList			7067	1					
ANR	7096	ExpressionStatement	"printLine ( ""Finished good()"" )"	201:4:5403:5431	7067	3	True				
ANR	7097	CallExpression	"printLine ( ""Finished good()"" )"		7067	0					
ANR	7098	Callee	printLine		7067	0					
ANR	7099	Identifier	printLine		7067	0					
ANR	7100	ArgumentList	"""Finished good()"""		7067	1					
ANR	7101	Argument	"""Finished good()"""		7067	0					
ANR	7102	PrimaryExpression	"""Finished good()"""		7067	0					
ANR	7103	ExpressionStatement	"printLine ( ""Calling bad()..."" )"	204:4:5478:5507	7067	4	True				
ANR	7104	CallExpression	"printLine ( ""Calling bad()..."" )"		7067	0					
ANR	7105	Callee	printLine		7067	0					
ANR	7106	Identifier	printLine		7067	0					
ANR	7107	ArgumentList	"""Calling bad()..."""		7067	1					
ANR	7108	Argument	"""Calling bad()..."""		7067	0					
ANR	7109	PrimaryExpression	"""Calling bad()..."""		7067	0					
ANR	7110	ExpressionStatement	CWE416_Use_After_Free__malloc_free_int_03_bad ( )	205:4:5514:5561	7067	5	True				
ANR	7111	CallExpression	CWE416_Use_After_Free__malloc_free_int_03_bad ( )		7067	0					
ANR	7112	Callee	CWE416_Use_After_Free__malloc_free_int_03_bad		7067	0					
ANR	7113	Identifier	CWE416_Use_After_Free__malloc_free_int_03_bad		7067	0					
ANR	7114	ArgumentList			7067	1					
ANR	7115	ExpressionStatement	"printLine ( ""Finished bad()"" )"	206:4:5568:5595	7067	6	True				
ANR	7116	CallExpression	"printLine ( ""Finished bad()"" )"		7067	0					
ANR	7117	Callee	printLine		7067	0					
ANR	7118	Identifier	printLine		7067	0					
ANR	7119	ArgumentList	"""Finished bad()"""		7067	1					
ANR	7120	Argument	"""Finished bad()"""		7067	0					
ANR	7121	PrimaryExpression	"""Finished bad()"""		7067	0					
ANR	7122	ReturnStatement	return 0 ;	208:4:5624:5632	7067	7	True				
ANR	7123	PrimaryExpression	0		7067	0					
ANR	7124	ReturnType	int		7067	1					
ANR	7125	Identifier	main		7067	2					
ANR	7126	ParameterList	"int argc , char * argv [ ]"		7067	3					
ANR	7127	Parameter	int argc	194:9:5197:5204	7067	0	True				
ANR	7128	ParameterType	int		7067	0					
ANR	7129	Identifier	argc		7067	1					
ANR	7130	Parameter	char * argv [ ]	194:19:5207:5219	7067	1	True				
ANR	7131	ParameterType	char * [ ]		7067	0					
ANR	7132	Identifier	argv		7067	1					
ANR	7133	CFGEntryNode	ENTRY		7067		True				
ANR	7134	CFGExitNode	EXIT		7067		True				
ANR	7135	Symbol	argc		7067						
ANR	7136	Symbol	NULL		7067						
ANR	7137	Symbol	time		7067						
ANR	7138	Symbol	argv		7067						
