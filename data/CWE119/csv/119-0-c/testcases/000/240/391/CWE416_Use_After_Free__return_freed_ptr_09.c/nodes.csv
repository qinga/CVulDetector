command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	50531	File	/develop/joernDwkProcess/joern-dev/./output/data/CWE119/source-code/119-0-c/testcases/000/240/391/CWE416_Use_After_Free__return_freed_ptr_09.c								
ANR	50532	Function	helperBad	18:0:546:1166							
ANR	50533	FunctionDef	helperBad (char * aString)		50532	0					
ANR	50534	CompoundStatement		19:0:587:1166	50532	0					
ANR	50535	IdentifierDeclStatement	size_t i = 0 ;	20:4:594:606	50532	0	True				
ANR	50536	IdentifierDecl	i = 0		50532	0					
ANR	50537	IdentifierDeclType	size_t		50532	0					
ANR	50538	Identifier	i		50532	1					
ANR	50539	AssignmentExpression	i = 0		50532	2		=			
ANR	50540	Identifier	i		50532	0					
ANR	50541	PrimaryExpression	0		50532	1					
ANR	50542	IdentifierDeclStatement	size_t j ;	21:4:613:621	50532	1	True				
ANR	50543	IdentifierDecl	j		50532	0					
ANR	50544	IdentifierDeclType	size_t		50532	0					
ANR	50545	Identifier	j		50532	1					
ANR	50546	IdentifierDeclStatement	char * reversedString = NULL ;	22:4:628:656	50532	2	True				
ANR	50547	IdentifierDecl	* reversedString = NULL		50532	0					
ANR	50548	IdentifierDeclType	char *		50532	0					
ANR	50549	Identifier	reversedString		50532	1					
ANR	50550	AssignmentExpression	* reversedString = NULL		50532	2		=			
ANR	50551	Identifier	NULL		50532	0					
ANR	50552	Identifier	NULL		50532	1					
ANR	50553	IfStatement	if ( aString != NULL )		50532	3					
ANR	50554	Condition	aString != NULL	23:8:667:681	50532	0	True				
ANR	50555	EqualityExpression	aString != NULL		50532	0		!=			
ANR	50556	Identifier	aString		50532	0					
ANR	50557	Identifier	NULL		50532	1					
ANR	50558	CompoundStatement		6:4:101:101	50532	1					
ANR	50559	ExpressionStatement	i = strlen ( aString )	25:8:700:719	50532	0	True				
ANR	50560	AssignmentExpression	i = strlen ( aString )		50532	0		=			
ANR	50561	Identifier	i		50532	0					
ANR	50562	CallExpression	strlen ( aString )		50532	1					
ANR	50563	Callee	strlen		50532	0					
ANR	50564	Identifier	strlen		50532	0					
ANR	50565	ArgumentList	aString		50532	1					
ANR	50566	Argument	aString		50532	0					
ANR	50567	Identifier	aString		50532	0					
ANR	50568	ExpressionStatement	reversedString = ( char * ) malloc ( i + 1 )	26:8:730:767	50532	1	True				
ANR	50569	AssignmentExpression	reversedString = ( char * ) malloc ( i + 1 )		50532	0		=			
ANR	50570	Identifier	reversedString		50532	0					
ANR	50571	CastExpression	( char * ) malloc ( i + 1 )		50532	1					
ANR	50572	CastTarget	char *		50532	0					
ANR	50573	CallExpression	malloc ( i + 1 )		50532	1					
ANR	50574	Callee	malloc		50532	0					
ANR	50575	Identifier	malloc		50532	0					
ANR	50576	ArgumentList	i + 1		50532	1					
ANR	50577	Argument	i + 1		50532	0					
ANR	50578	AdditiveExpression	i + 1		50532	0		+			
ANR	50579	Identifier	i		50532	0					
ANR	50580	PrimaryExpression	1		50532	1					
ANR	50581	IfStatement	if ( reversedString == NULL )		50532	2					
ANR	50582	Condition	reversedString == NULL	27:12:782:803	50532	0	True				
ANR	50583	EqualityExpression	reversedString == NULL		50532	0		==			
ANR	50584	Identifier	reversedString		50532	0					
ANR	50585	Identifier	NULL		50532	1					
ANR	50586	CompoundStatement		9:36:218:218	50532	1					
ANR	50587	ExpressionStatement	exit ( - 1 )	27:37:807:815	50532	0	True				
ANR	50588	CallExpression	exit ( - 1 )		50532	0					
ANR	50589	Callee	exit		50532	0					
ANR	50590	Identifier	exit		50532	0					
ANR	50591	ArgumentList	- 1		50532	1					
ANR	50592	Argument	- 1		50532	0					
ANR	50593	UnaryOperationExpression	- 1		50532	0					
ANR	50594	UnaryOperator	-		50532	0					
ANR	50595	PrimaryExpression	1		50532	1					
ANR	50596	ForStatement	for ( j = 0 ; j < i ; j ++ )		50532	3					
ANR	50597	ForInit	j = 0 ;	28:13:831:836	50532	0	True				
ANR	50598	AssignmentExpression	j = 0		50532	0		=			
ANR	50599	Identifier	j		50532	0					
ANR	50600	PrimaryExpression	0		50532	1					
ANR	50601	Condition	j < i	28:20:838:842	50532	1	True				
ANR	50602	RelationalExpression	j < i		50532	0		<			
ANR	50603	Identifier	j		50532	0					
ANR	50604	Identifier	i		50532	1					
ANR	50605	PostIncDecOperationExpression	j ++	28:27:845:847	50532	2	True				
ANR	50606	Identifier	j		50532	0					
ANR	50607	IncDec	++		50532	1					
ANR	50608	CompoundStatement		11:8:271:271	50532	3					
ANR	50609	ExpressionStatement	reversedString [ j ] = aString [ i - j - 1 ]	30:12:874:908	50532	0	True				
ANR	50610	AssignmentExpression	reversedString [ j ] = aString [ i - j - 1 ]		50532	0		=			
ANR	50611	ArrayIndexing	reversedString [ j ]		50532	0					
ANR	50612	Identifier	reversedString		50532	0					
ANR	50613	Identifier	j		50532	1					
ANR	50614	ArrayIndexing	aString [ i - j - 1 ]		50532	1					
ANR	50615	Identifier	aString		50532	0					
ANR	50616	AdditiveExpression	i - j - 1		50532	1		-			
ANR	50617	Identifier	i		50532	0					
ANR	50618	AdditiveExpression	j - 1		50532	1		-			
ANR	50619	Identifier	j		50532	0					
ANR	50620	PrimaryExpression	1		50532	1					
ANR	50621	ExpressionStatement	reversedString [ i ] = '\\0'	32:8:930:954	50532	4	True				
ANR	50622	AssignmentExpression	reversedString [ i ] = '\\0'		50532	0		=			
ANR	50623	ArrayIndexing	reversedString [ i ]		50532	0					
ANR	50624	Identifier	reversedString		50532	0					
ANR	50625	Identifier	i		50532	1					
ANR	50626	PrimaryExpression	'\\0'		50532	1					
ANR	50627	ExpressionStatement	free ( reversedString )	34:8:1058:1078	50532	5	True				
ANR	50628	CallExpression	free ( reversedString )		50532	0					
ANR	50629	Callee	free		50532	0					
ANR	50630	Identifier	free		50532	0					
ANR	50631	ArgumentList	reversedString		50532	1					
ANR	50632	Argument	reversedString		50532	0					
ANR	50633	Identifier	reversedString		50532	0					
ANR	50634	ReturnStatement	return reversedString ;	35:8:1089:1110	50532	6	True				
ANR	50635	Identifier	reversedString		50532	0					
ANR	50636	ElseStatement	else		50532	0					
ANR	50637	CompoundStatement		20:4:546:546	50532	0					
ANR	50638	ReturnStatement	return NULL ;	39:8:1145:1156	50532	0	True				
ANR	50639	Identifier	NULL		50532	0					
ANR	50640	ReturnType	static char *		50532	1					
ANR	50641	Identifier	helperBad		50532	2					
ANR	50642	ParameterList	char * aString		50532	3					
ANR	50643	Parameter	char * aString	18:24:570:583	50532	0	True				
ANR	50644	ParameterType	char *		50532	0					
ANR	50645	Identifier	aString		50532	1					
ANR	50646	CFGEntryNode	ENTRY		50532		True				
ANR	50647	CFGExitNode	EXIT		50532		True				
ANR	50648	Symbol	strlen		50532						
ANR	50649	Symbol	malloc		50532						
ANR	50650	Symbol	NULL		50532						
ANR	50651	Symbol	* i		50532						
ANR	50652	Symbol	aString		50532						
ANR	50653	Symbol	* j		50532						
ANR	50654	Symbol	reversedString		50532						
ANR	50655	Symbol	i		50532						
ANR	50656	Symbol	* reversedString		50532						
ANR	50657	Symbol	j		50532						
ANR	50658	Symbol	* aString		50532						
ANR	50659	Function	helperGood	43:0:1171:1728							
ANR	50660	FunctionDef	helperGood (char * aString)		50659	0					
ANR	50661	CompoundStatement		44:0:1213:1728	50659	0					
ANR	50662	IdentifierDeclStatement	size_t i = 0 ;	45:4:1220:1232	50659	0	True				
ANR	50663	IdentifierDecl	i = 0		50659	0					
ANR	50664	IdentifierDeclType	size_t		50659	0					
ANR	50665	Identifier	i		50659	1					
ANR	50666	AssignmentExpression	i = 0		50659	2		=			
ANR	50667	Identifier	i		50659	0					
ANR	50668	PrimaryExpression	0		50659	1					
ANR	50669	IdentifierDeclStatement	size_t j ;	46:4:1239:1247	50659	1	True				
ANR	50670	IdentifierDecl	j		50659	0					
ANR	50671	IdentifierDeclType	size_t		50659	0					
ANR	50672	Identifier	j		50659	1					
ANR	50673	IdentifierDeclStatement	char * reversedString = NULL ;	47:4:1254:1282	50659	2	True				
ANR	50674	IdentifierDecl	* reversedString = NULL		50659	0					
ANR	50675	IdentifierDeclType	char *		50659	0					
ANR	50676	Identifier	reversedString		50659	1					
ANR	50677	AssignmentExpression	* reversedString = NULL		50659	2		=			
ANR	50678	Identifier	NULL		50659	0					
ANR	50679	Identifier	NULL		50659	1					
ANR	50680	IfStatement	if ( aString != NULL )		50659	3					
ANR	50681	Condition	aString != NULL	48:8:1293:1307	50659	0	True				
ANR	50682	EqualityExpression	aString != NULL		50659	0		!=			
ANR	50683	Identifier	aString		50659	0					
ANR	50684	Identifier	NULL		50659	1					
ANR	50685	CompoundStatement		6:4:101:101	50659	1					
ANR	50686	ExpressionStatement	i = strlen ( aString )	50:8:1326:1345	50659	0	True				
ANR	50687	AssignmentExpression	i = strlen ( aString )		50659	0		=			
ANR	50688	Identifier	i		50659	0					
ANR	50689	CallExpression	strlen ( aString )		50659	1					
ANR	50690	Callee	strlen		50659	0					
ANR	50691	Identifier	strlen		50659	0					
ANR	50692	ArgumentList	aString		50659	1					
ANR	50693	Argument	aString		50659	0					
ANR	50694	Identifier	aString		50659	0					
ANR	50695	ExpressionStatement	reversedString = ( char * ) malloc ( i + 1 )	51:8:1356:1393	50659	1	True				
ANR	50696	AssignmentExpression	reversedString = ( char * ) malloc ( i + 1 )		50659	0		=			
ANR	50697	Identifier	reversedString		50659	0					
ANR	50698	CastExpression	( char * ) malloc ( i + 1 )		50659	1					
ANR	50699	CastTarget	char *		50659	0					
ANR	50700	CallExpression	malloc ( i + 1 )		50659	1					
ANR	50701	Callee	malloc		50659	0					
ANR	50702	Identifier	malloc		50659	0					
ANR	50703	ArgumentList	i + 1		50659	1					
ANR	50704	Argument	i + 1		50659	0					
ANR	50705	AdditiveExpression	i + 1		50659	0		+			
ANR	50706	Identifier	i		50659	0					
ANR	50707	PrimaryExpression	1		50659	1					
ANR	50708	IfStatement	if ( reversedString == NULL )		50659	2					
ANR	50709	Condition	reversedString == NULL	52:12:1408:1429	50659	0	True				
ANR	50710	EqualityExpression	reversedString == NULL		50659	0		==			
ANR	50711	Identifier	reversedString		50659	0					
ANR	50712	Identifier	NULL		50659	1					
ANR	50713	CompoundStatement		9:36:218:218	50659	1					
ANR	50714	ExpressionStatement	exit ( - 1 )	52:37:1433:1441	50659	0	True				
ANR	50715	CallExpression	exit ( - 1 )		50659	0					
ANR	50716	Callee	exit		50659	0					
ANR	50717	Identifier	exit		50659	0					
ANR	50718	ArgumentList	- 1		50659	1					
ANR	50719	Argument	- 1		50659	0					
ANR	50720	UnaryOperationExpression	- 1		50659	0					
ANR	50721	UnaryOperator	-		50659	0					
ANR	50722	PrimaryExpression	1		50659	1					
ANR	50723	ForStatement	for ( j = 0 ; j < i ; j ++ )		50659	3					
ANR	50724	ForInit	j = 0 ;	53:13:1457:1462	50659	0	True				
ANR	50725	AssignmentExpression	j = 0		50659	0		=			
ANR	50726	Identifier	j		50659	0					
ANR	50727	PrimaryExpression	0		50659	1					
ANR	50728	Condition	j < i	53:20:1464:1468	50659	1	True				
ANR	50729	RelationalExpression	j < i		50659	0		<			
ANR	50730	Identifier	j		50659	0					
ANR	50731	Identifier	i		50659	1					
ANR	50732	PostIncDecOperationExpression	j ++	53:27:1471:1473	50659	2	True				
ANR	50733	Identifier	j		50659	0					
ANR	50734	IncDec	++		50659	1					
ANR	50735	CompoundStatement		11:8:271:271	50659	3					
ANR	50736	ExpressionStatement	reversedString [ j ] = aString [ i - j - 1 ]	55:12:1500:1534	50659	0	True				
ANR	50737	AssignmentExpression	reversedString [ j ] = aString [ i - j - 1 ]		50659	0		=			
ANR	50738	ArrayIndexing	reversedString [ j ]		50659	0					
ANR	50739	Identifier	reversedString		50659	0					
ANR	50740	Identifier	j		50659	1					
ANR	50741	ArrayIndexing	aString [ i - j - 1 ]		50659	1					
ANR	50742	Identifier	aString		50659	0					
ANR	50743	AdditiveExpression	i - j - 1		50659	1		-			
ANR	50744	Identifier	i		50659	0					
ANR	50745	AdditiveExpression	j - 1		50659	1		-			
ANR	50746	Identifier	j		50659	0					
ANR	50747	PrimaryExpression	1		50659	1					
ANR	50748	ExpressionStatement	reversedString [ i ] = '\\0'	57:8:1556:1580	50659	4	True				
ANR	50749	AssignmentExpression	reversedString [ i ] = '\\0'		50659	0		=			
ANR	50750	ArrayIndexing	reversedString [ i ]		50659	0					
ANR	50751	Identifier	reversedString		50659	0					
ANR	50752	Identifier	i		50659	1					
ANR	50753	PrimaryExpression	'\\0'		50659	1					
ANR	50754	ReturnStatement	return reversedString ;	59:8:1651:1672	50659	5	True				
ANR	50755	Identifier	reversedString		50659	0					
ANR	50756	ElseStatement	else		50659	0					
ANR	50757	CompoundStatement		19:4:482:482	50659	0					
ANR	50758	ReturnStatement	return NULL ;	63:8:1707:1718	50659	0	True				
ANR	50759	Identifier	NULL		50659	0					
ANR	50760	ReturnType	static char *		50659	1					
ANR	50761	Identifier	helperGood		50659	2					
ANR	50762	ParameterList	char * aString		50659	3					
ANR	50763	Parameter	char * aString	43:25:1196:1209	50659	0	True				
ANR	50764	ParameterType	char *		50659	0					
ANR	50765	Identifier	aString		50659	1					
ANR	50766	CFGEntryNode	ENTRY		50659		True				
ANR	50767	CFGExitNode	EXIT		50659		True				
ANR	50768	Symbol	strlen		50659						
ANR	50769	Symbol	malloc		50659						
ANR	50770	Symbol	NULL		50659						
ANR	50771	Symbol	* i		50659						
ANR	50772	Symbol	aString		50659						
ANR	50773	Symbol	* j		50659						
ANR	50774	Symbol	reversedString		50659						
ANR	50775	Symbol	i		50659						
ANR	50776	Symbol	* reversedString		50659						
ANR	50777	Symbol	j		50659						
ANR	50778	Symbol	* aString		50659						
ANR	50779	Function	CWE416_Use_After_Free__return_freed_ptr_09_bad	69:0:1752:2283							
ANR	50780	FunctionDef	CWE416_Use_After_Free__return_freed_ptr_09_bad ()		50779	0					
ANR	50781	CompoundStatement		70:0:1807:2283	50779	0					
ANR	50782	IfStatement	if ( GLOBAL_CONST_TRUE )		50779	0					
ANR	50783	Condition	GLOBAL_CONST_TRUE	71:7:1817:1833	50779	0	True				
ANR	50784	Identifier	GLOBAL_CONST_TRUE		50779	0					
ANR	50785	CompoundStatement		3:4:33:33	50779	1					
ANR	50786	CompoundStatement		6:12:107:151	50779	0					
ANR	50787	IdentifierDeclStatement	"char * reversedString = helperBad ( ""BadSink"" ) ;"	75:12:1915:1959	50779	0	True				
ANR	50788	IdentifierDecl	"* reversedString = helperBad ( ""BadSink"" )"		50779	0					
ANR	50789	IdentifierDeclType	char *		50779	0					
ANR	50790	Identifier	reversedString		50779	1					
ANR	50791	AssignmentExpression	"* reversedString = helperBad ( ""BadSink"" )"		50779	2		=			
ANR	50792	Identifier	reversedString		50779	0					
ANR	50793	CallExpression	"helperBad ( ""BadSink"" )"		50779	1					
ANR	50794	Callee	helperBad		50779	0					
ANR	50795	Identifier	helperBad		50779	0					
ANR	50796	ArgumentList	"""BadSink"""		50779	1					
ANR	50797	Argument	"""BadSink"""		50779	0					
ANR	50798	PrimaryExpression	"""BadSink"""		50779	0					
ANR	50799	ExpressionStatement	printLine ( reversedString )	76:12:1974:1999	50779	1	True				
ANR	50800	CallExpression	printLine ( reversedString )		50779	0					
ANR	50801	Callee	printLine		50779	0					
ANR	50802	Identifier	printLine		50779	0					
ANR	50803	ArgumentList	reversedString		50779	1					
ANR	50804	Argument	reversedString		50779	0					
ANR	50805	Identifier	reversedString		50779	0					
ANR	50806	ReturnType	void		50779	1					
ANR	50807	Identifier	CWE416_Use_After_Free__return_freed_ptr_09_bad		50779	2					
ANR	50808	ParameterList			50779	3					
ANR	50809	CFGEntryNode	ENTRY		50779		True				
ANR	50810	CFGExitNode	EXIT		50779		True				
ANR	50811	Symbol	helperBad		50779						
ANR	50812	Symbol	reversedString		50779						
ANR	50813	Symbol	GLOBAL_CONST_TRUE		50779						
ANR	50814	Function	good1	90:0:2408:3053							
ANR	50815	FunctionDef	good1 ()		50814	0					
ANR	50816	CompoundStatement		91:0:2429:3053	50814	0					
ANR	50817	IfStatement	if ( GLOBAL_CONST_FALSE )		50814	0					
ANR	50818	Condition	GLOBAL_CONST_FALSE	92:7:2439:2456	50814	0	True				
ANR	50819	Identifier	GLOBAL_CONST_FALSE		50814	0					
ANR	50820	CompoundStatement		3:4:34:34	50814	1					
ANR	50821	ExpressionStatement	"printLine ( ""Benign, fixed string"" )"	95:8:2551:2584	50814	0	True				
ANR	50822	CallExpression	"printLine ( ""Benign, fixed string"" )"		50814	0					
ANR	50823	Callee	printLine		50814	0					
ANR	50824	Identifier	printLine		50814	0					
ANR	50825	ArgumentList	"""Benign, fixed string"""		50814	1					
ANR	50826	Argument	"""Benign, fixed string"""		50814	0					
ANR	50827	PrimaryExpression	"""Benign, fixed string"""		50814	0					
ANR	50828	ElseStatement	else		50814	0					
ANR	50829	CompoundStatement		8:4:178:178	50814	0					
ANR	50830	CompoundStatement		11:12:253:299	50814	0					
ANR	50831	IdentifierDeclStatement	"char * reversedString = helperGood ( ""GoodSink"" ) ;"	101:12:2683:2729	50814	0	True				
ANR	50832	IdentifierDecl	"* reversedString = helperGood ( ""GoodSink"" )"		50814	0					
ANR	50833	IdentifierDeclType	char *		50814	0					
ANR	50834	Identifier	reversedString		50814	1					
ANR	50835	AssignmentExpression	"* reversedString = helperGood ( ""GoodSink"" )"		50814	2		=			
ANR	50836	Identifier	reversedString		50814	0					
ANR	50837	CallExpression	"helperGood ( ""GoodSink"" )"		50814	1					
ANR	50838	Callee	helperGood		50814	0					
ANR	50839	Identifier	helperGood		50814	0					
ANR	50840	ArgumentList	"""GoodSink"""		50814	1					
ANR	50841	Argument	"""GoodSink"""		50814	0					
ANR	50842	PrimaryExpression	"""GoodSink"""		50814	0					
ANR	50843	ExpressionStatement	printLine ( reversedString )	102:12:2744:2769	50814	1	True				
ANR	50844	CallExpression	printLine ( reversedString )		50814	0					
ANR	50845	Callee	printLine		50814	0					
ANR	50846	Identifier	printLine		50814	0					
ANR	50847	ArgumentList	reversedString		50814	1					
ANR	50848	Argument	reversedString		50814	0					
ANR	50849	Identifier	reversedString		50814	0					
ANR	50850	ReturnType	static void		50814	1					
ANR	50851	Identifier	good1		50814	2					
ANR	50852	ParameterList			50814	3					
ANR	50853	CFGEntryNode	ENTRY		50814		True				
ANR	50854	CFGExitNode	EXIT		50814		True				
ANR	50855	Symbol	GLOBAL_CONST_FALSE		50814						
ANR	50856	Symbol	reversedString		50814						
ANR	50857	Symbol	helperGood		50814						
ANR	50858	Function	good2	112:0:3113:3613							
ANR	50859	FunctionDef	good2 ()		50858	0					
ANR	50860	CompoundStatement		113:0:3134:3613	50858	0					
ANR	50861	IfStatement	if ( GLOBAL_CONST_TRUE )		50858	0					
ANR	50862	Condition	GLOBAL_CONST_TRUE	114:7:3144:3160	50858	0	True				
ANR	50863	Identifier	GLOBAL_CONST_TRUE		50858	0					
ANR	50864	CompoundStatement		3:4:33:33	50858	1					
ANR	50865	CompoundStatement		6:12:108:154	50858	0					
ANR	50866	IdentifierDeclStatement	"char * reversedString = helperGood ( ""GoodSink"" ) ;"	118:12:3243:3289	50858	0	True				
ANR	50867	IdentifierDecl	"* reversedString = helperGood ( ""GoodSink"" )"		50858	0					
ANR	50868	IdentifierDeclType	char *		50858	0					
ANR	50869	Identifier	reversedString		50858	1					
ANR	50870	AssignmentExpression	"* reversedString = helperGood ( ""GoodSink"" )"		50858	2		=			
ANR	50871	Identifier	reversedString		50858	0					
ANR	50872	CallExpression	"helperGood ( ""GoodSink"" )"		50858	1					
ANR	50873	Callee	helperGood		50858	0					
ANR	50874	Identifier	helperGood		50858	0					
ANR	50875	ArgumentList	"""GoodSink"""		50858	1					
ANR	50876	Argument	"""GoodSink"""		50858	0					
ANR	50877	PrimaryExpression	"""GoodSink"""		50858	0					
ANR	50878	ExpressionStatement	printLine ( reversedString )	119:12:3304:3329	50858	1	True				
ANR	50879	CallExpression	printLine ( reversedString )		50858	0					
ANR	50880	Callee	printLine		50858	0					
ANR	50881	Identifier	printLine		50858	0					
ANR	50882	ArgumentList	reversedString		50858	1					
ANR	50883	Argument	reversedString		50858	0					
ANR	50884	Identifier	reversedString		50858	0					
ANR	50885	ReturnType	static void		50858	1					
ANR	50886	Identifier	good2		50858	2					
ANR	50887	ParameterList			50858	3					
ANR	50888	CFGEntryNode	ENTRY		50858		True				
ANR	50889	CFGExitNode	EXIT		50858		True				
ANR	50890	Symbol	reversedString		50858						
ANR	50891	Symbol	GLOBAL_CONST_TRUE		50858						
ANR	50892	Symbol	helperGood		50858						
ANR	50893	Function	CWE416_Use_After_Free__return_freed_ptr_09_good	128:0:3618:3705							
ANR	50894	FunctionDef	CWE416_Use_After_Free__return_freed_ptr_09_good ()		50893	0					
ANR	50895	CompoundStatement		129:0:3674:3705	50893	0					
ANR	50896	ExpressionStatement	good1 ( )	130:4:3681:3688	50893	0	True				
ANR	50897	CallExpression	good1 ( )		50893	0					
ANR	50898	Callee	good1		50893	0					
ANR	50899	Identifier	good1		50893	0					
ANR	50900	ArgumentList			50893	1					
ANR	50901	ExpressionStatement	good2 ( )	131:4:3695:3702	50893	1	True				
ANR	50902	CallExpression	good2 ( )		50893	0					
ANR	50903	Callee	good2		50893	0					
ANR	50904	Identifier	good2		50893	0					
ANR	50905	ArgumentList			50893	1					
ANR	50906	ReturnType	void		50893	1					
ANR	50907	Identifier	CWE416_Use_After_Free__return_freed_ptr_09_good		50893	2					
ANR	50908	ParameterList			50893	3					
ANR	50909	CFGEntryNode	ENTRY		50893		True				
ANR	50910	CFGExitNode	EXIT		50893		True				
ANR	50911	Function	main	143:0:4052:4501							
ANR	50912	FunctionDef	"main (int argc , char * argv [ ])"		50911	0					
ANR	50913	CompoundStatement		144:0:4087:4501	50911	0					
ANR	50914	ExpressionStatement	srand ( ( unsigned ) time ( NULL ) )	146:4:4121:4150	50911	0	True				
ANR	50915	CallExpression	srand ( ( unsigned ) time ( NULL ) )		50911	0					
ANR	50916	Callee	srand		50911	0					
ANR	50917	Identifier	srand		50911	0					
ANR	50918	ArgumentList	( unsigned ) time ( NULL )		50911	1					
ANR	50919	Argument	( unsigned ) time ( NULL )		50911	0					
ANR	50920	CastExpression	( unsigned ) time ( NULL )		50911	0					
ANR	50921	CastTarget	unsigned		50911	0					
ANR	50922	CallExpression	time ( NULL )		50911	1					
ANR	50923	Callee	time		50911	0					
ANR	50924	Identifier	time		50911	0					
ANR	50925	ArgumentList	NULL		50911	1					
ANR	50926	Argument	NULL		50911	0					
ANR	50927	Identifier	NULL		50911	0					
ANR	50928	ExpressionStatement	"printLine ( ""Calling good()..."" )"	148:4:4175:4205	50911	1	True				
ANR	50929	CallExpression	"printLine ( ""Calling good()..."" )"		50911	0					
ANR	50930	Callee	printLine		50911	0					
ANR	50931	Identifier	printLine		50911	0					
ANR	50932	ArgumentList	"""Calling good()..."""		50911	1					
ANR	50933	Argument	"""Calling good()..."""		50911	0					
ANR	50934	PrimaryExpression	"""Calling good()..."""		50911	0					
ANR	50935	ExpressionStatement	CWE416_Use_After_Free__return_freed_ptr_09_good ( )	149:4:4212:4261	50911	2	True				
ANR	50936	CallExpression	CWE416_Use_After_Free__return_freed_ptr_09_good ( )		50911	0					
ANR	50937	Callee	CWE416_Use_After_Free__return_freed_ptr_09_good		50911	0					
ANR	50938	Identifier	CWE416_Use_After_Free__return_freed_ptr_09_good		50911	0					
ANR	50939	ArgumentList			50911	1					
ANR	50940	ExpressionStatement	"printLine ( ""Finished good()"" )"	150:4:4268:4296	50911	3	True				
ANR	50941	CallExpression	"printLine ( ""Finished good()"" )"		50911	0					
ANR	50942	Callee	printLine		50911	0					
ANR	50943	Identifier	printLine		50911	0					
ANR	50944	ArgumentList	"""Finished good()"""		50911	1					
ANR	50945	Argument	"""Finished good()"""		50911	0					
ANR	50946	PrimaryExpression	"""Finished good()"""		50911	0					
ANR	50947	ExpressionStatement	"printLine ( ""Calling bad()..."" )"	153:4:4343:4372	50911	4	True				
ANR	50948	CallExpression	"printLine ( ""Calling bad()..."" )"		50911	0					
ANR	50949	Callee	printLine		50911	0					
ANR	50950	Identifier	printLine		50911	0					
ANR	50951	ArgumentList	"""Calling bad()..."""		50911	1					
ANR	50952	Argument	"""Calling bad()..."""		50911	0					
ANR	50953	PrimaryExpression	"""Calling bad()..."""		50911	0					
ANR	50954	ExpressionStatement	CWE416_Use_After_Free__return_freed_ptr_09_bad ( )	154:4:4379:4427	50911	5	True				
ANR	50955	CallExpression	CWE416_Use_After_Free__return_freed_ptr_09_bad ( )		50911	0					
ANR	50956	Callee	CWE416_Use_After_Free__return_freed_ptr_09_bad		50911	0					
ANR	50957	Identifier	CWE416_Use_After_Free__return_freed_ptr_09_bad		50911	0					
ANR	50958	ArgumentList			50911	1					
ANR	50959	ExpressionStatement	"printLine ( ""Finished bad()"" )"	155:4:4434:4461	50911	6	True				
ANR	50960	CallExpression	"printLine ( ""Finished bad()"" )"		50911	0					
ANR	50961	Callee	printLine		50911	0					
ANR	50962	Identifier	printLine		50911	0					
ANR	50963	ArgumentList	"""Finished bad()"""		50911	1					
ANR	50964	Argument	"""Finished bad()"""		50911	0					
ANR	50965	PrimaryExpression	"""Finished bad()"""		50911	0					
ANR	50966	ReturnStatement	return 0 ;	157:4:4490:4498	50911	7	True				
ANR	50967	PrimaryExpression	0		50911	0					
ANR	50968	ReturnType	int		50911	1					
ANR	50969	Identifier	main		50911	2					
ANR	50970	ParameterList	"int argc , char * argv [ ]"		50911	3					
ANR	50971	Parameter	int argc	143:9:4061:4068	50911	0	True				
ANR	50972	ParameterType	int		50911	0					
ANR	50973	Identifier	argc		50911	1					
ANR	50974	Parameter	char * argv [ ]	143:19:4071:4083	50911	1	True				
ANR	50975	ParameterType	char * [ ]		50911	0					
ANR	50976	Identifier	argv		50911	1					
ANR	50977	CFGEntryNode	ENTRY		50911		True				
ANR	50978	CFGExitNode	EXIT		50911		True				
ANR	50979	Symbol	argc		50911						
ANR	50980	Symbol	NULL		50911						
ANR	50981	Symbol	time		50911						
ANR	50982	Symbol	argv		50911						
