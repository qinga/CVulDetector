command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	52354	File	/develop/joernDwkProcess/joern-dev/./output/data/CWE119/source-code/119-0-c/testcases/000/240/395/CWE416_Use_After_Free__return_freed_ptr_13.c								
ANR	52355	Function	helperBad	18:0:551:1171							
ANR	52356	FunctionDef	helperBad (char * aString)		52355	0					
ANR	52357	CompoundStatement		19:0:592:1171	52355	0					
ANR	52358	IdentifierDeclStatement	size_t i = 0 ;	20:4:599:611	52355	0	True				
ANR	52359	IdentifierDecl	i = 0		52355	0					
ANR	52360	IdentifierDeclType	size_t		52355	0					
ANR	52361	Identifier	i		52355	1					
ANR	52362	AssignmentExpression	i = 0		52355	2		=			
ANR	52363	Identifier	i		52355	0					
ANR	52364	PrimaryExpression	0		52355	1					
ANR	52365	IdentifierDeclStatement	size_t j ;	21:4:618:626	52355	1	True				
ANR	52366	IdentifierDecl	j		52355	0					
ANR	52367	IdentifierDeclType	size_t		52355	0					
ANR	52368	Identifier	j		52355	1					
ANR	52369	IdentifierDeclStatement	char * reversedString = NULL ;	22:4:633:661	52355	2	True				
ANR	52370	IdentifierDecl	* reversedString = NULL		52355	0					
ANR	52371	IdentifierDeclType	char *		52355	0					
ANR	52372	Identifier	reversedString		52355	1					
ANR	52373	AssignmentExpression	* reversedString = NULL		52355	2		=			
ANR	52374	Identifier	NULL		52355	0					
ANR	52375	Identifier	NULL		52355	1					
ANR	52376	IfStatement	if ( aString != NULL )		52355	3					
ANR	52377	Condition	aString != NULL	23:8:672:686	52355	0	True				
ANR	52378	EqualityExpression	aString != NULL		52355	0		!=			
ANR	52379	Identifier	aString		52355	0					
ANR	52380	Identifier	NULL		52355	1					
ANR	52381	CompoundStatement		6:4:101:101	52355	1					
ANR	52382	ExpressionStatement	i = strlen ( aString )	25:8:705:724	52355	0	True				
ANR	52383	AssignmentExpression	i = strlen ( aString )		52355	0		=			
ANR	52384	Identifier	i		52355	0					
ANR	52385	CallExpression	strlen ( aString )		52355	1					
ANR	52386	Callee	strlen		52355	0					
ANR	52387	Identifier	strlen		52355	0					
ANR	52388	ArgumentList	aString		52355	1					
ANR	52389	Argument	aString		52355	0					
ANR	52390	Identifier	aString		52355	0					
ANR	52391	ExpressionStatement	reversedString = ( char * ) malloc ( i + 1 )	26:8:735:772	52355	1	True				
ANR	52392	AssignmentExpression	reversedString = ( char * ) malloc ( i + 1 )		52355	0		=			
ANR	52393	Identifier	reversedString		52355	0					
ANR	52394	CastExpression	( char * ) malloc ( i + 1 )		52355	1					
ANR	52395	CastTarget	char *		52355	0					
ANR	52396	CallExpression	malloc ( i + 1 )		52355	1					
ANR	52397	Callee	malloc		52355	0					
ANR	52398	Identifier	malloc		52355	0					
ANR	52399	ArgumentList	i + 1		52355	1					
ANR	52400	Argument	i + 1		52355	0					
ANR	52401	AdditiveExpression	i + 1		52355	0		+			
ANR	52402	Identifier	i		52355	0					
ANR	52403	PrimaryExpression	1		52355	1					
ANR	52404	IfStatement	if ( reversedString == NULL )		52355	2					
ANR	52405	Condition	reversedString == NULL	27:12:787:808	52355	0	True				
ANR	52406	EqualityExpression	reversedString == NULL		52355	0		==			
ANR	52407	Identifier	reversedString		52355	0					
ANR	52408	Identifier	NULL		52355	1					
ANR	52409	CompoundStatement		9:36:218:218	52355	1					
ANR	52410	ExpressionStatement	exit ( - 1 )	27:37:812:820	52355	0	True				
ANR	52411	CallExpression	exit ( - 1 )		52355	0					
ANR	52412	Callee	exit		52355	0					
ANR	52413	Identifier	exit		52355	0					
ANR	52414	ArgumentList	- 1		52355	1					
ANR	52415	Argument	- 1		52355	0					
ANR	52416	UnaryOperationExpression	- 1		52355	0					
ANR	52417	UnaryOperator	-		52355	0					
ANR	52418	PrimaryExpression	1		52355	1					
ANR	52419	ForStatement	for ( j = 0 ; j < i ; j ++ )		52355	3					
ANR	52420	ForInit	j = 0 ;	28:13:836:841	52355	0	True				
ANR	52421	AssignmentExpression	j = 0		52355	0		=			
ANR	52422	Identifier	j		52355	0					
ANR	52423	PrimaryExpression	0		52355	1					
ANR	52424	Condition	j < i	28:20:843:847	52355	1	True				
ANR	52425	RelationalExpression	j < i		52355	0		<			
ANR	52426	Identifier	j		52355	0					
ANR	52427	Identifier	i		52355	1					
ANR	52428	PostIncDecOperationExpression	j ++	28:27:850:852	52355	2	True				
ANR	52429	Identifier	j		52355	0					
ANR	52430	IncDec	++		52355	1					
ANR	52431	CompoundStatement		11:8:271:271	52355	3					
ANR	52432	ExpressionStatement	reversedString [ j ] = aString [ i - j - 1 ]	30:12:879:913	52355	0	True				
ANR	52433	AssignmentExpression	reversedString [ j ] = aString [ i - j - 1 ]		52355	0		=			
ANR	52434	ArrayIndexing	reversedString [ j ]		52355	0					
ANR	52435	Identifier	reversedString		52355	0					
ANR	52436	Identifier	j		52355	1					
ANR	52437	ArrayIndexing	aString [ i - j - 1 ]		52355	1					
ANR	52438	Identifier	aString		52355	0					
ANR	52439	AdditiveExpression	i - j - 1		52355	1		-			
ANR	52440	Identifier	i		52355	0					
ANR	52441	AdditiveExpression	j - 1		52355	1		-			
ANR	52442	Identifier	j		52355	0					
ANR	52443	PrimaryExpression	1		52355	1					
ANR	52444	ExpressionStatement	reversedString [ i ] = '\\0'	32:8:935:959	52355	4	True				
ANR	52445	AssignmentExpression	reversedString [ i ] = '\\0'		52355	0		=			
ANR	52446	ArrayIndexing	reversedString [ i ]		52355	0					
ANR	52447	Identifier	reversedString		52355	0					
ANR	52448	Identifier	i		52355	1					
ANR	52449	PrimaryExpression	'\\0'		52355	1					
ANR	52450	ExpressionStatement	free ( reversedString )	34:8:1063:1083	52355	5	True				
ANR	52451	CallExpression	free ( reversedString )		52355	0					
ANR	52452	Callee	free		52355	0					
ANR	52453	Identifier	free		52355	0					
ANR	52454	ArgumentList	reversedString		52355	1					
ANR	52455	Argument	reversedString		52355	0					
ANR	52456	Identifier	reversedString		52355	0					
ANR	52457	ReturnStatement	return reversedString ;	35:8:1094:1115	52355	6	True				
ANR	52458	Identifier	reversedString		52355	0					
ANR	52459	ElseStatement	else		52355	0					
ANR	52460	CompoundStatement		20:4:546:546	52355	0					
ANR	52461	ReturnStatement	return NULL ;	39:8:1150:1161	52355	0	True				
ANR	52462	Identifier	NULL		52355	0					
ANR	52463	ReturnType	static char *		52355	1					
ANR	52464	Identifier	helperBad		52355	2					
ANR	52465	ParameterList	char * aString		52355	3					
ANR	52466	Parameter	char * aString	18:24:575:588	52355	0	True				
ANR	52467	ParameterType	char *		52355	0					
ANR	52468	Identifier	aString		52355	1					
ANR	52469	CFGEntryNode	ENTRY		52355		True				
ANR	52470	CFGExitNode	EXIT		52355		True				
ANR	52471	Symbol	strlen		52355						
ANR	52472	Symbol	malloc		52355						
ANR	52473	Symbol	NULL		52355						
ANR	52474	Symbol	* i		52355						
ANR	52475	Symbol	aString		52355						
ANR	52476	Symbol	* j		52355						
ANR	52477	Symbol	reversedString		52355						
ANR	52478	Symbol	i		52355						
ANR	52479	Symbol	* reversedString		52355						
ANR	52480	Symbol	j		52355						
ANR	52481	Symbol	* aString		52355						
ANR	52482	Function	helperGood	43:0:1176:1733							
ANR	52483	FunctionDef	helperGood (char * aString)		52482	0					
ANR	52484	CompoundStatement		44:0:1218:1733	52482	0					
ANR	52485	IdentifierDeclStatement	size_t i = 0 ;	45:4:1225:1237	52482	0	True				
ANR	52486	IdentifierDecl	i = 0		52482	0					
ANR	52487	IdentifierDeclType	size_t		52482	0					
ANR	52488	Identifier	i		52482	1					
ANR	52489	AssignmentExpression	i = 0		52482	2		=			
ANR	52490	Identifier	i		52482	0					
ANR	52491	PrimaryExpression	0		52482	1					
ANR	52492	IdentifierDeclStatement	size_t j ;	46:4:1244:1252	52482	1	True				
ANR	52493	IdentifierDecl	j		52482	0					
ANR	52494	IdentifierDeclType	size_t		52482	0					
ANR	52495	Identifier	j		52482	1					
ANR	52496	IdentifierDeclStatement	char * reversedString = NULL ;	47:4:1259:1287	52482	2	True				
ANR	52497	IdentifierDecl	* reversedString = NULL		52482	0					
ANR	52498	IdentifierDeclType	char *		52482	0					
ANR	52499	Identifier	reversedString		52482	1					
ANR	52500	AssignmentExpression	* reversedString = NULL		52482	2		=			
ANR	52501	Identifier	NULL		52482	0					
ANR	52502	Identifier	NULL		52482	1					
ANR	52503	IfStatement	if ( aString != NULL )		52482	3					
ANR	52504	Condition	aString != NULL	48:8:1298:1312	52482	0	True				
ANR	52505	EqualityExpression	aString != NULL		52482	0		!=			
ANR	52506	Identifier	aString		52482	0					
ANR	52507	Identifier	NULL		52482	1					
ANR	52508	CompoundStatement		6:4:101:101	52482	1					
ANR	52509	ExpressionStatement	i = strlen ( aString )	50:8:1331:1350	52482	0	True				
ANR	52510	AssignmentExpression	i = strlen ( aString )		52482	0		=			
ANR	52511	Identifier	i		52482	0					
ANR	52512	CallExpression	strlen ( aString )		52482	1					
ANR	52513	Callee	strlen		52482	0					
ANR	52514	Identifier	strlen		52482	0					
ANR	52515	ArgumentList	aString		52482	1					
ANR	52516	Argument	aString		52482	0					
ANR	52517	Identifier	aString		52482	0					
ANR	52518	ExpressionStatement	reversedString = ( char * ) malloc ( i + 1 )	51:8:1361:1398	52482	1	True				
ANR	52519	AssignmentExpression	reversedString = ( char * ) malloc ( i + 1 )		52482	0		=			
ANR	52520	Identifier	reversedString		52482	0					
ANR	52521	CastExpression	( char * ) malloc ( i + 1 )		52482	1					
ANR	52522	CastTarget	char *		52482	0					
ANR	52523	CallExpression	malloc ( i + 1 )		52482	1					
ANR	52524	Callee	malloc		52482	0					
ANR	52525	Identifier	malloc		52482	0					
ANR	52526	ArgumentList	i + 1		52482	1					
ANR	52527	Argument	i + 1		52482	0					
ANR	52528	AdditiveExpression	i + 1		52482	0		+			
ANR	52529	Identifier	i		52482	0					
ANR	52530	PrimaryExpression	1		52482	1					
ANR	52531	IfStatement	if ( reversedString == NULL )		52482	2					
ANR	52532	Condition	reversedString == NULL	52:12:1413:1434	52482	0	True				
ANR	52533	EqualityExpression	reversedString == NULL		52482	0		==			
ANR	52534	Identifier	reversedString		52482	0					
ANR	52535	Identifier	NULL		52482	1					
ANR	52536	CompoundStatement		9:36:218:218	52482	1					
ANR	52537	ExpressionStatement	exit ( - 1 )	52:37:1438:1446	52482	0	True				
ANR	52538	CallExpression	exit ( - 1 )		52482	0					
ANR	52539	Callee	exit		52482	0					
ANR	52540	Identifier	exit		52482	0					
ANR	52541	ArgumentList	- 1		52482	1					
ANR	52542	Argument	- 1		52482	0					
ANR	52543	UnaryOperationExpression	- 1		52482	0					
ANR	52544	UnaryOperator	-		52482	0					
ANR	52545	PrimaryExpression	1		52482	1					
ANR	52546	ForStatement	for ( j = 0 ; j < i ; j ++ )		52482	3					
ANR	52547	ForInit	j = 0 ;	53:13:1462:1467	52482	0	True				
ANR	52548	AssignmentExpression	j = 0		52482	0		=			
ANR	52549	Identifier	j		52482	0					
ANR	52550	PrimaryExpression	0		52482	1					
ANR	52551	Condition	j < i	53:20:1469:1473	52482	1	True				
ANR	52552	RelationalExpression	j < i		52482	0		<			
ANR	52553	Identifier	j		52482	0					
ANR	52554	Identifier	i		52482	1					
ANR	52555	PostIncDecOperationExpression	j ++	53:27:1476:1478	52482	2	True				
ANR	52556	Identifier	j		52482	0					
ANR	52557	IncDec	++		52482	1					
ANR	52558	CompoundStatement		11:8:271:271	52482	3					
ANR	52559	ExpressionStatement	reversedString [ j ] = aString [ i - j - 1 ]	55:12:1505:1539	52482	0	True				
ANR	52560	AssignmentExpression	reversedString [ j ] = aString [ i - j - 1 ]		52482	0		=			
ANR	52561	ArrayIndexing	reversedString [ j ]		52482	0					
ANR	52562	Identifier	reversedString		52482	0					
ANR	52563	Identifier	j		52482	1					
ANR	52564	ArrayIndexing	aString [ i - j - 1 ]		52482	1					
ANR	52565	Identifier	aString		52482	0					
ANR	52566	AdditiveExpression	i - j - 1		52482	1		-			
ANR	52567	Identifier	i		52482	0					
ANR	52568	AdditiveExpression	j - 1		52482	1		-			
ANR	52569	Identifier	j		52482	0					
ANR	52570	PrimaryExpression	1		52482	1					
ANR	52571	ExpressionStatement	reversedString [ i ] = '\\0'	57:8:1561:1585	52482	4	True				
ANR	52572	AssignmentExpression	reversedString [ i ] = '\\0'		52482	0		=			
ANR	52573	ArrayIndexing	reversedString [ i ]		52482	0					
ANR	52574	Identifier	reversedString		52482	0					
ANR	52575	Identifier	i		52482	1					
ANR	52576	PrimaryExpression	'\\0'		52482	1					
ANR	52577	ReturnStatement	return reversedString ;	59:8:1656:1677	52482	5	True				
ANR	52578	Identifier	reversedString		52482	0					
ANR	52579	ElseStatement	else		52482	0					
ANR	52580	CompoundStatement		19:4:482:482	52482	0					
ANR	52581	ReturnStatement	return NULL ;	63:8:1712:1723	52482	0	True				
ANR	52582	Identifier	NULL		52482	0					
ANR	52583	ReturnType	static char *		52482	1					
ANR	52584	Identifier	helperGood		52482	2					
ANR	52585	ParameterList	char * aString		52482	3					
ANR	52586	Parameter	char * aString	43:25:1201:1214	52482	0	True				
ANR	52587	ParameterType	char *		52482	0					
ANR	52588	Identifier	aString		52482	1					
ANR	52589	CFGEntryNode	ENTRY		52482		True				
ANR	52590	CFGExitNode	EXIT		52482		True				
ANR	52591	Symbol	strlen		52482						
ANR	52592	Symbol	malloc		52482						
ANR	52593	Symbol	NULL		52482						
ANR	52594	Symbol	* i		52482						
ANR	52595	Symbol	aString		52482						
ANR	52596	Symbol	* j		52482						
ANR	52597	Symbol	reversedString		52482						
ANR	52598	Symbol	i		52482						
ANR	52599	Symbol	* reversedString		52482						
ANR	52600	Symbol	j		52482						
ANR	52601	Symbol	* aString		52482						
ANR	52602	Function	CWE416_Use_After_Free__return_freed_ptr_13_bad	69:0:1757:2291							
ANR	52603	FunctionDef	CWE416_Use_After_Free__return_freed_ptr_13_bad ()		52602	0					
ANR	52604	CompoundStatement		70:0:1812:2291	52602	0					
ANR	52605	IfStatement	if ( GLOBAL_CONST_FIVE == 5 )		52602	0					
ANR	52606	Condition	GLOBAL_CONST_FIVE == 5	71:7:1822:1841	52602	0	True				
ANR	52607	EqualityExpression	GLOBAL_CONST_FIVE == 5		52602	0		==			
ANR	52608	Identifier	GLOBAL_CONST_FIVE		52602	0					
ANR	52609	PrimaryExpression	5		52602	1					
ANR	52610	CompoundStatement		3:4:36:36	52602	1					
ANR	52611	CompoundStatement		6:12:110:154	52602	0					
ANR	52612	IdentifierDeclStatement	"char * reversedString = helperBad ( ""BadSink"" ) ;"	75:12:1923:1967	52602	0	True				
ANR	52613	IdentifierDecl	"* reversedString = helperBad ( ""BadSink"" )"		52602	0					
ANR	52614	IdentifierDeclType	char *		52602	0					
ANR	52615	Identifier	reversedString		52602	1					
ANR	52616	AssignmentExpression	"* reversedString = helperBad ( ""BadSink"" )"		52602	2		=			
ANR	52617	Identifier	reversedString		52602	0					
ANR	52618	CallExpression	"helperBad ( ""BadSink"" )"		52602	1					
ANR	52619	Callee	helperBad		52602	0					
ANR	52620	Identifier	helperBad		52602	0					
ANR	52621	ArgumentList	"""BadSink"""		52602	1					
ANR	52622	Argument	"""BadSink"""		52602	0					
ANR	52623	PrimaryExpression	"""BadSink"""		52602	0					
ANR	52624	ExpressionStatement	printLine ( reversedString )	76:12:1982:2007	52602	1	True				
ANR	52625	CallExpression	printLine ( reversedString )		52602	0					
ANR	52626	Callee	printLine		52602	0					
ANR	52627	Identifier	printLine		52602	0					
ANR	52628	ArgumentList	reversedString		52602	1					
ANR	52629	Argument	reversedString		52602	0					
ANR	52630	Identifier	reversedString		52602	0					
ANR	52631	ReturnType	void		52602	1					
ANR	52632	Identifier	CWE416_Use_After_Free__return_freed_ptr_13_bad		52602	2					
ANR	52633	ParameterList			52602	3					
ANR	52634	CFGEntryNode	ENTRY		52602		True				
ANR	52635	CFGExitNode	EXIT		52602		True				
ANR	52636	Symbol	helperBad		52602						
ANR	52637	Symbol	GLOBAL_CONST_FIVE		52602						
ANR	52638	Symbol	reversedString		52602						
ANR	52639	Function	good1	90:0:2421:3068							
ANR	52640	FunctionDef	good1 ()		52639	0					
ANR	52641	CompoundStatement		91:0:2442:3068	52639	0					
ANR	52642	IfStatement	if ( GLOBAL_CONST_FIVE != 5 )		52639	0					
ANR	52643	Condition	GLOBAL_CONST_FIVE != 5	92:7:2452:2471	52639	0	True				
ANR	52644	EqualityExpression	GLOBAL_CONST_FIVE != 5		52639	0		!=			
ANR	52645	Identifier	GLOBAL_CONST_FIVE		52639	0					
ANR	52646	PrimaryExpression	5		52639	1					
ANR	52647	CompoundStatement		3:4:36:36	52639	1					
ANR	52648	ExpressionStatement	"printLine ( ""Benign, fixed string"" )"	95:8:2566:2599	52639	0	True				
ANR	52649	CallExpression	"printLine ( ""Benign, fixed string"" )"		52639	0					
ANR	52650	Callee	printLine		52639	0					
ANR	52651	Identifier	printLine		52639	0					
ANR	52652	ArgumentList	"""Benign, fixed string"""		52639	1					
ANR	52653	Argument	"""Benign, fixed string"""		52639	0					
ANR	52654	PrimaryExpression	"""Benign, fixed string"""		52639	0					
ANR	52655	ElseStatement	else		52639	0					
ANR	52656	CompoundStatement		8:4:180:180	52639	0					
ANR	52657	CompoundStatement		11:12:255:301	52639	0					
ANR	52658	IdentifierDeclStatement	"char * reversedString = helperGood ( ""GoodSink"" ) ;"	101:12:2698:2744	52639	0	True				
ANR	52659	IdentifierDecl	"* reversedString = helperGood ( ""GoodSink"" )"		52639	0					
ANR	52660	IdentifierDeclType	char *		52639	0					
ANR	52661	Identifier	reversedString		52639	1					
ANR	52662	AssignmentExpression	"* reversedString = helperGood ( ""GoodSink"" )"		52639	2		=			
ANR	52663	Identifier	reversedString		52639	0					
ANR	52664	CallExpression	"helperGood ( ""GoodSink"" )"		52639	1					
ANR	52665	Callee	helperGood		52639	0					
ANR	52666	Identifier	helperGood		52639	0					
ANR	52667	ArgumentList	"""GoodSink"""		52639	1					
ANR	52668	Argument	"""GoodSink"""		52639	0					
ANR	52669	PrimaryExpression	"""GoodSink"""		52639	0					
ANR	52670	ExpressionStatement	printLine ( reversedString )	102:12:2759:2784	52639	1	True				
ANR	52671	CallExpression	printLine ( reversedString )		52639	0					
ANR	52672	Callee	printLine		52639	0					
ANR	52673	Identifier	printLine		52639	0					
ANR	52674	ArgumentList	reversedString		52639	1					
ANR	52675	Argument	reversedString		52639	0					
ANR	52676	Identifier	reversedString		52639	0					
ANR	52677	ReturnType	static void		52639	1					
ANR	52678	Identifier	good1		52639	2					
ANR	52679	ParameterList			52639	3					
ANR	52680	CFGEntryNode	ENTRY		52639		True				
ANR	52681	CFGExitNode	EXIT		52639		True				
ANR	52682	Symbol	GLOBAL_CONST_FIVE		52639						
ANR	52683	Symbol	reversedString		52639						
ANR	52684	Symbol	helperGood		52639						
ANR	52685	Function	good2	112:0:3128:3631							
ANR	52686	FunctionDef	good2 ()		52685	0					
ANR	52687	CompoundStatement		113:0:3149:3631	52685	0					
ANR	52688	IfStatement	if ( GLOBAL_CONST_FIVE == 5 )		52685	0					
ANR	52689	Condition	GLOBAL_CONST_FIVE == 5	114:7:3159:3178	52685	0	True				
ANR	52690	EqualityExpression	GLOBAL_CONST_FIVE == 5		52685	0		==			
ANR	52691	Identifier	GLOBAL_CONST_FIVE		52685	0					
ANR	52692	PrimaryExpression	5		52685	1					
ANR	52693	CompoundStatement		3:4:36:36	52685	1					
ANR	52694	CompoundStatement		6:12:111:157	52685	0					
ANR	52695	IdentifierDeclStatement	"char * reversedString = helperGood ( ""GoodSink"" ) ;"	118:12:3261:3307	52685	0	True				
ANR	52696	IdentifierDecl	"* reversedString = helperGood ( ""GoodSink"" )"		52685	0					
ANR	52697	IdentifierDeclType	char *		52685	0					
ANR	52698	Identifier	reversedString		52685	1					
ANR	52699	AssignmentExpression	"* reversedString = helperGood ( ""GoodSink"" )"		52685	2		=			
ANR	52700	Identifier	reversedString		52685	0					
ANR	52701	CallExpression	"helperGood ( ""GoodSink"" )"		52685	1					
ANR	52702	Callee	helperGood		52685	0					
ANR	52703	Identifier	helperGood		52685	0					
ANR	52704	ArgumentList	"""GoodSink"""		52685	1					
ANR	52705	Argument	"""GoodSink"""		52685	0					
ANR	52706	PrimaryExpression	"""GoodSink"""		52685	0					
ANR	52707	ExpressionStatement	printLine ( reversedString )	119:12:3322:3347	52685	1	True				
ANR	52708	CallExpression	printLine ( reversedString )		52685	0					
ANR	52709	Callee	printLine		52685	0					
ANR	52710	Identifier	printLine		52685	0					
ANR	52711	ArgumentList	reversedString		52685	1					
ANR	52712	Argument	reversedString		52685	0					
ANR	52713	Identifier	reversedString		52685	0					
ANR	52714	ReturnType	static void		52685	1					
ANR	52715	Identifier	good2		52685	2					
ANR	52716	ParameterList			52685	3					
ANR	52717	CFGEntryNode	ENTRY		52685		True				
ANR	52718	CFGExitNode	EXIT		52685		True				
ANR	52719	Symbol	GLOBAL_CONST_FIVE		52685						
ANR	52720	Symbol	reversedString		52685						
ANR	52721	Symbol	helperGood		52685						
ANR	52722	Function	CWE416_Use_After_Free__return_freed_ptr_13_good	128:0:3636:3723							
ANR	52723	FunctionDef	CWE416_Use_After_Free__return_freed_ptr_13_good ()		52722	0					
ANR	52724	CompoundStatement		129:0:3692:3723	52722	0					
ANR	52725	ExpressionStatement	good1 ( )	130:4:3699:3706	52722	0	True				
ANR	52726	CallExpression	good1 ( )		52722	0					
ANR	52727	Callee	good1		52722	0					
ANR	52728	Identifier	good1		52722	0					
ANR	52729	ArgumentList			52722	1					
ANR	52730	ExpressionStatement	good2 ( )	131:4:3713:3720	52722	1	True				
ANR	52731	CallExpression	good2 ( )		52722	0					
ANR	52732	Callee	good2		52722	0					
ANR	52733	Identifier	good2		52722	0					
ANR	52734	ArgumentList			52722	1					
ANR	52735	ReturnType	void		52722	1					
ANR	52736	Identifier	CWE416_Use_After_Free__return_freed_ptr_13_good		52722	2					
ANR	52737	ParameterList			52722	3					
ANR	52738	CFGEntryNode	ENTRY		52722		True				
ANR	52739	CFGExitNode	EXIT		52722		True				
ANR	52740	Function	main	143:0:4070:4519							
ANR	52741	FunctionDef	"main (int argc , char * argv [ ])"		52740	0					
ANR	52742	CompoundStatement		144:0:4105:4519	52740	0					
ANR	52743	ExpressionStatement	srand ( ( unsigned ) time ( NULL ) )	146:4:4139:4168	52740	0	True				
ANR	52744	CallExpression	srand ( ( unsigned ) time ( NULL ) )		52740	0					
ANR	52745	Callee	srand		52740	0					
ANR	52746	Identifier	srand		52740	0					
ANR	52747	ArgumentList	( unsigned ) time ( NULL )		52740	1					
ANR	52748	Argument	( unsigned ) time ( NULL )		52740	0					
ANR	52749	CastExpression	( unsigned ) time ( NULL )		52740	0					
ANR	52750	CastTarget	unsigned		52740	0					
ANR	52751	CallExpression	time ( NULL )		52740	1					
ANR	52752	Callee	time		52740	0					
ANR	52753	Identifier	time		52740	0					
ANR	52754	ArgumentList	NULL		52740	1					
ANR	52755	Argument	NULL		52740	0					
ANR	52756	Identifier	NULL		52740	0					
ANR	52757	ExpressionStatement	"printLine ( ""Calling good()..."" )"	148:4:4193:4223	52740	1	True				
ANR	52758	CallExpression	"printLine ( ""Calling good()..."" )"		52740	0					
ANR	52759	Callee	printLine		52740	0					
ANR	52760	Identifier	printLine		52740	0					
ANR	52761	ArgumentList	"""Calling good()..."""		52740	1					
ANR	52762	Argument	"""Calling good()..."""		52740	0					
ANR	52763	PrimaryExpression	"""Calling good()..."""		52740	0					
ANR	52764	ExpressionStatement	CWE416_Use_After_Free__return_freed_ptr_13_good ( )	149:4:4230:4279	52740	2	True				
ANR	52765	CallExpression	CWE416_Use_After_Free__return_freed_ptr_13_good ( )		52740	0					
ANR	52766	Callee	CWE416_Use_After_Free__return_freed_ptr_13_good		52740	0					
ANR	52767	Identifier	CWE416_Use_After_Free__return_freed_ptr_13_good		52740	0					
ANR	52768	ArgumentList			52740	1					
ANR	52769	ExpressionStatement	"printLine ( ""Finished good()"" )"	150:4:4286:4314	52740	3	True				
ANR	52770	CallExpression	"printLine ( ""Finished good()"" )"		52740	0					
ANR	52771	Callee	printLine		52740	0					
ANR	52772	Identifier	printLine		52740	0					
ANR	52773	ArgumentList	"""Finished good()"""		52740	1					
ANR	52774	Argument	"""Finished good()"""		52740	0					
ANR	52775	PrimaryExpression	"""Finished good()"""		52740	0					
ANR	52776	ExpressionStatement	"printLine ( ""Calling bad()..."" )"	153:4:4361:4390	52740	4	True				
ANR	52777	CallExpression	"printLine ( ""Calling bad()..."" )"		52740	0					
ANR	52778	Callee	printLine		52740	0					
ANR	52779	Identifier	printLine		52740	0					
ANR	52780	ArgumentList	"""Calling bad()..."""		52740	1					
ANR	52781	Argument	"""Calling bad()..."""		52740	0					
ANR	52782	PrimaryExpression	"""Calling bad()..."""		52740	0					
ANR	52783	ExpressionStatement	CWE416_Use_After_Free__return_freed_ptr_13_bad ( )	154:4:4397:4445	52740	5	True				
ANR	52784	CallExpression	CWE416_Use_After_Free__return_freed_ptr_13_bad ( )		52740	0					
ANR	52785	Callee	CWE416_Use_After_Free__return_freed_ptr_13_bad		52740	0					
ANR	52786	Identifier	CWE416_Use_After_Free__return_freed_ptr_13_bad		52740	0					
ANR	52787	ArgumentList			52740	1					
ANR	52788	ExpressionStatement	"printLine ( ""Finished bad()"" )"	155:4:4452:4479	52740	6	True				
ANR	52789	CallExpression	"printLine ( ""Finished bad()"" )"		52740	0					
ANR	52790	Callee	printLine		52740	0					
ANR	52791	Identifier	printLine		52740	0					
ANR	52792	ArgumentList	"""Finished bad()"""		52740	1					
ANR	52793	Argument	"""Finished bad()"""		52740	0					
ANR	52794	PrimaryExpression	"""Finished bad()"""		52740	0					
ANR	52795	ReturnStatement	return 0 ;	157:4:4508:4516	52740	7	True				
ANR	52796	PrimaryExpression	0		52740	0					
ANR	52797	ReturnType	int		52740	1					
ANR	52798	Identifier	main		52740	2					
ANR	52799	ParameterList	"int argc , char * argv [ ]"		52740	3					
ANR	52800	Parameter	int argc	143:9:4079:4086	52740	0	True				
ANR	52801	ParameterType	int		52740	0					
ANR	52802	Identifier	argc		52740	1					
ANR	52803	Parameter	char * argv [ ]	143:19:4089:4101	52740	1	True				
ANR	52804	ParameterType	char * [ ]		52740	0					
ANR	52805	Identifier	argv		52740	1					
ANR	52806	CFGEntryNode	ENTRY		52740		True				
ANR	52807	CFGExitNode	EXIT		52740		True				
ANR	52808	Symbol	argc		52740						
ANR	52809	Symbol	NULL		52740						
ANR	52810	Symbol	time		52740						
ANR	52811	Symbol	argv		52740						
