command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	48213	File	/develop/joernDwkProcess/joern-dev/./output/data/CWE119/source-code/119-0-c/testcases/000/240/386/CWE416_Use_After_Free__return_freed_ptr_04.c								
ANR	48214	Function	helperBad	18:0:546:1166							
ANR	48215	FunctionDef	helperBad (char * aString)		48214	0					
ANR	48216	CompoundStatement		19:0:587:1166	48214	0					
ANR	48217	IdentifierDeclStatement	size_t i = 0 ;	20:4:594:606	48214	0	True				
ANR	48218	IdentifierDecl	i = 0		48214	0					
ANR	48219	IdentifierDeclType	size_t		48214	0					
ANR	48220	Identifier	i		48214	1					
ANR	48221	AssignmentExpression	i = 0		48214	2		=			
ANR	48222	Identifier	i		48214	0					
ANR	48223	PrimaryExpression	0		48214	1					
ANR	48224	IdentifierDeclStatement	size_t j ;	21:4:613:621	48214	1	True				
ANR	48225	IdentifierDecl	j		48214	0					
ANR	48226	IdentifierDeclType	size_t		48214	0					
ANR	48227	Identifier	j		48214	1					
ANR	48228	IdentifierDeclStatement	char * reversedString = NULL ;	22:4:628:656	48214	2	True				
ANR	48229	IdentifierDecl	* reversedString = NULL		48214	0					
ANR	48230	IdentifierDeclType	char *		48214	0					
ANR	48231	Identifier	reversedString		48214	1					
ANR	48232	AssignmentExpression	* reversedString = NULL		48214	2		=			
ANR	48233	Identifier	NULL		48214	0					
ANR	48234	Identifier	NULL		48214	1					
ANR	48235	IfStatement	if ( aString != NULL )		48214	3					
ANR	48236	Condition	aString != NULL	23:8:667:681	48214	0	True				
ANR	48237	EqualityExpression	aString != NULL		48214	0		!=			
ANR	48238	Identifier	aString		48214	0					
ANR	48239	Identifier	NULL		48214	1					
ANR	48240	CompoundStatement		6:4:101:101	48214	1					
ANR	48241	ExpressionStatement	i = strlen ( aString )	25:8:700:719	48214	0	True				
ANR	48242	AssignmentExpression	i = strlen ( aString )		48214	0		=			
ANR	48243	Identifier	i		48214	0					
ANR	48244	CallExpression	strlen ( aString )		48214	1					
ANR	48245	Callee	strlen		48214	0					
ANR	48246	Identifier	strlen		48214	0					
ANR	48247	ArgumentList	aString		48214	1					
ANR	48248	Argument	aString		48214	0					
ANR	48249	Identifier	aString		48214	0					
ANR	48250	ExpressionStatement	reversedString = ( char * ) malloc ( i + 1 )	26:8:730:767	48214	1	True				
ANR	48251	AssignmentExpression	reversedString = ( char * ) malloc ( i + 1 )		48214	0		=			
ANR	48252	Identifier	reversedString		48214	0					
ANR	48253	CastExpression	( char * ) malloc ( i + 1 )		48214	1					
ANR	48254	CastTarget	char *		48214	0					
ANR	48255	CallExpression	malloc ( i + 1 )		48214	1					
ANR	48256	Callee	malloc		48214	0					
ANR	48257	Identifier	malloc		48214	0					
ANR	48258	ArgumentList	i + 1		48214	1					
ANR	48259	Argument	i + 1		48214	0					
ANR	48260	AdditiveExpression	i + 1		48214	0		+			
ANR	48261	Identifier	i		48214	0					
ANR	48262	PrimaryExpression	1		48214	1					
ANR	48263	IfStatement	if ( reversedString == NULL )		48214	2					
ANR	48264	Condition	reversedString == NULL	27:12:782:803	48214	0	True				
ANR	48265	EqualityExpression	reversedString == NULL		48214	0		==			
ANR	48266	Identifier	reversedString		48214	0					
ANR	48267	Identifier	NULL		48214	1					
ANR	48268	CompoundStatement		9:36:218:218	48214	1					
ANR	48269	ExpressionStatement	exit ( - 1 )	27:37:807:815	48214	0	True				
ANR	48270	CallExpression	exit ( - 1 )		48214	0					
ANR	48271	Callee	exit		48214	0					
ANR	48272	Identifier	exit		48214	0					
ANR	48273	ArgumentList	- 1		48214	1					
ANR	48274	Argument	- 1		48214	0					
ANR	48275	UnaryOperationExpression	- 1		48214	0					
ANR	48276	UnaryOperator	-		48214	0					
ANR	48277	PrimaryExpression	1		48214	1					
ANR	48278	ForStatement	for ( j = 0 ; j < i ; j ++ )		48214	3					
ANR	48279	ForInit	j = 0 ;	28:13:831:836	48214	0	True				
ANR	48280	AssignmentExpression	j = 0		48214	0		=			
ANR	48281	Identifier	j		48214	0					
ANR	48282	PrimaryExpression	0		48214	1					
ANR	48283	Condition	j < i	28:20:838:842	48214	1	True				
ANR	48284	RelationalExpression	j < i		48214	0		<			
ANR	48285	Identifier	j		48214	0					
ANR	48286	Identifier	i		48214	1					
ANR	48287	PostIncDecOperationExpression	j ++	28:27:845:847	48214	2	True				
ANR	48288	Identifier	j		48214	0					
ANR	48289	IncDec	++		48214	1					
ANR	48290	CompoundStatement		11:8:271:271	48214	3					
ANR	48291	ExpressionStatement	reversedString [ j ] = aString [ i - j - 1 ]	30:12:874:908	48214	0	True				
ANR	48292	AssignmentExpression	reversedString [ j ] = aString [ i - j - 1 ]		48214	0		=			
ANR	48293	ArrayIndexing	reversedString [ j ]		48214	0					
ANR	48294	Identifier	reversedString		48214	0					
ANR	48295	Identifier	j		48214	1					
ANR	48296	ArrayIndexing	aString [ i - j - 1 ]		48214	1					
ANR	48297	Identifier	aString		48214	0					
ANR	48298	AdditiveExpression	i - j - 1		48214	1		-			
ANR	48299	Identifier	i		48214	0					
ANR	48300	AdditiveExpression	j - 1		48214	1		-			
ANR	48301	Identifier	j		48214	0					
ANR	48302	PrimaryExpression	1		48214	1					
ANR	48303	ExpressionStatement	reversedString [ i ] = '\\0'	32:8:930:954	48214	4	True				
ANR	48304	AssignmentExpression	reversedString [ i ] = '\\0'		48214	0		=			
ANR	48305	ArrayIndexing	reversedString [ i ]		48214	0					
ANR	48306	Identifier	reversedString		48214	0					
ANR	48307	Identifier	i		48214	1					
ANR	48308	PrimaryExpression	'\\0'		48214	1					
ANR	48309	ExpressionStatement	free ( reversedString )	34:8:1058:1078	48214	5	True				
ANR	48310	CallExpression	free ( reversedString )		48214	0					
ANR	48311	Callee	free		48214	0					
ANR	48312	Identifier	free		48214	0					
ANR	48313	ArgumentList	reversedString		48214	1					
ANR	48314	Argument	reversedString		48214	0					
ANR	48315	Identifier	reversedString		48214	0					
ANR	48316	ReturnStatement	return reversedString ;	35:8:1089:1110	48214	6	True				
ANR	48317	Identifier	reversedString		48214	0					
ANR	48318	ElseStatement	else		48214	0					
ANR	48319	CompoundStatement		20:4:546:546	48214	0					
ANR	48320	ReturnStatement	return NULL ;	39:8:1145:1156	48214	0	True				
ANR	48321	Identifier	NULL		48214	0					
ANR	48322	ReturnType	static char *		48214	1					
ANR	48323	Identifier	helperBad		48214	2					
ANR	48324	ParameterList	char * aString		48214	3					
ANR	48325	Parameter	char * aString	18:24:570:583	48214	0	True				
ANR	48326	ParameterType	char *		48214	0					
ANR	48327	Identifier	aString		48214	1					
ANR	48328	CFGEntryNode	ENTRY		48214		True				
ANR	48329	CFGExitNode	EXIT		48214		True				
ANR	48330	Symbol	strlen		48214						
ANR	48331	Symbol	malloc		48214						
ANR	48332	Symbol	NULL		48214						
ANR	48333	Symbol	* i		48214						
ANR	48334	Symbol	aString		48214						
ANR	48335	Symbol	* j		48214						
ANR	48336	Symbol	reversedString		48214						
ANR	48337	Symbol	i		48214						
ANR	48338	Symbol	* reversedString		48214						
ANR	48339	Symbol	j		48214						
ANR	48340	Symbol	* aString		48214						
ANR	48341	Function	helperGood	43:0:1171:1728							
ANR	48342	FunctionDef	helperGood (char * aString)		48341	0					
ANR	48343	CompoundStatement		44:0:1213:1728	48341	0					
ANR	48344	IdentifierDeclStatement	size_t i = 0 ;	45:4:1220:1232	48341	0	True				
ANR	48345	IdentifierDecl	i = 0		48341	0					
ANR	48346	IdentifierDeclType	size_t		48341	0					
ANR	48347	Identifier	i		48341	1					
ANR	48348	AssignmentExpression	i = 0		48341	2		=			
ANR	48349	Identifier	i		48341	0					
ANR	48350	PrimaryExpression	0		48341	1					
ANR	48351	IdentifierDeclStatement	size_t j ;	46:4:1239:1247	48341	1	True				
ANR	48352	IdentifierDecl	j		48341	0					
ANR	48353	IdentifierDeclType	size_t		48341	0					
ANR	48354	Identifier	j		48341	1					
ANR	48355	IdentifierDeclStatement	char * reversedString = NULL ;	47:4:1254:1282	48341	2	True				
ANR	48356	IdentifierDecl	* reversedString = NULL		48341	0					
ANR	48357	IdentifierDeclType	char *		48341	0					
ANR	48358	Identifier	reversedString		48341	1					
ANR	48359	AssignmentExpression	* reversedString = NULL		48341	2		=			
ANR	48360	Identifier	NULL		48341	0					
ANR	48361	Identifier	NULL		48341	1					
ANR	48362	IfStatement	if ( aString != NULL )		48341	3					
ANR	48363	Condition	aString != NULL	48:8:1293:1307	48341	0	True				
ANR	48364	EqualityExpression	aString != NULL		48341	0		!=			
ANR	48365	Identifier	aString		48341	0					
ANR	48366	Identifier	NULL		48341	1					
ANR	48367	CompoundStatement		6:4:101:101	48341	1					
ANR	48368	ExpressionStatement	i = strlen ( aString )	50:8:1326:1345	48341	0	True				
ANR	48369	AssignmentExpression	i = strlen ( aString )		48341	0		=			
ANR	48370	Identifier	i		48341	0					
ANR	48371	CallExpression	strlen ( aString )		48341	1					
ANR	48372	Callee	strlen		48341	0					
ANR	48373	Identifier	strlen		48341	0					
ANR	48374	ArgumentList	aString		48341	1					
ANR	48375	Argument	aString		48341	0					
ANR	48376	Identifier	aString		48341	0					
ANR	48377	ExpressionStatement	reversedString = ( char * ) malloc ( i + 1 )	51:8:1356:1393	48341	1	True				
ANR	48378	AssignmentExpression	reversedString = ( char * ) malloc ( i + 1 )		48341	0		=			
ANR	48379	Identifier	reversedString		48341	0					
ANR	48380	CastExpression	( char * ) malloc ( i + 1 )		48341	1					
ANR	48381	CastTarget	char *		48341	0					
ANR	48382	CallExpression	malloc ( i + 1 )		48341	1					
ANR	48383	Callee	malloc		48341	0					
ANR	48384	Identifier	malloc		48341	0					
ANR	48385	ArgumentList	i + 1		48341	1					
ANR	48386	Argument	i + 1		48341	0					
ANR	48387	AdditiveExpression	i + 1		48341	0		+			
ANR	48388	Identifier	i		48341	0					
ANR	48389	PrimaryExpression	1		48341	1					
ANR	48390	IfStatement	if ( reversedString == NULL )		48341	2					
ANR	48391	Condition	reversedString == NULL	52:12:1408:1429	48341	0	True				
ANR	48392	EqualityExpression	reversedString == NULL		48341	0		==			
ANR	48393	Identifier	reversedString		48341	0					
ANR	48394	Identifier	NULL		48341	1					
ANR	48395	CompoundStatement		9:36:218:218	48341	1					
ANR	48396	ExpressionStatement	exit ( - 1 )	52:37:1433:1441	48341	0	True				
ANR	48397	CallExpression	exit ( - 1 )		48341	0					
ANR	48398	Callee	exit		48341	0					
ANR	48399	Identifier	exit		48341	0					
ANR	48400	ArgumentList	- 1		48341	1					
ANR	48401	Argument	- 1		48341	0					
ANR	48402	UnaryOperationExpression	- 1		48341	0					
ANR	48403	UnaryOperator	-		48341	0					
ANR	48404	PrimaryExpression	1		48341	1					
ANR	48405	ForStatement	for ( j = 0 ; j < i ; j ++ )		48341	3					
ANR	48406	ForInit	j = 0 ;	53:13:1457:1462	48341	0	True				
ANR	48407	AssignmentExpression	j = 0		48341	0		=			
ANR	48408	Identifier	j		48341	0					
ANR	48409	PrimaryExpression	0		48341	1					
ANR	48410	Condition	j < i	53:20:1464:1468	48341	1	True				
ANR	48411	RelationalExpression	j < i		48341	0		<			
ANR	48412	Identifier	j		48341	0					
ANR	48413	Identifier	i		48341	1					
ANR	48414	PostIncDecOperationExpression	j ++	53:27:1471:1473	48341	2	True				
ANR	48415	Identifier	j		48341	0					
ANR	48416	IncDec	++		48341	1					
ANR	48417	CompoundStatement		11:8:271:271	48341	3					
ANR	48418	ExpressionStatement	reversedString [ j ] = aString [ i - j - 1 ]	55:12:1500:1534	48341	0	True				
ANR	48419	AssignmentExpression	reversedString [ j ] = aString [ i - j - 1 ]		48341	0		=			
ANR	48420	ArrayIndexing	reversedString [ j ]		48341	0					
ANR	48421	Identifier	reversedString		48341	0					
ANR	48422	Identifier	j		48341	1					
ANR	48423	ArrayIndexing	aString [ i - j - 1 ]		48341	1					
ANR	48424	Identifier	aString		48341	0					
ANR	48425	AdditiveExpression	i - j - 1		48341	1		-			
ANR	48426	Identifier	i		48341	0					
ANR	48427	AdditiveExpression	j - 1		48341	1		-			
ANR	48428	Identifier	j		48341	0					
ANR	48429	PrimaryExpression	1		48341	1					
ANR	48430	ExpressionStatement	reversedString [ i ] = '\\0'	57:8:1556:1580	48341	4	True				
ANR	48431	AssignmentExpression	reversedString [ i ] = '\\0'		48341	0		=			
ANR	48432	ArrayIndexing	reversedString [ i ]		48341	0					
ANR	48433	Identifier	reversedString		48341	0					
ANR	48434	Identifier	i		48341	1					
ANR	48435	PrimaryExpression	'\\0'		48341	1					
ANR	48436	ReturnStatement	return reversedString ;	59:8:1651:1672	48341	5	True				
ANR	48437	Identifier	reversedString		48341	0					
ANR	48438	ElseStatement	else		48341	0					
ANR	48439	CompoundStatement		19:4:482:482	48341	0					
ANR	48440	ReturnStatement	return NULL ;	63:8:1707:1718	48341	0	True				
ANR	48441	Identifier	NULL		48341	0					
ANR	48442	ReturnType	static char *		48341	1					
ANR	48443	Identifier	helperGood		48341	2					
ANR	48444	ParameterList	char * aString		48341	3					
ANR	48445	Parameter	char * aString	43:25:1196:1209	48341	0	True				
ANR	48446	ParameterType	char *		48341	0					
ANR	48447	Identifier	aString		48341	1					
ANR	48448	CFGEntryNode	ENTRY		48341		True				
ANR	48449	CFGExitNode	EXIT		48341		True				
ANR	48450	Symbol	strlen		48341						
ANR	48451	Symbol	malloc		48341						
ANR	48452	Symbol	NULL		48341						
ANR	48453	Symbol	* i		48341						
ANR	48454	Symbol	aString		48341						
ANR	48455	Symbol	* j		48341						
ANR	48456	Symbol	reversedString		48341						
ANR	48457	Symbol	i		48341						
ANR	48458	Symbol	* reversedString		48341						
ANR	48459	Symbol	j		48341						
ANR	48460	Symbol	* aString		48341						
ANR	48461	DeclStmt									
ANR	48462	Decl							const int	const int	STATIC_CONST_TRUE
ANR	48463	DeclStmt									
ANR	48464	Decl							const int	const int	STATIC_CONST_FALSE
ANR	48465	Function	CWE416_Use_After_Free__return_freed_ptr_04_bad	75:0:2023:2554							
ANR	48466	FunctionDef	CWE416_Use_After_Free__return_freed_ptr_04_bad ()		48465	0					
ANR	48467	CompoundStatement		76:0:2078:2554	48465	0					
ANR	48468	IfStatement	if ( STATIC_CONST_TRUE )		48465	0					
ANR	48469	Condition	STATIC_CONST_TRUE	77:7:2088:2104	48465	0	True				
ANR	48470	Identifier	STATIC_CONST_TRUE		48465	0					
ANR	48471	CompoundStatement		3:4:33:33	48465	1					
ANR	48472	CompoundStatement		6:12:107:151	48465	0					
ANR	48473	IdentifierDeclStatement	"char * reversedString = helperBad ( ""BadSink"" ) ;"	81:12:2186:2230	48465	0	True				
ANR	48474	IdentifierDecl	"* reversedString = helperBad ( ""BadSink"" )"		48465	0					
ANR	48475	IdentifierDeclType	char *		48465	0					
ANR	48476	Identifier	reversedString		48465	1					
ANR	48477	AssignmentExpression	"* reversedString = helperBad ( ""BadSink"" )"		48465	2		=			
ANR	48478	Identifier	reversedString		48465	0					
ANR	48479	CallExpression	"helperBad ( ""BadSink"" )"		48465	1					
ANR	48480	Callee	helperBad		48465	0					
ANR	48481	Identifier	helperBad		48465	0					
ANR	48482	ArgumentList	"""BadSink"""		48465	1					
ANR	48483	Argument	"""BadSink"""		48465	0					
ANR	48484	PrimaryExpression	"""BadSink"""		48465	0					
ANR	48485	ExpressionStatement	printLine ( reversedString )	82:12:2245:2270	48465	1	True				
ANR	48486	CallExpression	printLine ( reversedString )		48465	0					
ANR	48487	Callee	printLine		48465	0					
ANR	48488	Identifier	printLine		48465	0					
ANR	48489	ArgumentList	reversedString		48465	1					
ANR	48490	Argument	reversedString		48465	0					
ANR	48491	Identifier	reversedString		48465	0					
ANR	48492	ReturnType	void		48465	1					
ANR	48493	Identifier	CWE416_Use_After_Free__return_freed_ptr_04_bad		48465	2					
ANR	48494	ParameterList			48465	3					
ANR	48495	CFGEntryNode	ENTRY		48465		True				
ANR	48496	CFGExitNode	EXIT		48465		True				
ANR	48497	Symbol	helperBad		48465						
ANR	48498	Symbol	reversedString		48465						
ANR	48499	Symbol	STATIC_CONST_TRUE		48465						
ANR	48500	Function	good1	96:0:2679:3324							
ANR	48501	FunctionDef	good1 ()		48500	0					
ANR	48502	CompoundStatement		97:0:2700:3324	48500	0					
ANR	48503	IfStatement	if ( STATIC_CONST_FALSE )		48500	0					
ANR	48504	Condition	STATIC_CONST_FALSE	98:7:2710:2727	48500	0	True				
ANR	48505	Identifier	STATIC_CONST_FALSE		48500	0					
ANR	48506	CompoundStatement		3:4:34:34	48500	1					
ANR	48507	ExpressionStatement	"printLine ( ""Benign, fixed string"" )"	101:8:2822:2855	48500	0	True				
ANR	48508	CallExpression	"printLine ( ""Benign, fixed string"" )"		48500	0					
ANR	48509	Callee	printLine		48500	0					
ANR	48510	Identifier	printLine		48500	0					
ANR	48511	ArgumentList	"""Benign, fixed string"""		48500	1					
ANR	48512	Argument	"""Benign, fixed string"""		48500	0					
ANR	48513	PrimaryExpression	"""Benign, fixed string"""		48500	0					
ANR	48514	ElseStatement	else		48500	0					
ANR	48515	CompoundStatement		8:4:178:178	48500	0					
ANR	48516	CompoundStatement		11:12:253:299	48500	0					
ANR	48517	IdentifierDeclStatement	"char * reversedString = helperGood ( ""GoodSink"" ) ;"	107:12:2954:3000	48500	0	True				
ANR	48518	IdentifierDecl	"* reversedString = helperGood ( ""GoodSink"" )"		48500	0					
ANR	48519	IdentifierDeclType	char *		48500	0					
ANR	48520	Identifier	reversedString		48500	1					
ANR	48521	AssignmentExpression	"* reversedString = helperGood ( ""GoodSink"" )"		48500	2		=			
ANR	48522	Identifier	reversedString		48500	0					
ANR	48523	CallExpression	"helperGood ( ""GoodSink"" )"		48500	1					
ANR	48524	Callee	helperGood		48500	0					
ANR	48525	Identifier	helperGood		48500	0					
ANR	48526	ArgumentList	"""GoodSink"""		48500	1					
ANR	48527	Argument	"""GoodSink"""		48500	0					
ANR	48528	PrimaryExpression	"""GoodSink"""		48500	0					
ANR	48529	ExpressionStatement	printLine ( reversedString )	108:12:3015:3040	48500	1	True				
ANR	48530	CallExpression	printLine ( reversedString )		48500	0					
ANR	48531	Callee	printLine		48500	0					
ANR	48532	Identifier	printLine		48500	0					
ANR	48533	ArgumentList	reversedString		48500	1					
ANR	48534	Argument	reversedString		48500	0					
ANR	48535	Identifier	reversedString		48500	0					
ANR	48536	ReturnType	static void		48500	1					
ANR	48537	Identifier	good1		48500	2					
ANR	48538	ParameterList			48500	3					
ANR	48539	CFGEntryNode	ENTRY		48500		True				
ANR	48540	CFGExitNode	EXIT		48500		True				
ANR	48541	Symbol	STATIC_CONST_FALSE		48500						
ANR	48542	Symbol	reversedString		48500						
ANR	48543	Symbol	helperGood		48500						
ANR	48544	Function	good2	118:0:3384:3884							
ANR	48545	FunctionDef	good2 ()		48544	0					
ANR	48546	CompoundStatement		119:0:3405:3884	48544	0					
ANR	48547	IfStatement	if ( STATIC_CONST_TRUE )		48544	0					
ANR	48548	Condition	STATIC_CONST_TRUE	120:7:3415:3431	48544	0	True				
ANR	48549	Identifier	STATIC_CONST_TRUE		48544	0					
ANR	48550	CompoundStatement		3:4:33:33	48544	1					
ANR	48551	CompoundStatement		6:12:108:154	48544	0					
ANR	48552	IdentifierDeclStatement	"char * reversedString = helperGood ( ""GoodSink"" ) ;"	124:12:3514:3560	48544	0	True				
ANR	48553	IdentifierDecl	"* reversedString = helperGood ( ""GoodSink"" )"		48544	0					
ANR	48554	IdentifierDeclType	char *		48544	0					
ANR	48555	Identifier	reversedString		48544	1					
ANR	48556	AssignmentExpression	"* reversedString = helperGood ( ""GoodSink"" )"		48544	2		=			
ANR	48557	Identifier	reversedString		48544	0					
ANR	48558	CallExpression	"helperGood ( ""GoodSink"" )"		48544	1					
ANR	48559	Callee	helperGood		48544	0					
ANR	48560	Identifier	helperGood		48544	0					
ANR	48561	ArgumentList	"""GoodSink"""		48544	1					
ANR	48562	Argument	"""GoodSink"""		48544	0					
ANR	48563	PrimaryExpression	"""GoodSink"""		48544	0					
ANR	48564	ExpressionStatement	printLine ( reversedString )	125:12:3575:3600	48544	1	True				
ANR	48565	CallExpression	printLine ( reversedString )		48544	0					
ANR	48566	Callee	printLine		48544	0					
ANR	48567	Identifier	printLine		48544	0					
ANR	48568	ArgumentList	reversedString		48544	1					
ANR	48569	Argument	reversedString		48544	0					
ANR	48570	Identifier	reversedString		48544	0					
ANR	48571	ReturnType	static void		48544	1					
ANR	48572	Identifier	good2		48544	2					
ANR	48573	ParameterList			48544	3					
ANR	48574	CFGEntryNode	ENTRY		48544		True				
ANR	48575	CFGExitNode	EXIT		48544		True				
ANR	48576	Symbol	reversedString		48544						
ANR	48577	Symbol	helperGood		48544						
ANR	48578	Symbol	STATIC_CONST_TRUE		48544						
ANR	48579	Function	CWE416_Use_After_Free__return_freed_ptr_04_good	134:0:3889:3976							
ANR	48580	FunctionDef	CWE416_Use_After_Free__return_freed_ptr_04_good ()		48579	0					
ANR	48581	CompoundStatement		135:0:3945:3976	48579	0					
ANR	48582	ExpressionStatement	good1 ( )	136:4:3952:3959	48579	0	True				
ANR	48583	CallExpression	good1 ( )		48579	0					
ANR	48584	Callee	good1		48579	0					
ANR	48585	Identifier	good1		48579	0					
ANR	48586	ArgumentList			48579	1					
ANR	48587	ExpressionStatement	good2 ( )	137:4:3966:3973	48579	1	True				
ANR	48588	CallExpression	good2 ( )		48579	0					
ANR	48589	Callee	good2		48579	0					
ANR	48590	Identifier	good2		48579	0					
ANR	48591	ArgumentList			48579	1					
ANR	48592	ReturnType	void		48579	1					
ANR	48593	Identifier	CWE416_Use_After_Free__return_freed_ptr_04_good		48579	2					
ANR	48594	ParameterList			48579	3					
ANR	48595	CFGEntryNode	ENTRY		48579		True				
ANR	48596	CFGExitNode	EXIT		48579		True				
ANR	48597	Function	main	149:0:4323:4772							
ANR	48598	FunctionDef	"main (int argc , char * argv [ ])"		48597	0					
ANR	48599	CompoundStatement		150:0:4358:4772	48597	0					
ANR	48600	ExpressionStatement	srand ( ( unsigned ) time ( NULL ) )	152:4:4392:4421	48597	0	True				
ANR	48601	CallExpression	srand ( ( unsigned ) time ( NULL ) )		48597	0					
ANR	48602	Callee	srand		48597	0					
ANR	48603	Identifier	srand		48597	0					
ANR	48604	ArgumentList	( unsigned ) time ( NULL )		48597	1					
ANR	48605	Argument	( unsigned ) time ( NULL )		48597	0					
ANR	48606	CastExpression	( unsigned ) time ( NULL )		48597	0					
ANR	48607	CastTarget	unsigned		48597	0					
ANR	48608	CallExpression	time ( NULL )		48597	1					
ANR	48609	Callee	time		48597	0					
ANR	48610	Identifier	time		48597	0					
ANR	48611	ArgumentList	NULL		48597	1					
ANR	48612	Argument	NULL		48597	0					
ANR	48613	Identifier	NULL		48597	0					
ANR	48614	ExpressionStatement	"printLine ( ""Calling good()..."" )"	154:4:4446:4476	48597	1	True				
ANR	48615	CallExpression	"printLine ( ""Calling good()..."" )"		48597	0					
ANR	48616	Callee	printLine		48597	0					
ANR	48617	Identifier	printLine		48597	0					
ANR	48618	ArgumentList	"""Calling good()..."""		48597	1					
ANR	48619	Argument	"""Calling good()..."""		48597	0					
ANR	48620	PrimaryExpression	"""Calling good()..."""		48597	0					
ANR	48621	ExpressionStatement	CWE416_Use_After_Free__return_freed_ptr_04_good ( )	155:4:4483:4532	48597	2	True				
ANR	48622	CallExpression	CWE416_Use_After_Free__return_freed_ptr_04_good ( )		48597	0					
ANR	48623	Callee	CWE416_Use_After_Free__return_freed_ptr_04_good		48597	0					
ANR	48624	Identifier	CWE416_Use_After_Free__return_freed_ptr_04_good		48597	0					
ANR	48625	ArgumentList			48597	1					
ANR	48626	ExpressionStatement	"printLine ( ""Finished good()"" )"	156:4:4539:4567	48597	3	True				
ANR	48627	CallExpression	"printLine ( ""Finished good()"" )"		48597	0					
ANR	48628	Callee	printLine		48597	0					
ANR	48629	Identifier	printLine		48597	0					
ANR	48630	ArgumentList	"""Finished good()"""		48597	1					
ANR	48631	Argument	"""Finished good()"""		48597	0					
ANR	48632	PrimaryExpression	"""Finished good()"""		48597	0					
ANR	48633	ExpressionStatement	"printLine ( ""Calling bad()..."" )"	159:4:4614:4643	48597	4	True				
ANR	48634	CallExpression	"printLine ( ""Calling bad()..."" )"		48597	0					
ANR	48635	Callee	printLine		48597	0					
ANR	48636	Identifier	printLine		48597	0					
ANR	48637	ArgumentList	"""Calling bad()..."""		48597	1					
ANR	48638	Argument	"""Calling bad()..."""		48597	0					
ANR	48639	PrimaryExpression	"""Calling bad()..."""		48597	0					
ANR	48640	ExpressionStatement	CWE416_Use_After_Free__return_freed_ptr_04_bad ( )	160:4:4650:4698	48597	5	True				
ANR	48641	CallExpression	CWE416_Use_After_Free__return_freed_ptr_04_bad ( )		48597	0					
ANR	48642	Callee	CWE416_Use_After_Free__return_freed_ptr_04_bad		48597	0					
ANR	48643	Identifier	CWE416_Use_After_Free__return_freed_ptr_04_bad		48597	0					
ANR	48644	ArgumentList			48597	1					
ANR	48645	ExpressionStatement	"printLine ( ""Finished bad()"" )"	161:4:4705:4732	48597	6	True				
ANR	48646	CallExpression	"printLine ( ""Finished bad()"" )"		48597	0					
ANR	48647	Callee	printLine		48597	0					
ANR	48648	Identifier	printLine		48597	0					
ANR	48649	ArgumentList	"""Finished bad()"""		48597	1					
ANR	48650	Argument	"""Finished bad()"""		48597	0					
ANR	48651	PrimaryExpression	"""Finished bad()"""		48597	0					
ANR	48652	ReturnStatement	return 0 ;	163:4:4761:4769	48597	7	True				
ANR	48653	PrimaryExpression	0		48597	0					
ANR	48654	ReturnType	int		48597	1					
ANR	48655	Identifier	main		48597	2					
ANR	48656	ParameterList	"int argc , char * argv [ ]"		48597	3					
ANR	48657	Parameter	int argc	149:9:4332:4339	48597	0	True				
ANR	48658	ParameterType	int		48597	0					
ANR	48659	Identifier	argc		48597	1					
ANR	48660	Parameter	char * argv [ ]	149:19:4342:4354	48597	1	True				
ANR	48661	ParameterType	char * [ ]		48597	0					
ANR	48662	Identifier	argv		48597	1					
ANR	48663	CFGEntryNode	ENTRY		48597		True				
ANR	48664	CFGExitNode	EXIT		48597		True				
ANR	48665	Symbol	argc		48597						
ANR	48666	Symbol	NULL		48597						
ANR	48667	Symbol	time		48597						
ANR	48668	Symbol	argv		48597						
