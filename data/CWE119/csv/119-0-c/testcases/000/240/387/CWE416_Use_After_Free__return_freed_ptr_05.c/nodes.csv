command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	48670	File	/develop/joernDwkProcess/joern-dev/./output/data/CWE119/source-code/119-0-c/testcases/000/240/387/CWE416_Use_After_Free__return_freed_ptr_05.c								
ANR	48671	Function	helperBad	18:0:532:1152							
ANR	48672	FunctionDef	helperBad (char * aString)		48671	0					
ANR	48673	CompoundStatement		19:0:573:1152	48671	0					
ANR	48674	IdentifierDeclStatement	size_t i = 0 ;	20:4:580:592	48671	0	True				
ANR	48675	IdentifierDecl	i = 0		48671	0					
ANR	48676	IdentifierDeclType	size_t		48671	0					
ANR	48677	Identifier	i		48671	1					
ANR	48678	AssignmentExpression	i = 0		48671	2		=			
ANR	48679	Identifier	i		48671	0					
ANR	48680	PrimaryExpression	0		48671	1					
ANR	48681	IdentifierDeclStatement	size_t j ;	21:4:599:607	48671	1	True				
ANR	48682	IdentifierDecl	j		48671	0					
ANR	48683	IdentifierDeclType	size_t		48671	0					
ANR	48684	Identifier	j		48671	1					
ANR	48685	IdentifierDeclStatement	char * reversedString = NULL ;	22:4:614:642	48671	2	True				
ANR	48686	IdentifierDecl	* reversedString = NULL		48671	0					
ANR	48687	IdentifierDeclType	char *		48671	0					
ANR	48688	Identifier	reversedString		48671	1					
ANR	48689	AssignmentExpression	* reversedString = NULL		48671	2		=			
ANR	48690	Identifier	NULL		48671	0					
ANR	48691	Identifier	NULL		48671	1					
ANR	48692	IfStatement	if ( aString != NULL )		48671	3					
ANR	48693	Condition	aString != NULL	23:8:653:667	48671	0	True				
ANR	48694	EqualityExpression	aString != NULL		48671	0		!=			
ANR	48695	Identifier	aString		48671	0					
ANR	48696	Identifier	NULL		48671	1					
ANR	48697	CompoundStatement		6:4:101:101	48671	1					
ANR	48698	ExpressionStatement	i = strlen ( aString )	25:8:686:705	48671	0	True				
ANR	48699	AssignmentExpression	i = strlen ( aString )		48671	0		=			
ANR	48700	Identifier	i		48671	0					
ANR	48701	CallExpression	strlen ( aString )		48671	1					
ANR	48702	Callee	strlen		48671	0					
ANR	48703	Identifier	strlen		48671	0					
ANR	48704	ArgumentList	aString		48671	1					
ANR	48705	Argument	aString		48671	0					
ANR	48706	Identifier	aString		48671	0					
ANR	48707	ExpressionStatement	reversedString = ( char * ) malloc ( i + 1 )	26:8:716:753	48671	1	True				
ANR	48708	AssignmentExpression	reversedString = ( char * ) malloc ( i + 1 )		48671	0		=			
ANR	48709	Identifier	reversedString		48671	0					
ANR	48710	CastExpression	( char * ) malloc ( i + 1 )		48671	1					
ANR	48711	CastTarget	char *		48671	0					
ANR	48712	CallExpression	malloc ( i + 1 )		48671	1					
ANR	48713	Callee	malloc		48671	0					
ANR	48714	Identifier	malloc		48671	0					
ANR	48715	ArgumentList	i + 1		48671	1					
ANR	48716	Argument	i + 1		48671	0					
ANR	48717	AdditiveExpression	i + 1		48671	0		+			
ANR	48718	Identifier	i		48671	0					
ANR	48719	PrimaryExpression	1		48671	1					
ANR	48720	IfStatement	if ( reversedString == NULL )		48671	2					
ANR	48721	Condition	reversedString == NULL	27:12:768:789	48671	0	True				
ANR	48722	EqualityExpression	reversedString == NULL		48671	0		==			
ANR	48723	Identifier	reversedString		48671	0					
ANR	48724	Identifier	NULL		48671	1					
ANR	48725	CompoundStatement		9:36:218:218	48671	1					
ANR	48726	ExpressionStatement	exit ( - 1 )	27:37:793:801	48671	0	True				
ANR	48727	CallExpression	exit ( - 1 )		48671	0					
ANR	48728	Callee	exit		48671	0					
ANR	48729	Identifier	exit		48671	0					
ANR	48730	ArgumentList	- 1		48671	1					
ANR	48731	Argument	- 1		48671	0					
ANR	48732	UnaryOperationExpression	- 1		48671	0					
ANR	48733	UnaryOperator	-		48671	0					
ANR	48734	PrimaryExpression	1		48671	1					
ANR	48735	ForStatement	for ( j = 0 ; j < i ; j ++ )		48671	3					
ANR	48736	ForInit	j = 0 ;	28:13:817:822	48671	0	True				
ANR	48737	AssignmentExpression	j = 0		48671	0		=			
ANR	48738	Identifier	j		48671	0					
ANR	48739	PrimaryExpression	0		48671	1					
ANR	48740	Condition	j < i	28:20:824:828	48671	1	True				
ANR	48741	RelationalExpression	j < i		48671	0		<			
ANR	48742	Identifier	j		48671	0					
ANR	48743	Identifier	i		48671	1					
ANR	48744	PostIncDecOperationExpression	j ++	28:27:831:833	48671	2	True				
ANR	48745	Identifier	j		48671	0					
ANR	48746	IncDec	++		48671	1					
ANR	48747	CompoundStatement		11:8:271:271	48671	3					
ANR	48748	ExpressionStatement	reversedString [ j ] = aString [ i - j - 1 ]	30:12:860:894	48671	0	True				
ANR	48749	AssignmentExpression	reversedString [ j ] = aString [ i - j - 1 ]		48671	0		=			
ANR	48750	ArrayIndexing	reversedString [ j ]		48671	0					
ANR	48751	Identifier	reversedString		48671	0					
ANR	48752	Identifier	j		48671	1					
ANR	48753	ArrayIndexing	aString [ i - j - 1 ]		48671	1					
ANR	48754	Identifier	aString		48671	0					
ANR	48755	AdditiveExpression	i - j - 1		48671	1		-			
ANR	48756	Identifier	i		48671	0					
ANR	48757	AdditiveExpression	j - 1		48671	1		-			
ANR	48758	Identifier	j		48671	0					
ANR	48759	PrimaryExpression	1		48671	1					
ANR	48760	ExpressionStatement	reversedString [ i ] = '\\0'	32:8:916:940	48671	4	True				
ANR	48761	AssignmentExpression	reversedString [ i ] = '\\0'		48671	0		=			
ANR	48762	ArrayIndexing	reversedString [ i ]		48671	0					
ANR	48763	Identifier	reversedString		48671	0					
ANR	48764	Identifier	i		48671	1					
ANR	48765	PrimaryExpression	'\\0'		48671	1					
ANR	48766	ExpressionStatement	free ( reversedString )	34:8:1044:1064	48671	5	True				
ANR	48767	CallExpression	free ( reversedString )		48671	0					
ANR	48768	Callee	free		48671	0					
ANR	48769	Identifier	free		48671	0					
ANR	48770	ArgumentList	reversedString		48671	1					
ANR	48771	Argument	reversedString		48671	0					
ANR	48772	Identifier	reversedString		48671	0					
ANR	48773	ReturnStatement	return reversedString ;	35:8:1075:1096	48671	6	True				
ANR	48774	Identifier	reversedString		48671	0					
ANR	48775	ElseStatement	else		48671	0					
ANR	48776	CompoundStatement		20:4:546:546	48671	0					
ANR	48777	ReturnStatement	return NULL ;	39:8:1131:1142	48671	0	True				
ANR	48778	Identifier	NULL		48671	0					
ANR	48779	ReturnType	static char *		48671	1					
ANR	48780	Identifier	helperBad		48671	2					
ANR	48781	ParameterList	char * aString		48671	3					
ANR	48782	Parameter	char * aString	18:24:556:569	48671	0	True				
ANR	48783	ParameterType	char *		48671	0					
ANR	48784	Identifier	aString		48671	1					
ANR	48785	CFGEntryNode	ENTRY		48671		True				
ANR	48786	CFGExitNode	EXIT		48671		True				
ANR	48787	Symbol	strlen		48671						
ANR	48788	Symbol	malloc		48671						
ANR	48789	Symbol	NULL		48671						
ANR	48790	Symbol	* i		48671						
ANR	48791	Symbol	aString		48671						
ANR	48792	Symbol	* j		48671						
ANR	48793	Symbol	reversedString		48671						
ANR	48794	Symbol	i		48671						
ANR	48795	Symbol	* reversedString		48671						
ANR	48796	Symbol	j		48671						
ANR	48797	Symbol	* aString		48671						
ANR	48798	Function	helperGood	43:0:1157:1714							
ANR	48799	FunctionDef	helperGood (char * aString)		48798	0					
ANR	48800	CompoundStatement		44:0:1199:1714	48798	0					
ANR	48801	IdentifierDeclStatement	size_t i = 0 ;	45:4:1206:1218	48798	0	True				
ANR	48802	IdentifierDecl	i = 0		48798	0					
ANR	48803	IdentifierDeclType	size_t		48798	0					
ANR	48804	Identifier	i		48798	1					
ANR	48805	AssignmentExpression	i = 0		48798	2		=			
ANR	48806	Identifier	i		48798	0					
ANR	48807	PrimaryExpression	0		48798	1					
ANR	48808	IdentifierDeclStatement	size_t j ;	46:4:1225:1233	48798	1	True				
ANR	48809	IdentifierDecl	j		48798	0					
ANR	48810	IdentifierDeclType	size_t		48798	0					
ANR	48811	Identifier	j		48798	1					
ANR	48812	IdentifierDeclStatement	char * reversedString = NULL ;	47:4:1240:1268	48798	2	True				
ANR	48813	IdentifierDecl	* reversedString = NULL		48798	0					
ANR	48814	IdentifierDeclType	char *		48798	0					
ANR	48815	Identifier	reversedString		48798	1					
ANR	48816	AssignmentExpression	* reversedString = NULL		48798	2		=			
ANR	48817	Identifier	NULL		48798	0					
ANR	48818	Identifier	NULL		48798	1					
ANR	48819	IfStatement	if ( aString != NULL )		48798	3					
ANR	48820	Condition	aString != NULL	48:8:1279:1293	48798	0	True				
ANR	48821	EqualityExpression	aString != NULL		48798	0		!=			
ANR	48822	Identifier	aString		48798	0					
ANR	48823	Identifier	NULL		48798	1					
ANR	48824	CompoundStatement		6:4:101:101	48798	1					
ANR	48825	ExpressionStatement	i = strlen ( aString )	50:8:1312:1331	48798	0	True				
ANR	48826	AssignmentExpression	i = strlen ( aString )		48798	0		=			
ANR	48827	Identifier	i		48798	0					
ANR	48828	CallExpression	strlen ( aString )		48798	1					
ANR	48829	Callee	strlen		48798	0					
ANR	48830	Identifier	strlen		48798	0					
ANR	48831	ArgumentList	aString		48798	1					
ANR	48832	Argument	aString		48798	0					
ANR	48833	Identifier	aString		48798	0					
ANR	48834	ExpressionStatement	reversedString = ( char * ) malloc ( i + 1 )	51:8:1342:1379	48798	1	True				
ANR	48835	AssignmentExpression	reversedString = ( char * ) malloc ( i + 1 )		48798	0		=			
ANR	48836	Identifier	reversedString		48798	0					
ANR	48837	CastExpression	( char * ) malloc ( i + 1 )		48798	1					
ANR	48838	CastTarget	char *		48798	0					
ANR	48839	CallExpression	malloc ( i + 1 )		48798	1					
ANR	48840	Callee	malloc		48798	0					
ANR	48841	Identifier	malloc		48798	0					
ANR	48842	ArgumentList	i + 1		48798	1					
ANR	48843	Argument	i + 1		48798	0					
ANR	48844	AdditiveExpression	i + 1		48798	0		+			
ANR	48845	Identifier	i		48798	0					
ANR	48846	PrimaryExpression	1		48798	1					
ANR	48847	IfStatement	if ( reversedString == NULL )		48798	2					
ANR	48848	Condition	reversedString == NULL	52:12:1394:1415	48798	0	True				
ANR	48849	EqualityExpression	reversedString == NULL		48798	0		==			
ANR	48850	Identifier	reversedString		48798	0					
ANR	48851	Identifier	NULL		48798	1					
ANR	48852	CompoundStatement		9:36:218:218	48798	1					
ANR	48853	ExpressionStatement	exit ( - 1 )	52:37:1419:1427	48798	0	True				
ANR	48854	CallExpression	exit ( - 1 )		48798	0					
ANR	48855	Callee	exit		48798	0					
ANR	48856	Identifier	exit		48798	0					
ANR	48857	ArgumentList	- 1		48798	1					
ANR	48858	Argument	- 1		48798	0					
ANR	48859	UnaryOperationExpression	- 1		48798	0					
ANR	48860	UnaryOperator	-		48798	0					
ANR	48861	PrimaryExpression	1		48798	1					
ANR	48862	ForStatement	for ( j = 0 ; j < i ; j ++ )		48798	3					
ANR	48863	ForInit	j = 0 ;	53:13:1443:1448	48798	0	True				
ANR	48864	AssignmentExpression	j = 0		48798	0		=			
ANR	48865	Identifier	j		48798	0					
ANR	48866	PrimaryExpression	0		48798	1					
ANR	48867	Condition	j < i	53:20:1450:1454	48798	1	True				
ANR	48868	RelationalExpression	j < i		48798	0		<			
ANR	48869	Identifier	j		48798	0					
ANR	48870	Identifier	i		48798	1					
ANR	48871	PostIncDecOperationExpression	j ++	53:27:1457:1459	48798	2	True				
ANR	48872	Identifier	j		48798	0					
ANR	48873	IncDec	++		48798	1					
ANR	48874	CompoundStatement		11:8:271:271	48798	3					
ANR	48875	ExpressionStatement	reversedString [ j ] = aString [ i - j - 1 ]	55:12:1486:1520	48798	0	True				
ANR	48876	AssignmentExpression	reversedString [ j ] = aString [ i - j - 1 ]		48798	0		=			
ANR	48877	ArrayIndexing	reversedString [ j ]		48798	0					
ANR	48878	Identifier	reversedString		48798	0					
ANR	48879	Identifier	j		48798	1					
ANR	48880	ArrayIndexing	aString [ i - j - 1 ]		48798	1					
ANR	48881	Identifier	aString		48798	0					
ANR	48882	AdditiveExpression	i - j - 1		48798	1		-			
ANR	48883	Identifier	i		48798	0					
ANR	48884	AdditiveExpression	j - 1		48798	1		-			
ANR	48885	Identifier	j		48798	0					
ANR	48886	PrimaryExpression	1		48798	1					
ANR	48887	ExpressionStatement	reversedString [ i ] = '\\0'	57:8:1542:1566	48798	4	True				
ANR	48888	AssignmentExpression	reversedString [ i ] = '\\0'		48798	0		=			
ANR	48889	ArrayIndexing	reversedString [ i ]		48798	0					
ANR	48890	Identifier	reversedString		48798	0					
ANR	48891	Identifier	i		48798	1					
ANR	48892	PrimaryExpression	'\\0'		48798	1					
ANR	48893	ReturnStatement	return reversedString ;	59:8:1637:1658	48798	5	True				
ANR	48894	Identifier	reversedString		48798	0					
ANR	48895	ElseStatement	else		48798	0					
ANR	48896	CompoundStatement		19:4:482:482	48798	0					
ANR	48897	ReturnStatement	return NULL ;	63:8:1693:1704	48798	0	True				
ANR	48898	Identifier	NULL		48798	0					
ANR	48899	ReturnType	static char *		48798	1					
ANR	48900	Identifier	helperGood		48798	2					
ANR	48901	ParameterList	char * aString		48798	3					
ANR	48902	Parameter	char * aString	43:25:1182:1195	48798	0	True				
ANR	48903	ParameterType	char *		48798	0					
ANR	48904	Identifier	aString		48798	1					
ANR	48905	CFGEntryNode	ENTRY		48798		True				
ANR	48906	CFGExitNode	EXIT		48798		True				
ANR	48907	Symbol	strlen		48798						
ANR	48908	Symbol	malloc		48798						
ANR	48909	Symbol	NULL		48798						
ANR	48910	Symbol	* i		48798						
ANR	48911	Symbol	aString		48798						
ANR	48912	Symbol	* j		48798						
ANR	48913	Symbol	reversedString		48798						
ANR	48914	Symbol	i		48798						
ANR	48915	Symbol	* reversedString		48798						
ANR	48916	Symbol	j		48798						
ANR	48917	Symbol	* aString		48798						
ANR	48918	DeclStmt									
ANR	48919	Decl							int	int	staticTrue
ANR	48920	DeclStmt									
ANR	48921	Decl							int	int	staticFalse
ANR	48922	Function	CWE416_Use_After_Free__return_freed_ptr_05_bad	75:0:2029:2553							
ANR	48923	FunctionDef	CWE416_Use_After_Free__return_freed_ptr_05_bad ()		48922	0					
ANR	48924	CompoundStatement		76:0:2084:2553	48922	0					
ANR	48925	IfStatement	if ( staticTrue )		48922	0					
ANR	48926	Condition	staticTrue	77:7:2094:2103	48922	0	True				
ANR	48927	Identifier	staticTrue		48922	0					
ANR	48928	CompoundStatement		3:4:26:26	48922	1					
ANR	48929	CompoundStatement		6:12:100:144	48922	0					
ANR	48930	IdentifierDeclStatement	"char * reversedString = helperBad ( ""BadSink"" ) ;"	81:12:2185:2229	48922	0	True				
ANR	48931	IdentifierDecl	"* reversedString = helperBad ( ""BadSink"" )"		48922	0					
ANR	48932	IdentifierDeclType	char *		48922	0					
ANR	48933	Identifier	reversedString		48922	1					
ANR	48934	AssignmentExpression	"* reversedString = helperBad ( ""BadSink"" )"		48922	2		=			
ANR	48935	Identifier	reversedString		48922	0					
ANR	48936	CallExpression	"helperBad ( ""BadSink"" )"		48922	1					
ANR	48937	Callee	helperBad		48922	0					
ANR	48938	Identifier	helperBad		48922	0					
ANR	48939	ArgumentList	"""BadSink"""		48922	1					
ANR	48940	Argument	"""BadSink"""		48922	0					
ANR	48941	PrimaryExpression	"""BadSink"""		48922	0					
ANR	48942	ExpressionStatement	printLine ( reversedString )	82:12:2244:2269	48922	1	True				
ANR	48943	CallExpression	printLine ( reversedString )		48922	0					
ANR	48944	Callee	printLine		48922	0					
ANR	48945	Identifier	printLine		48922	0					
ANR	48946	ArgumentList	reversedString		48922	1					
ANR	48947	Argument	reversedString		48922	0					
ANR	48948	Identifier	reversedString		48922	0					
ANR	48949	ReturnType	void		48922	1					
ANR	48950	Identifier	CWE416_Use_After_Free__return_freed_ptr_05_bad		48922	2					
ANR	48951	ParameterList			48922	3					
ANR	48952	CFGEntryNode	ENTRY		48922		True				
ANR	48953	CFGExitNode	EXIT		48922		True				
ANR	48954	Symbol	staticTrue		48922						
ANR	48955	Symbol	helperBad		48922						
ANR	48956	Symbol	reversedString		48922						
ANR	48957	Function	good1	96:0:2664:3302							
ANR	48958	FunctionDef	good1 ()		48957	0					
ANR	48959	CompoundStatement		97:0:2685:3302	48957	0					
ANR	48960	IfStatement	if ( staticFalse )		48957	0					
ANR	48961	Condition	staticFalse	98:7:2695:2705	48957	0	True				
ANR	48962	Identifier	staticFalse		48957	0					
ANR	48963	CompoundStatement		3:4:27:27	48957	1					
ANR	48964	ExpressionStatement	"printLine ( ""Benign, fixed string"" )"	101:8:2800:2833	48957	0	True				
ANR	48965	CallExpression	"printLine ( ""Benign, fixed string"" )"		48957	0					
ANR	48966	Callee	printLine		48957	0					
ANR	48967	Identifier	printLine		48957	0					
ANR	48968	ArgumentList	"""Benign, fixed string"""		48957	1					
ANR	48969	Argument	"""Benign, fixed string"""		48957	0					
ANR	48970	PrimaryExpression	"""Benign, fixed string"""		48957	0					
ANR	48971	ElseStatement	else		48957	0					
ANR	48972	CompoundStatement		8:4:171:171	48957	0					
ANR	48973	CompoundStatement		11:12:246:292	48957	0					
ANR	48974	IdentifierDeclStatement	"char * reversedString = helperGood ( ""GoodSink"" ) ;"	107:12:2932:2978	48957	0	True				
ANR	48975	IdentifierDecl	"* reversedString = helperGood ( ""GoodSink"" )"		48957	0					
ANR	48976	IdentifierDeclType	char *		48957	0					
ANR	48977	Identifier	reversedString		48957	1					
ANR	48978	AssignmentExpression	"* reversedString = helperGood ( ""GoodSink"" )"		48957	2		=			
ANR	48979	Identifier	reversedString		48957	0					
ANR	48980	CallExpression	"helperGood ( ""GoodSink"" )"		48957	1					
ANR	48981	Callee	helperGood		48957	0					
ANR	48982	Identifier	helperGood		48957	0					
ANR	48983	ArgumentList	"""GoodSink"""		48957	1					
ANR	48984	Argument	"""GoodSink"""		48957	0					
ANR	48985	PrimaryExpression	"""GoodSink"""		48957	0					
ANR	48986	ExpressionStatement	printLine ( reversedString )	108:12:2993:3018	48957	1	True				
ANR	48987	CallExpression	printLine ( reversedString )		48957	0					
ANR	48988	Callee	printLine		48957	0					
ANR	48989	Identifier	printLine		48957	0					
ANR	48990	ArgumentList	reversedString		48957	1					
ANR	48991	Argument	reversedString		48957	0					
ANR	48992	Identifier	reversedString		48957	0					
ANR	48993	ReturnType	static void		48957	1					
ANR	48994	Identifier	good1		48957	2					
ANR	48995	ParameterList			48957	3					
ANR	48996	CFGEntryNode	ENTRY		48957		True				
ANR	48997	CFGExitNode	EXIT		48957		True				
ANR	48998	Symbol	staticFalse		48957						
ANR	48999	Symbol	reversedString		48957						
ANR	49000	Symbol	helperGood		48957						
ANR	49001	Function	good2	118:0:3362:3855							
ANR	49002	FunctionDef	good2 ()		49001	0					
ANR	49003	CompoundStatement		119:0:3383:3855	49001	0					
ANR	49004	IfStatement	if ( staticTrue )		49001	0					
ANR	49005	Condition	staticTrue	120:7:3393:3402	49001	0	True				
ANR	49006	Identifier	staticTrue		49001	0					
ANR	49007	CompoundStatement		3:4:26:26	49001	1					
ANR	49008	CompoundStatement		6:12:101:147	49001	0					
ANR	49009	IdentifierDeclStatement	"char * reversedString = helperGood ( ""GoodSink"" ) ;"	124:12:3485:3531	49001	0	True				
ANR	49010	IdentifierDecl	"* reversedString = helperGood ( ""GoodSink"" )"		49001	0					
ANR	49011	IdentifierDeclType	char *		49001	0					
ANR	49012	Identifier	reversedString		49001	1					
ANR	49013	AssignmentExpression	"* reversedString = helperGood ( ""GoodSink"" )"		49001	2		=			
ANR	49014	Identifier	reversedString		49001	0					
ANR	49015	CallExpression	"helperGood ( ""GoodSink"" )"		49001	1					
ANR	49016	Callee	helperGood		49001	0					
ANR	49017	Identifier	helperGood		49001	0					
ANR	49018	ArgumentList	"""GoodSink"""		49001	1					
ANR	49019	Argument	"""GoodSink"""		49001	0					
ANR	49020	PrimaryExpression	"""GoodSink"""		49001	0					
ANR	49021	ExpressionStatement	printLine ( reversedString )	125:12:3546:3571	49001	1	True				
ANR	49022	CallExpression	printLine ( reversedString )		49001	0					
ANR	49023	Callee	printLine		49001	0					
ANR	49024	Identifier	printLine		49001	0					
ANR	49025	ArgumentList	reversedString		49001	1					
ANR	49026	Argument	reversedString		49001	0					
ANR	49027	Identifier	reversedString		49001	0					
ANR	49028	ReturnType	static void		49001	1					
ANR	49029	Identifier	good2		49001	2					
ANR	49030	ParameterList			49001	3					
ANR	49031	CFGEntryNode	ENTRY		49001		True				
ANR	49032	CFGExitNode	EXIT		49001		True				
ANR	49033	Symbol	staticTrue		49001						
ANR	49034	Symbol	reversedString		49001						
ANR	49035	Symbol	helperGood		49001						
ANR	49036	Function	CWE416_Use_After_Free__return_freed_ptr_05_good	134:0:3860:3947							
ANR	49037	FunctionDef	CWE416_Use_After_Free__return_freed_ptr_05_good ()		49036	0					
ANR	49038	CompoundStatement		135:0:3916:3947	49036	0					
ANR	49039	ExpressionStatement	good1 ( )	136:4:3923:3930	49036	0	True				
ANR	49040	CallExpression	good1 ( )		49036	0					
ANR	49041	Callee	good1		49036	0					
ANR	49042	Identifier	good1		49036	0					
ANR	49043	ArgumentList			49036	1					
ANR	49044	ExpressionStatement	good2 ( )	137:4:3937:3944	49036	1	True				
ANR	49045	CallExpression	good2 ( )		49036	0					
ANR	49046	Callee	good2		49036	0					
ANR	49047	Identifier	good2		49036	0					
ANR	49048	ArgumentList			49036	1					
ANR	49049	ReturnType	void		49036	1					
ANR	49050	Identifier	CWE416_Use_After_Free__return_freed_ptr_05_good		49036	2					
ANR	49051	ParameterList			49036	3					
ANR	49052	CFGEntryNode	ENTRY		49036		True				
ANR	49053	CFGExitNode	EXIT		49036		True				
ANR	49054	Function	main	149:0:4294:4743							
ANR	49055	FunctionDef	"main (int argc , char * argv [ ])"		49054	0					
ANR	49056	CompoundStatement		150:0:4329:4743	49054	0					
ANR	49057	ExpressionStatement	srand ( ( unsigned ) time ( NULL ) )	152:4:4363:4392	49054	0	True				
ANR	49058	CallExpression	srand ( ( unsigned ) time ( NULL ) )		49054	0					
ANR	49059	Callee	srand		49054	0					
ANR	49060	Identifier	srand		49054	0					
ANR	49061	ArgumentList	( unsigned ) time ( NULL )		49054	1					
ANR	49062	Argument	( unsigned ) time ( NULL )		49054	0					
ANR	49063	CastExpression	( unsigned ) time ( NULL )		49054	0					
ANR	49064	CastTarget	unsigned		49054	0					
ANR	49065	CallExpression	time ( NULL )		49054	1					
ANR	49066	Callee	time		49054	0					
ANR	49067	Identifier	time		49054	0					
ANR	49068	ArgumentList	NULL		49054	1					
ANR	49069	Argument	NULL		49054	0					
ANR	49070	Identifier	NULL		49054	0					
ANR	49071	ExpressionStatement	"printLine ( ""Calling good()..."" )"	154:4:4417:4447	49054	1	True				
ANR	49072	CallExpression	"printLine ( ""Calling good()..."" )"		49054	0					
ANR	49073	Callee	printLine		49054	0					
ANR	49074	Identifier	printLine		49054	0					
ANR	49075	ArgumentList	"""Calling good()..."""		49054	1					
ANR	49076	Argument	"""Calling good()..."""		49054	0					
ANR	49077	PrimaryExpression	"""Calling good()..."""		49054	0					
ANR	49078	ExpressionStatement	CWE416_Use_After_Free__return_freed_ptr_05_good ( )	155:4:4454:4503	49054	2	True				
ANR	49079	CallExpression	CWE416_Use_After_Free__return_freed_ptr_05_good ( )		49054	0					
ANR	49080	Callee	CWE416_Use_After_Free__return_freed_ptr_05_good		49054	0					
ANR	49081	Identifier	CWE416_Use_After_Free__return_freed_ptr_05_good		49054	0					
ANR	49082	ArgumentList			49054	1					
ANR	49083	ExpressionStatement	"printLine ( ""Finished good()"" )"	156:4:4510:4538	49054	3	True				
ANR	49084	CallExpression	"printLine ( ""Finished good()"" )"		49054	0					
ANR	49085	Callee	printLine		49054	0					
ANR	49086	Identifier	printLine		49054	0					
ANR	49087	ArgumentList	"""Finished good()"""		49054	1					
ANR	49088	Argument	"""Finished good()"""		49054	0					
ANR	49089	PrimaryExpression	"""Finished good()"""		49054	0					
ANR	49090	ExpressionStatement	"printLine ( ""Calling bad()..."" )"	159:4:4585:4614	49054	4	True				
ANR	49091	CallExpression	"printLine ( ""Calling bad()..."" )"		49054	0					
ANR	49092	Callee	printLine		49054	0					
ANR	49093	Identifier	printLine		49054	0					
ANR	49094	ArgumentList	"""Calling bad()..."""		49054	1					
ANR	49095	Argument	"""Calling bad()..."""		49054	0					
ANR	49096	PrimaryExpression	"""Calling bad()..."""		49054	0					
ANR	49097	ExpressionStatement	CWE416_Use_After_Free__return_freed_ptr_05_bad ( )	160:4:4621:4669	49054	5	True				
ANR	49098	CallExpression	CWE416_Use_After_Free__return_freed_ptr_05_bad ( )		49054	0					
ANR	49099	Callee	CWE416_Use_After_Free__return_freed_ptr_05_bad		49054	0					
ANR	49100	Identifier	CWE416_Use_After_Free__return_freed_ptr_05_bad		49054	0					
ANR	49101	ArgumentList			49054	1					
ANR	49102	ExpressionStatement	"printLine ( ""Finished bad()"" )"	161:4:4676:4703	49054	6	True				
ANR	49103	CallExpression	"printLine ( ""Finished bad()"" )"		49054	0					
ANR	49104	Callee	printLine		49054	0					
ANR	49105	Identifier	printLine		49054	0					
ANR	49106	ArgumentList	"""Finished bad()"""		49054	1					
ANR	49107	Argument	"""Finished bad()"""		49054	0					
ANR	49108	PrimaryExpression	"""Finished bad()"""		49054	0					
ANR	49109	ReturnStatement	return 0 ;	163:4:4732:4740	49054	7	True				
ANR	49110	PrimaryExpression	0		49054	0					
ANR	49111	ReturnType	int		49054	1					
ANR	49112	Identifier	main		49054	2					
ANR	49113	ParameterList	"int argc , char * argv [ ]"		49054	3					
ANR	49114	Parameter	int argc	149:9:4303:4310	49054	0	True				
ANR	49115	ParameterType	int		49054	0					
ANR	49116	Identifier	argc		49054	1					
ANR	49117	Parameter	char * argv [ ]	149:19:4313:4325	49054	1	True				
ANR	49118	ParameterType	char * [ ]		49054	0					
ANR	49119	Identifier	argv		49054	1					
ANR	49120	CFGEntryNode	ENTRY		49054		True				
ANR	49121	CFGExitNode	EXIT		49054		True				
ANR	49122	Symbol	argc		49054						
ANR	49123	Symbol	NULL		49054						
ANR	49124	Symbol	time		49054						
ANR	49125	Symbol	argv		49054						
