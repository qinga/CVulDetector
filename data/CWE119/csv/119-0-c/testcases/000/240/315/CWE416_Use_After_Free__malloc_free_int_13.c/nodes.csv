command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	12634	File	/develop/joernDwkProcess/joern-dev/./output/data/CWE119/source-code/119-0-c/testcases/000/240/315/CWE416_Use_After_Free__malloc_free_int_13.c								
ANR	12635	Function	CWE416_Use_After_Free__malloc_free_int_13_bad	24:0:668:1402							
ANR	12636	FunctionDef	CWE416_Use_After_Free__malloc_free_int_13_bad ()		12635	0					
ANR	12637	CompoundStatement		25:0:722:1402	12635	0					
ANR	12638	IdentifierDeclStatement	int * data ;	26:4:729:739	12635	0	True				
ANR	12639	IdentifierDecl	* data		12635	0					
ANR	12640	IdentifierDeclType	int *		12635	0					
ANR	12641	Identifier	data		12635	1					
ANR	12642	ExpressionStatement	data = NULL	28:4:773:784	12635	1	True				
ANR	12643	AssignmentExpression	data = NULL		12635	0		=			
ANR	12644	Identifier	data		12635	0					
ANR	12645	Identifier	NULL		12635	1					
ANR	12646	IfStatement	if ( GLOBAL_CONST_FIVE == 5 )		12635	2					
ANR	12647	Condition	GLOBAL_CONST_FIVE == 5	29:7:794:813	12635	0	True				
ANR	12648	EqualityExpression	GLOBAL_CONST_FIVE == 5		12635	0		==			
ANR	12649	Identifier	GLOBAL_CONST_FIVE		12635	0					
ANR	12650	PrimaryExpression	5		12635	1					
ANR	12651	CompoundStatement		6:4:98:98	12635	1					
ANR	12652	ExpressionStatement	data = ( int * ) malloc ( 100 * sizeof ( int ) )	31:8:832:869	12635	0	True				
ANR	12653	AssignmentExpression	data = ( int * ) malloc ( 100 * sizeof ( int ) )		12635	0		=			
ANR	12654	Identifier	data		12635	0					
ANR	12655	CastExpression	( int * ) malloc ( 100 * sizeof ( int ) )		12635	1					
ANR	12656	CastTarget	int *		12635	0					
ANR	12657	CallExpression	malloc ( 100 * sizeof ( int ) )		12635	1					
ANR	12658	Callee	malloc		12635	0					
ANR	12659	Identifier	malloc		12635	0					
ANR	12660	ArgumentList	100 * sizeof ( int )		12635	1					
ANR	12661	Argument	100 * sizeof ( int )		12635	0					
ANR	12662	MultiplicativeExpression	100 * sizeof ( int )		12635	0		*			
ANR	12663	PrimaryExpression	100		12635	0					
ANR	12664	SizeofExpression	sizeof ( int )		12635	1					
ANR	12665	Sizeof	sizeof		12635	0					
ANR	12666	SizeofOperand	int		12635	1					
ANR	12667	IfStatement	if ( data == NULL )		12635	1					
ANR	12668	Condition	data == NULL	32:12:884:895	12635	0	True				
ANR	12669	EqualityExpression	data == NULL		12635	0		==			
ANR	12670	Identifier	data		12635	0					
ANR	12671	Identifier	NULL		12635	1					
ANR	12672	CompoundStatement		8:26:175:175	12635	1					
ANR	12673	ExpressionStatement	exit ( - 1 )	32:27:899:907	12635	0	True				
ANR	12674	CallExpression	exit ( - 1 )		12635	0					
ANR	12675	Callee	exit		12635	0					
ANR	12676	Identifier	exit		12635	0					
ANR	12677	ArgumentList	- 1		12635	1					
ANR	12678	Argument	- 1		12635	0					
ANR	12679	UnaryOperationExpression	- 1		12635	0					
ANR	12680	UnaryOperator	-		12635	0					
ANR	12681	PrimaryExpression	1		12635	1					
ANR	12682	CompoundStatement		10:12:210:218	12635	2					
ANR	12683	IdentifierDeclStatement	size_t i ;	34:12:933:941	12635	0	True				
ANR	12684	IdentifierDecl	i		12635	0					
ANR	12685	IdentifierDeclType	size_t		12635	0					
ANR	12686	Identifier	i		12635	1					
ANR	12687	ForStatement	for ( i = 0 ; i < 100 ; i ++ )		12635	1					
ANR	12688	ForInit	i = 0 ;	35:16:960:965	12635	0	True				
ANR	12689	AssignmentExpression	i = 0		12635	0		=			
ANR	12690	Identifier	i		12635	0					
ANR	12691	PrimaryExpression	0		12635	1					
ANR	12692	Condition	i < 100	35:23:967:973	12635	1	True				
ANR	12693	RelationalExpression	i < 100		12635	0		<			
ANR	12694	Identifier	i		12635	0					
ANR	12695	PrimaryExpression	100		12635	1					
ANR	12696	PostIncDecOperationExpression	i ++	35:32:976:978	12635	2	True				
ANR	12697	Identifier	i		12635	0					
ANR	12698	IncDec	++		12635	1					
ANR	12699	CompoundStatement		12:12:271:271	12635	3					
ANR	12700	ExpressionStatement	data [ i ] = 5	37:16:1013:1024	12635	0	True				
ANR	12701	AssignmentExpression	data [ i ] = 5		12635	0		=			
ANR	12702	ArrayIndexing	data [ i ]		12635	0					
ANR	12703	Identifier	data		12635	0					
ANR	12704	Identifier	i		12635	1					
ANR	12705	PrimaryExpression	5		12635	1					
ANR	12706	ExpressionStatement	free ( data )	41:8:1152:1162	12635	3	True				
ANR	12707	CallExpression	free ( data )		12635	0					
ANR	12708	Callee	free		12635	0					
ANR	12709	Identifier	free		12635	0					
ANR	12710	ArgumentList	data		12635	1					
ANR	12711	Argument	data		12635	0					
ANR	12712	Identifier	data		12635	0					
ANR	12713	IfStatement	if ( GLOBAL_CONST_FIVE == 5 )		12635	3					
ANR	12714	Condition	GLOBAL_CONST_FIVE == 5	43:7:1179:1198	12635	0	True				
ANR	12715	EqualityExpression	GLOBAL_CONST_FIVE == 5		12635	0		==			
ANR	12716	Identifier	GLOBAL_CONST_FIVE		12635	0					
ANR	12717	PrimaryExpression	5		12635	1					
ANR	12718	CompoundStatement		20:4:483:483	12635	1					
ANR	12719	ExpressionStatement	printIntLine ( data [ 0 ] )	46:8:1285:1306	12635	0	True				
ANR	12720	CallExpression	printIntLine ( data [ 0 ] )		12635	0					
ANR	12721	Callee	printIntLine		12635	0					
ANR	12722	Identifier	printIntLine		12635	0					
ANR	12723	ArgumentList	data [ 0 ]		12635	1					
ANR	12724	Argument	data [ 0 ]		12635	0					
ANR	12725	ArrayIndexing	data [ 0 ]		12635	0					
ANR	12726	Identifier	data		12635	0					
ANR	12727	PrimaryExpression	0		12635	1					
ANR	12728	ReturnType	void		12635	1					
ANR	12729	Identifier	CWE416_Use_After_Free__malloc_free_int_13_bad		12635	2					
ANR	12730	ParameterList			12635	3					
ANR	12731	CFGEntryNode	ENTRY		12635		True				
ANR	12732	CFGExitNode	EXIT		12635		True				
ANR	12733	Symbol	malloc		12635						
ANR	12734	Symbol	GLOBAL_CONST_FIVE		12635						
ANR	12735	Symbol	NULL		12635						
ANR	12736	Symbol	* i		12635						
ANR	12737	Symbol	data		12635						
ANR	12738	Symbol	i		12635						
ANR	12739	Symbol	* data		12635						
ANR	12740	Function	goodB2G1	56:0:1566:2471							
ANR	12741	FunctionDef	goodB2G1 ()		12740	0					
ANR	12742	CompoundStatement		57:0:1590:2471	12740	0					
ANR	12743	IdentifierDeclStatement	int * data ;	58:4:1597:1607	12740	0	True				
ANR	12744	IdentifierDecl	* data		12740	0					
ANR	12745	IdentifierDeclType	int *		12740	0					
ANR	12746	Identifier	data		12740	1					
ANR	12747	ExpressionStatement	data = NULL	60:4:1641:1652	12740	1	True				
ANR	12748	AssignmentExpression	data = NULL		12740	0		=			
ANR	12749	Identifier	data		12740	0					
ANR	12750	Identifier	NULL		12740	1					
ANR	12751	IfStatement	if ( GLOBAL_CONST_FIVE == 5 )		12740	2					
ANR	12752	Condition	GLOBAL_CONST_FIVE == 5	61:7:1662:1681	12740	0	True				
ANR	12753	EqualityExpression	GLOBAL_CONST_FIVE == 5		12740	0		==			
ANR	12754	Identifier	GLOBAL_CONST_FIVE		12740	0					
ANR	12755	PrimaryExpression	5		12740	1					
ANR	12756	CompoundStatement		6:4:98:98	12740	1					
ANR	12757	ExpressionStatement	data = ( int * ) malloc ( 100 * sizeof ( int ) )	63:8:1700:1737	12740	0	True				
ANR	12758	AssignmentExpression	data = ( int * ) malloc ( 100 * sizeof ( int ) )		12740	0		=			
ANR	12759	Identifier	data		12740	0					
ANR	12760	CastExpression	( int * ) malloc ( 100 * sizeof ( int ) )		12740	1					
ANR	12761	CastTarget	int *		12740	0					
ANR	12762	CallExpression	malloc ( 100 * sizeof ( int ) )		12740	1					
ANR	12763	Callee	malloc		12740	0					
ANR	12764	Identifier	malloc		12740	0					
ANR	12765	ArgumentList	100 * sizeof ( int )		12740	1					
ANR	12766	Argument	100 * sizeof ( int )		12740	0					
ANR	12767	MultiplicativeExpression	100 * sizeof ( int )		12740	0		*			
ANR	12768	PrimaryExpression	100		12740	0					
ANR	12769	SizeofExpression	sizeof ( int )		12740	1					
ANR	12770	Sizeof	sizeof		12740	0					
ANR	12771	SizeofOperand	int		12740	1					
ANR	12772	IfStatement	if ( data == NULL )		12740	1					
ANR	12773	Condition	data == NULL	64:12:1752:1763	12740	0	True				
ANR	12774	EqualityExpression	data == NULL		12740	0		==			
ANR	12775	Identifier	data		12740	0					
ANR	12776	Identifier	NULL		12740	1					
ANR	12777	CompoundStatement		8:26:175:175	12740	1					
ANR	12778	ExpressionStatement	exit ( - 1 )	64:27:1767:1775	12740	0	True				
ANR	12779	CallExpression	exit ( - 1 )		12740	0					
ANR	12780	Callee	exit		12740	0					
ANR	12781	Identifier	exit		12740	0					
ANR	12782	ArgumentList	- 1		12740	1					
ANR	12783	Argument	- 1		12740	0					
ANR	12784	UnaryOperationExpression	- 1		12740	0					
ANR	12785	UnaryOperator	-		12740	0					
ANR	12786	PrimaryExpression	1		12740	1					
ANR	12787	CompoundStatement		10:12:210:218	12740	2					
ANR	12788	IdentifierDeclStatement	size_t i ;	66:12:1801:1809	12740	0	True				
ANR	12789	IdentifierDecl	i		12740	0					
ANR	12790	IdentifierDeclType	size_t		12740	0					
ANR	12791	Identifier	i		12740	1					
ANR	12792	ForStatement	for ( i = 0 ; i < 100 ; i ++ )		12740	1					
ANR	12793	ForInit	i = 0 ;	67:16:1828:1833	12740	0	True				
ANR	12794	AssignmentExpression	i = 0		12740	0		=			
ANR	12795	Identifier	i		12740	0					
ANR	12796	PrimaryExpression	0		12740	1					
ANR	12797	Condition	i < 100	67:23:1835:1841	12740	1	True				
ANR	12798	RelationalExpression	i < 100		12740	0		<			
ANR	12799	Identifier	i		12740	0					
ANR	12800	PrimaryExpression	100		12740	1					
ANR	12801	PostIncDecOperationExpression	i ++	67:32:1844:1846	12740	2	True				
ANR	12802	Identifier	i		12740	0					
ANR	12803	IncDec	++		12740	1					
ANR	12804	CompoundStatement		12:12:271:271	12740	3					
ANR	12805	ExpressionStatement	data [ i ] = 5	69:16:1881:1892	12740	0	True				
ANR	12806	AssignmentExpression	data [ i ] = 5		12740	0		=			
ANR	12807	ArrayIndexing	data [ i ]		12740	0					
ANR	12808	Identifier	data		12740	0					
ANR	12809	Identifier	i		12740	1					
ANR	12810	PrimaryExpression	5		12740	1					
ANR	12811	ExpressionStatement	free ( data )	73:8:2020:2030	12740	3	True				
ANR	12812	CallExpression	free ( data )		12740	0					
ANR	12813	Callee	free		12740	0					
ANR	12814	Identifier	free		12740	0					
ANR	12815	ArgumentList	data		12740	1					
ANR	12816	Argument	data		12740	0					
ANR	12817	Identifier	data		12740	0					
ANR	12818	IfStatement	if ( GLOBAL_CONST_FIVE != 5 )		12740	3					
ANR	12819	Condition	GLOBAL_CONST_FIVE != 5	75:7:2047:2066	12740	0	True				
ANR	12820	EqualityExpression	GLOBAL_CONST_FIVE != 5		12740	0		!=			
ANR	12821	Identifier	GLOBAL_CONST_FIVE		12740	0					
ANR	12822	PrimaryExpression	5		12740	1					
ANR	12823	CompoundStatement		20:4:483:483	12740	1					
ANR	12824	ExpressionStatement	"printLine ( ""Benign, fixed string"" )"	78:8:2161:2194	12740	0	True				
ANR	12825	CallExpression	"printLine ( ""Benign, fixed string"" )"		12740	0					
ANR	12826	Callee	printLine		12740	0					
ANR	12827	Identifier	printLine		12740	0					
ANR	12828	ArgumentList	"""Benign, fixed string"""		12740	1					
ANR	12829	Argument	"""Benign, fixed string"""		12740	0					
ANR	12830	PrimaryExpression	"""Benign, fixed string"""		12740	0					
ANR	12831	ElseStatement	else		12740	0					
ANR	12832	CompoundStatement		25:4:627:627	12740	0					
ANR	12833	ExpressionStatement		85:8:2409:2409	12740	0	True				
ANR	12834	ReturnType	static void		12740	1					
ANR	12835	Identifier	goodB2G1		12740	2					
ANR	12836	ParameterList			12740	3					
ANR	12837	CFGEntryNode	ENTRY		12740		True				
ANR	12838	CFGExitNode	EXIT		12740		True				
ANR	12839	Symbol	malloc		12740						
ANR	12840	Symbol	GLOBAL_CONST_FIVE		12740						
ANR	12841	Symbol	NULL		12740						
ANR	12842	Symbol	* i		12740						
ANR	12843	Symbol	data		12740						
ANR	12844	Symbol	i		12740						
ANR	12845	Symbol	* data		12740						
ANR	12846	Function	goodB2G2	90:0:2564:3325							
ANR	12847	FunctionDef	goodB2G2 ()		12846	0					
ANR	12848	CompoundStatement		91:0:2588:3325	12846	0					
ANR	12849	IdentifierDeclStatement	int * data ;	92:4:2595:2605	12846	0	True				
ANR	12850	IdentifierDecl	* data		12846	0					
ANR	12851	IdentifierDeclType	int *		12846	0					
ANR	12852	Identifier	data		12846	1					
ANR	12853	ExpressionStatement	data = NULL	94:4:2639:2650	12846	1	True				
ANR	12854	AssignmentExpression	data = NULL		12846	0		=			
ANR	12855	Identifier	data		12846	0					
ANR	12856	Identifier	NULL		12846	1					
ANR	12857	IfStatement	if ( GLOBAL_CONST_FIVE == 5 )		12846	2					
ANR	12858	Condition	GLOBAL_CONST_FIVE == 5	95:7:2660:2679	12846	0	True				
ANR	12859	EqualityExpression	GLOBAL_CONST_FIVE == 5		12846	0		==			
ANR	12860	Identifier	GLOBAL_CONST_FIVE		12846	0					
ANR	12861	PrimaryExpression	5		12846	1					
ANR	12862	CompoundStatement		6:4:98:98	12846	1					
ANR	12863	ExpressionStatement	data = ( int * ) malloc ( 100 * sizeof ( int ) )	97:8:2698:2735	12846	0	True				
ANR	12864	AssignmentExpression	data = ( int * ) malloc ( 100 * sizeof ( int ) )		12846	0		=			
ANR	12865	Identifier	data		12846	0					
ANR	12866	CastExpression	( int * ) malloc ( 100 * sizeof ( int ) )		12846	1					
ANR	12867	CastTarget	int *		12846	0					
ANR	12868	CallExpression	malloc ( 100 * sizeof ( int ) )		12846	1					
ANR	12869	Callee	malloc		12846	0					
ANR	12870	Identifier	malloc		12846	0					
ANR	12871	ArgumentList	100 * sizeof ( int )		12846	1					
ANR	12872	Argument	100 * sizeof ( int )		12846	0					
ANR	12873	MultiplicativeExpression	100 * sizeof ( int )		12846	0		*			
ANR	12874	PrimaryExpression	100		12846	0					
ANR	12875	SizeofExpression	sizeof ( int )		12846	1					
ANR	12876	Sizeof	sizeof		12846	0					
ANR	12877	SizeofOperand	int		12846	1					
ANR	12878	IfStatement	if ( data == NULL )		12846	1					
ANR	12879	Condition	data == NULL	98:12:2750:2761	12846	0	True				
ANR	12880	EqualityExpression	data == NULL		12846	0		==			
ANR	12881	Identifier	data		12846	0					
ANR	12882	Identifier	NULL		12846	1					
ANR	12883	CompoundStatement		8:26:175:175	12846	1					
ANR	12884	ExpressionStatement	exit ( - 1 )	98:27:2765:2773	12846	0	True				
ANR	12885	CallExpression	exit ( - 1 )		12846	0					
ANR	12886	Callee	exit		12846	0					
ANR	12887	Identifier	exit		12846	0					
ANR	12888	ArgumentList	- 1		12846	1					
ANR	12889	Argument	- 1		12846	0					
ANR	12890	UnaryOperationExpression	- 1		12846	0					
ANR	12891	UnaryOperator	-		12846	0					
ANR	12892	PrimaryExpression	1		12846	1					
ANR	12893	CompoundStatement		10:12:210:218	12846	2					
ANR	12894	IdentifierDeclStatement	size_t i ;	100:12:2799:2807	12846	0	True				
ANR	12895	IdentifierDecl	i		12846	0					
ANR	12896	IdentifierDeclType	size_t		12846	0					
ANR	12897	Identifier	i		12846	1					
ANR	12898	ForStatement	for ( i = 0 ; i < 100 ; i ++ )		12846	1					
ANR	12899	ForInit	i = 0 ;	101:16:2826:2831	12846	0	True				
ANR	12900	AssignmentExpression	i = 0		12846	0		=			
ANR	12901	Identifier	i		12846	0					
ANR	12902	PrimaryExpression	0		12846	1					
ANR	12903	Condition	i < 100	101:23:2833:2839	12846	1	True				
ANR	12904	RelationalExpression	i < 100		12846	0		<			
ANR	12905	Identifier	i		12846	0					
ANR	12906	PrimaryExpression	100		12846	1					
ANR	12907	PostIncDecOperationExpression	i ++	101:32:2842:2844	12846	2	True				
ANR	12908	Identifier	i		12846	0					
ANR	12909	IncDec	++		12846	1					
ANR	12910	CompoundStatement		12:12:271:271	12846	3					
ANR	12911	ExpressionStatement	data [ i ] = 5	103:16:2879:2890	12846	0	True				
ANR	12912	AssignmentExpression	data [ i ] = 5		12846	0		=			
ANR	12913	ArrayIndexing	data [ i ]		12846	0					
ANR	12914	Identifier	data		12846	0					
ANR	12915	Identifier	i		12846	1					
ANR	12916	PrimaryExpression	5		12846	1					
ANR	12917	ExpressionStatement	free ( data )	107:8:3018:3028	12846	3	True				
ANR	12918	CallExpression	free ( data )		12846	0					
ANR	12919	Callee	free		12846	0					
ANR	12920	Identifier	free		12846	0					
ANR	12921	ArgumentList	data		12846	1					
ANR	12922	Argument	data		12846	0					
ANR	12923	Identifier	data		12846	0					
ANR	12924	IfStatement	if ( GLOBAL_CONST_FIVE == 5 )		12846	3					
ANR	12925	Condition	GLOBAL_CONST_FIVE == 5	109:7:3045:3064	12846	0	True				
ANR	12926	EqualityExpression	GLOBAL_CONST_FIVE == 5		12846	0		==			
ANR	12927	Identifier	GLOBAL_CONST_FIVE		12846	0					
ANR	12928	PrimaryExpression	5		12846	1					
ANR	12929	CompoundStatement		20:4:483:483	12846	1					
ANR	12930	ExpressionStatement		114:8:3263:3263	12846	0	True				
ANR	12931	ReturnType	static void		12846	1					
ANR	12932	Identifier	goodB2G2		12846	2					
ANR	12933	ParameterList			12846	3					
ANR	12934	CFGEntryNode	ENTRY		12846		True				
ANR	12935	CFGExitNode	EXIT		12846		True				
ANR	12936	Symbol	malloc		12846						
ANR	12937	Symbol	GLOBAL_CONST_FIVE		12846						
ANR	12938	Symbol	NULL		12846						
ANR	12939	Symbol	* i		12846						
ANR	12940	Symbol	data		12846						
ANR	12941	Symbol	i		12846						
ANR	12942	Symbol	* data		12846						
ANR	12943	Function	goodG2B1	119:0:3444:4231							
ANR	12944	FunctionDef	goodG2B1 ()		12943	0					
ANR	12945	CompoundStatement		120:0:3468:4231	12943	0					
ANR	12946	IdentifierDeclStatement	int * data ;	121:4:3475:3485	12943	0	True				
ANR	12947	IdentifierDecl	* data		12943	0					
ANR	12948	IdentifierDeclType	int *		12943	0					
ANR	12949	Identifier	data		12943	1					
ANR	12950	ExpressionStatement	data = NULL	123:4:3519:3530	12943	1	True				
ANR	12951	AssignmentExpression	data = NULL		12943	0		=			
ANR	12952	Identifier	data		12943	0					
ANR	12953	Identifier	NULL		12943	1					
ANR	12954	IfStatement	if ( GLOBAL_CONST_FIVE != 5 )		12943	2					
ANR	12955	Condition	GLOBAL_CONST_FIVE != 5	124:7:3540:3559	12943	0	True				
ANR	12956	EqualityExpression	GLOBAL_CONST_FIVE != 5		12943	0		!=			
ANR	12957	Identifier	GLOBAL_CONST_FIVE		12943	0					
ANR	12958	PrimaryExpression	5		12943	1					
ANR	12959	CompoundStatement		6:4:98:98	12943	1					
ANR	12960	ExpressionStatement	"printLine ( ""Benign, fixed string"" )"	127:8:3654:3687	12943	0	True				
ANR	12961	CallExpression	"printLine ( ""Benign, fixed string"" )"		12943	0					
ANR	12962	Callee	printLine		12943	0					
ANR	12963	Identifier	printLine		12943	0					
ANR	12964	ArgumentList	"""Benign, fixed string"""		12943	1					
ANR	12965	Argument	"""Benign, fixed string"""		12943	0					
ANR	12966	PrimaryExpression	"""Benign, fixed string"""		12943	0					
ANR	12967	ElseStatement	else		12943	0					
ANR	12968	CompoundStatement		11:4:242:242	12943	0					
ANR	12969	ExpressionStatement	data = ( int * ) malloc ( 100 * sizeof ( int ) )	131:8:3722:3759	12943	0	True				
ANR	12970	AssignmentExpression	data = ( int * ) malloc ( 100 * sizeof ( int ) )		12943	0		=			
ANR	12971	Identifier	data		12943	0					
ANR	12972	CastExpression	( int * ) malloc ( 100 * sizeof ( int ) )		12943	1					
ANR	12973	CastTarget	int *		12943	0					
ANR	12974	CallExpression	malloc ( 100 * sizeof ( int ) )		12943	1					
ANR	12975	Callee	malloc		12943	0					
ANR	12976	Identifier	malloc		12943	0					
ANR	12977	ArgumentList	100 * sizeof ( int )		12943	1					
ANR	12978	Argument	100 * sizeof ( int )		12943	0					
ANR	12979	MultiplicativeExpression	100 * sizeof ( int )		12943	0		*			
ANR	12980	PrimaryExpression	100		12943	0					
ANR	12981	SizeofExpression	sizeof ( int )		12943	1					
ANR	12982	Sizeof	sizeof		12943	0					
ANR	12983	SizeofOperand	int		12943	1					
ANR	12984	IfStatement	if ( data == NULL )		12943	1					
ANR	12985	Condition	data == NULL	132:12:3774:3785	12943	0	True				
ANR	12986	EqualityExpression	data == NULL		12943	0		==			
ANR	12987	Identifier	data		12943	0					
ANR	12988	Identifier	NULL		12943	1					
ANR	12989	CompoundStatement		13:26:319:319	12943	1					
ANR	12990	ExpressionStatement	exit ( - 1 )	132:27:3789:3797	12943	0	True				
ANR	12991	CallExpression	exit ( - 1 )		12943	0					
ANR	12992	Callee	exit		12943	0					
ANR	12993	Identifier	exit		12943	0					
ANR	12994	ArgumentList	- 1		12943	1					
ANR	12995	Argument	- 1		12943	0					
ANR	12996	UnaryOperationExpression	- 1		12943	0					
ANR	12997	UnaryOperator	-		12943	0					
ANR	12998	PrimaryExpression	1		12943	1					
ANR	12999	CompoundStatement		15:12:354:362	12943	2					
ANR	13000	IdentifierDeclStatement	size_t i ;	134:12:3823:3831	12943	0	True				
ANR	13001	IdentifierDecl	i		12943	0					
ANR	13002	IdentifierDeclType	size_t		12943	0					
ANR	13003	Identifier	i		12943	1					
ANR	13004	ForStatement	for ( i = 0 ; i < 100 ; i ++ )		12943	1					
ANR	13005	ForInit	i = 0 ;	135:16:3850:3855	12943	0	True				
ANR	13006	AssignmentExpression	i = 0		12943	0		=			
ANR	13007	Identifier	i		12943	0					
ANR	13008	PrimaryExpression	0		12943	1					
ANR	13009	Condition	i < 100	135:23:3857:3863	12943	1	True				
ANR	13010	RelationalExpression	i < 100		12943	0		<			
ANR	13011	Identifier	i		12943	0					
ANR	13012	PrimaryExpression	100		12943	1					
ANR	13013	PostIncDecOperationExpression	i ++	135:32:3866:3868	12943	2	True				
ANR	13014	Identifier	i		12943	0					
ANR	13015	IncDec	++		12943	1					
ANR	13016	CompoundStatement		17:12:415:415	12943	3					
ANR	13017	ExpressionStatement	data [ i ] = 5	137:16:3903:3914	12943	0	True				
ANR	13018	AssignmentExpression	data [ i ] = 5		12943	0		=			
ANR	13019	ArrayIndexing	data [ i ]		12943	0					
ANR	13020	Identifier	data		12943	0					
ANR	13021	Identifier	i		12943	1					
ANR	13022	PrimaryExpression	5		12943	1					
ANR	13023	IfStatement	if ( GLOBAL_CONST_FIVE == 5 )		12943	3					
ANR	13024	Condition	GLOBAL_CONST_FIVE == 5	142:7:4008:4027	12943	0	True				
ANR	13025	EqualityExpression	GLOBAL_CONST_FIVE == 5		12943	0		==			
ANR	13026	Identifier	GLOBAL_CONST_FIVE		12943	0					
ANR	13027	PrimaryExpression	5		12943	1					
ANR	13028	CompoundStatement		24:4:566:566	12943	1					
ANR	13029	ExpressionStatement	printIntLine ( data [ 0 ] )	145:8:4114:4135	12943	0	True				
ANR	13030	CallExpression	printIntLine ( data [ 0 ] )		12943	0					
ANR	13031	Callee	printIntLine		12943	0					
ANR	13032	Identifier	printIntLine		12943	0					
ANR	13033	ArgumentList	data [ 0 ]		12943	1					
ANR	13034	Argument	data [ 0 ]		12943	0					
ANR	13035	ArrayIndexing	data [ 0 ]		12943	0					
ANR	13036	Identifier	data		12943	0					
ANR	13037	PrimaryExpression	0		12943	1					
ANR	13038	ReturnType	static void		12943	1					
ANR	13039	Identifier	goodG2B1		12943	2					
ANR	13040	ParameterList			12943	3					
ANR	13041	CFGEntryNode	ENTRY		12943		True				
ANR	13042	CFGExitNode	EXIT		12943		True				
ANR	13043	Symbol	malloc		12943						
ANR	13044	Symbol	GLOBAL_CONST_FIVE		12943						
ANR	13045	Symbol	NULL		12943						
ANR	13046	Symbol	* i		12943						
ANR	13047	Symbol	data		12943						
ANR	13048	Symbol	i		12943						
ANR	13049	Symbol	* data		12943						
ANR	13050	Function	goodG2B2	151:0:4323:4966							
ANR	13051	FunctionDef	goodG2B2 ()		13050	0					
ANR	13052	CompoundStatement		152:0:4347:4966	13050	0					
ANR	13053	IdentifierDeclStatement	int * data ;	153:4:4354:4364	13050	0	True				
ANR	13054	IdentifierDecl	* data		13050	0					
ANR	13055	IdentifierDeclType	int *		13050	0					
ANR	13056	Identifier	data		13050	1					
ANR	13057	ExpressionStatement	data = NULL	155:4:4398:4409	13050	1	True				
ANR	13058	AssignmentExpression	data = NULL		13050	0		=			
ANR	13059	Identifier	data		13050	0					
ANR	13060	Identifier	NULL		13050	1					
ANR	13061	IfStatement	if ( GLOBAL_CONST_FIVE == 5 )		13050	2					
ANR	13062	Condition	GLOBAL_CONST_FIVE == 5	156:7:4419:4438	13050	0	True				
ANR	13063	EqualityExpression	GLOBAL_CONST_FIVE == 5		13050	0		==			
ANR	13064	Identifier	GLOBAL_CONST_FIVE		13050	0					
ANR	13065	PrimaryExpression	5		13050	1					
ANR	13066	CompoundStatement		6:4:98:98	13050	1					
ANR	13067	ExpressionStatement	data = ( int * ) malloc ( 100 * sizeof ( int ) )	158:8:4457:4494	13050	0	True				
ANR	13068	AssignmentExpression	data = ( int * ) malloc ( 100 * sizeof ( int ) )		13050	0		=			
ANR	13069	Identifier	data		13050	0					
ANR	13070	CastExpression	( int * ) malloc ( 100 * sizeof ( int ) )		13050	1					
ANR	13071	CastTarget	int *		13050	0					
ANR	13072	CallExpression	malloc ( 100 * sizeof ( int ) )		13050	1					
ANR	13073	Callee	malloc		13050	0					
ANR	13074	Identifier	malloc		13050	0					
ANR	13075	ArgumentList	100 * sizeof ( int )		13050	1					
ANR	13076	Argument	100 * sizeof ( int )		13050	0					
ANR	13077	MultiplicativeExpression	100 * sizeof ( int )		13050	0		*			
ANR	13078	PrimaryExpression	100		13050	0					
ANR	13079	SizeofExpression	sizeof ( int )		13050	1					
ANR	13080	Sizeof	sizeof		13050	0					
ANR	13081	SizeofOperand	int		13050	1					
ANR	13082	IfStatement	if ( data == NULL )		13050	1					
ANR	13083	Condition	data == NULL	159:12:4509:4520	13050	0	True				
ANR	13084	EqualityExpression	data == NULL		13050	0		==			
ANR	13085	Identifier	data		13050	0					
ANR	13086	Identifier	NULL		13050	1					
ANR	13087	CompoundStatement		8:26:175:175	13050	1					
ANR	13088	ExpressionStatement	exit ( - 1 )	159:27:4524:4532	13050	0	True				
ANR	13089	CallExpression	exit ( - 1 )		13050	0					
ANR	13090	Callee	exit		13050	0					
ANR	13091	Identifier	exit		13050	0					
ANR	13092	ArgumentList	- 1		13050	1					
ANR	13093	Argument	- 1		13050	0					
ANR	13094	UnaryOperationExpression	- 1		13050	0					
ANR	13095	UnaryOperator	-		13050	0					
ANR	13096	PrimaryExpression	1		13050	1					
ANR	13097	CompoundStatement		10:12:210:218	13050	2					
ANR	13098	IdentifierDeclStatement	size_t i ;	161:12:4558:4566	13050	0	True				
ANR	13099	IdentifierDecl	i		13050	0					
ANR	13100	IdentifierDeclType	size_t		13050	0					
ANR	13101	Identifier	i		13050	1					
ANR	13102	ForStatement	for ( i = 0 ; i < 100 ; i ++ )		13050	1					
ANR	13103	ForInit	i = 0 ;	162:16:4585:4590	13050	0	True				
ANR	13104	AssignmentExpression	i = 0		13050	0		=			
ANR	13105	Identifier	i		13050	0					
ANR	13106	PrimaryExpression	0		13050	1					
ANR	13107	Condition	i < 100	162:23:4592:4598	13050	1	True				
ANR	13108	RelationalExpression	i < 100		13050	0		<			
ANR	13109	Identifier	i		13050	0					
ANR	13110	PrimaryExpression	100		13050	1					
ANR	13111	PostIncDecOperationExpression	i ++	162:32:4601:4603	13050	2	True				
ANR	13112	Identifier	i		13050	0					
ANR	13113	IncDec	++		13050	1					
ANR	13114	CompoundStatement		12:12:271:271	13050	3					
ANR	13115	ExpressionStatement	data [ i ] = 5	164:16:4638:4649	13050	0	True				
ANR	13116	AssignmentExpression	data [ i ] = 5		13050	0		=			
ANR	13117	ArrayIndexing	data [ i ]		13050	0					
ANR	13118	Identifier	data		13050	0					
ANR	13119	Identifier	i		13050	1					
ANR	13120	PrimaryExpression	5		13050	1					
ANR	13121	IfStatement	if ( GLOBAL_CONST_FIVE == 5 )		13050	3					
ANR	13122	Condition	GLOBAL_CONST_FIVE == 5	169:7:4743:4762	13050	0	True				
ANR	13123	EqualityExpression	GLOBAL_CONST_FIVE == 5		13050	0		==			
ANR	13124	Identifier	GLOBAL_CONST_FIVE		13050	0					
ANR	13125	PrimaryExpression	5		13050	1					
ANR	13126	CompoundStatement		19:4:422:422	13050	1					
ANR	13127	ExpressionStatement	printIntLine ( data [ 0 ] )	172:8:4849:4870	13050	0	True				
ANR	13128	CallExpression	printIntLine ( data [ 0 ] )		13050	0					
ANR	13129	Callee	printIntLine		13050	0					
ANR	13130	Identifier	printIntLine		13050	0					
ANR	13131	ArgumentList	data [ 0 ]		13050	1					
ANR	13132	Argument	data [ 0 ]		13050	0					
ANR	13133	ArrayIndexing	data [ 0 ]		13050	0					
ANR	13134	Identifier	data		13050	0					
ANR	13135	PrimaryExpression	0		13050	1					
ANR	13136	ReturnType	static void		13050	1					
ANR	13137	Identifier	goodG2B2		13050	2					
ANR	13138	ParameterList			13050	3					
ANR	13139	CFGEntryNode	ENTRY		13050		True				
ANR	13140	CFGExitNode	EXIT		13050		True				
ANR	13141	Symbol	malloc		13050						
ANR	13142	Symbol	GLOBAL_CONST_FIVE		13050						
ANR	13143	Symbol	NULL		13050						
ANR	13144	Symbol	* i		13050						
ANR	13145	Symbol	data		13050						
ANR	13146	Symbol	i		13050						
ANR	13147	Symbol	* data		13050						
ANR	13148	Function	CWE416_Use_After_Free__malloc_free_int_13_good	177:0:4971:5097							
ANR	13149	FunctionDef	CWE416_Use_After_Free__malloc_free_int_13_good ()		13148	0					
ANR	13150	CompoundStatement		178:0:5026:5097	13148	0					
ANR	13151	ExpressionStatement	goodB2G1 ( )	179:4:5033:5043	13148	0	True				
ANR	13152	CallExpression	goodB2G1 ( )		13148	0					
ANR	13153	Callee	goodB2G1		13148	0					
ANR	13154	Identifier	goodB2G1		13148	0					
ANR	13155	ArgumentList			13148	1					
ANR	13156	ExpressionStatement	goodB2G2 ( )	180:4:5050:5060	13148	1	True				
ANR	13157	CallExpression	goodB2G2 ( )		13148	0					
ANR	13158	Callee	goodB2G2		13148	0					
ANR	13159	Identifier	goodB2G2		13148	0					
ANR	13160	ArgumentList			13148	1					
ANR	13161	ExpressionStatement	goodG2B1 ( )	181:4:5067:5077	13148	2	True				
ANR	13162	CallExpression	goodG2B1 ( )		13148	0					
ANR	13163	Callee	goodG2B1		13148	0					
ANR	13164	Identifier	goodG2B1		13148	0					
ANR	13165	ArgumentList			13148	1					
ANR	13166	ExpressionStatement	goodG2B2 ( )	182:4:5084:5094	13148	3	True				
ANR	13167	CallExpression	goodG2B2 ( )		13148	0					
ANR	13168	Callee	goodG2B2		13148	0					
ANR	13169	Identifier	goodG2B2		13148	0					
ANR	13170	ArgumentList			13148	1					
ANR	13171	ReturnType	void		13148	1					
ANR	13172	Identifier	CWE416_Use_After_Free__malloc_free_int_13_good		13148	2					
ANR	13173	ParameterList			13148	3					
ANR	13174	CFGEntryNode	ENTRY		13148		True				
ANR	13175	CFGExitNode	EXIT		13148		True				
ANR	13176	Function	main	194:0:5444:5891							
ANR	13177	FunctionDef	"main (int argc , char * argv [ ])"		13176	0					
ANR	13178	CompoundStatement		195:0:5479:5891	13176	0					
ANR	13179	ExpressionStatement	srand ( ( unsigned ) time ( NULL ) )	197:4:5513:5542	13176	0	True				
ANR	13180	CallExpression	srand ( ( unsigned ) time ( NULL ) )		13176	0					
ANR	13181	Callee	srand		13176	0					
ANR	13182	Identifier	srand		13176	0					
ANR	13183	ArgumentList	( unsigned ) time ( NULL )		13176	1					
ANR	13184	Argument	( unsigned ) time ( NULL )		13176	0					
ANR	13185	CastExpression	( unsigned ) time ( NULL )		13176	0					
ANR	13186	CastTarget	unsigned		13176	0					
ANR	13187	CallExpression	time ( NULL )		13176	1					
ANR	13188	Callee	time		13176	0					
ANR	13189	Identifier	time		13176	0					
ANR	13190	ArgumentList	NULL		13176	1					
ANR	13191	Argument	NULL		13176	0					
ANR	13192	Identifier	NULL		13176	0					
ANR	13193	ExpressionStatement	"printLine ( ""Calling good()..."" )"	199:4:5567:5597	13176	1	True				
ANR	13194	CallExpression	"printLine ( ""Calling good()..."" )"		13176	0					
ANR	13195	Callee	printLine		13176	0					
ANR	13196	Identifier	printLine		13176	0					
ANR	13197	ArgumentList	"""Calling good()..."""		13176	1					
ANR	13198	Argument	"""Calling good()..."""		13176	0					
ANR	13199	PrimaryExpression	"""Calling good()..."""		13176	0					
ANR	13200	ExpressionStatement	CWE416_Use_After_Free__malloc_free_int_13_good ( )	200:4:5604:5652	13176	2	True				
ANR	13201	CallExpression	CWE416_Use_After_Free__malloc_free_int_13_good ( )		13176	0					
ANR	13202	Callee	CWE416_Use_After_Free__malloc_free_int_13_good		13176	0					
ANR	13203	Identifier	CWE416_Use_After_Free__malloc_free_int_13_good		13176	0					
ANR	13204	ArgumentList			13176	1					
ANR	13205	ExpressionStatement	"printLine ( ""Finished good()"" )"	201:4:5659:5687	13176	3	True				
ANR	13206	CallExpression	"printLine ( ""Finished good()"" )"		13176	0					
ANR	13207	Callee	printLine		13176	0					
ANR	13208	Identifier	printLine		13176	0					
ANR	13209	ArgumentList	"""Finished good()"""		13176	1					
ANR	13210	Argument	"""Finished good()"""		13176	0					
ANR	13211	PrimaryExpression	"""Finished good()"""		13176	0					
ANR	13212	ExpressionStatement	"printLine ( ""Calling bad()..."" )"	204:4:5734:5763	13176	4	True				
ANR	13213	CallExpression	"printLine ( ""Calling bad()..."" )"		13176	0					
ANR	13214	Callee	printLine		13176	0					
ANR	13215	Identifier	printLine		13176	0					
ANR	13216	ArgumentList	"""Calling bad()..."""		13176	1					
ANR	13217	Argument	"""Calling bad()..."""		13176	0					
ANR	13218	PrimaryExpression	"""Calling bad()..."""		13176	0					
ANR	13219	ExpressionStatement	CWE416_Use_After_Free__malloc_free_int_13_bad ( )	205:4:5770:5817	13176	5	True				
ANR	13220	CallExpression	CWE416_Use_After_Free__malloc_free_int_13_bad ( )		13176	0					
ANR	13221	Callee	CWE416_Use_After_Free__malloc_free_int_13_bad		13176	0					
ANR	13222	Identifier	CWE416_Use_After_Free__malloc_free_int_13_bad		13176	0					
ANR	13223	ArgumentList			13176	1					
ANR	13224	ExpressionStatement	"printLine ( ""Finished bad()"" )"	206:4:5824:5851	13176	6	True				
ANR	13225	CallExpression	"printLine ( ""Finished bad()"" )"		13176	0					
ANR	13226	Callee	printLine		13176	0					
ANR	13227	Identifier	printLine		13176	0					
ANR	13228	ArgumentList	"""Finished bad()"""		13176	1					
ANR	13229	Argument	"""Finished bad()"""		13176	0					
ANR	13230	PrimaryExpression	"""Finished bad()"""		13176	0					
ANR	13231	ReturnStatement	return 0 ;	208:4:5880:5888	13176	7	True				
ANR	13232	PrimaryExpression	0		13176	0					
ANR	13233	ReturnType	int		13176	1					
ANR	13234	Identifier	main		13176	2					
ANR	13235	ParameterList	"int argc , char * argv [ ]"		13176	3					
ANR	13236	Parameter	int argc	194:9:5453:5460	13176	0	True				
ANR	13237	ParameterType	int		13176	0					
ANR	13238	Identifier	argc		13176	1					
ANR	13239	Parameter	char * argv [ ]	194:19:5463:5475	13176	1	True				
ANR	13240	ParameterType	char * [ ]		13176	0					
ANR	13241	Identifier	argv		13176	1					
ANR	13242	CFGEntryNode	ENTRY		13176		True				
ANR	13243	CFGExitNode	EXIT		13176		True				
ANR	13244	Symbol	argc		13176						
ANR	13245	Symbol	NULL		13176						
ANR	13246	Symbol	time		13176						
ANR	13247	Symbol	argv		13176						
