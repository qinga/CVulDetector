command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	52813	File	/develop/joernDwkProcess/joern-dev/./output/data/CWE119/source-code/119-0-c/testcases/000/240/396/CWE416_Use_After_Free__return_freed_ptr_14.c								
ANR	52814	Function	helperBad	18:0:537:1157							
ANR	52815	FunctionDef	helperBad (char * aString)		52814	0					
ANR	52816	CompoundStatement		19:0:578:1157	52814	0					
ANR	52817	IdentifierDeclStatement	size_t i = 0 ;	20:4:585:597	52814	0	True				
ANR	52818	IdentifierDecl	i = 0		52814	0					
ANR	52819	IdentifierDeclType	size_t		52814	0					
ANR	52820	Identifier	i		52814	1					
ANR	52821	AssignmentExpression	i = 0		52814	2		=			
ANR	52822	Identifier	i		52814	0					
ANR	52823	PrimaryExpression	0		52814	1					
ANR	52824	IdentifierDeclStatement	size_t j ;	21:4:604:612	52814	1	True				
ANR	52825	IdentifierDecl	j		52814	0					
ANR	52826	IdentifierDeclType	size_t		52814	0					
ANR	52827	Identifier	j		52814	1					
ANR	52828	IdentifierDeclStatement	char * reversedString = NULL ;	22:4:619:647	52814	2	True				
ANR	52829	IdentifierDecl	* reversedString = NULL		52814	0					
ANR	52830	IdentifierDeclType	char *		52814	0					
ANR	52831	Identifier	reversedString		52814	1					
ANR	52832	AssignmentExpression	* reversedString = NULL		52814	2		=			
ANR	52833	Identifier	NULL		52814	0					
ANR	52834	Identifier	NULL		52814	1					
ANR	52835	IfStatement	if ( aString != NULL )		52814	3					
ANR	52836	Condition	aString != NULL	23:8:658:672	52814	0	True				
ANR	52837	EqualityExpression	aString != NULL		52814	0		!=			
ANR	52838	Identifier	aString		52814	0					
ANR	52839	Identifier	NULL		52814	1					
ANR	52840	CompoundStatement		6:4:101:101	52814	1					
ANR	52841	ExpressionStatement	i = strlen ( aString )	25:8:691:710	52814	0	True				
ANR	52842	AssignmentExpression	i = strlen ( aString )		52814	0		=			
ANR	52843	Identifier	i		52814	0					
ANR	52844	CallExpression	strlen ( aString )		52814	1					
ANR	52845	Callee	strlen		52814	0					
ANR	52846	Identifier	strlen		52814	0					
ANR	52847	ArgumentList	aString		52814	1					
ANR	52848	Argument	aString		52814	0					
ANR	52849	Identifier	aString		52814	0					
ANR	52850	ExpressionStatement	reversedString = ( char * ) malloc ( i + 1 )	26:8:721:758	52814	1	True				
ANR	52851	AssignmentExpression	reversedString = ( char * ) malloc ( i + 1 )		52814	0		=			
ANR	52852	Identifier	reversedString		52814	0					
ANR	52853	CastExpression	( char * ) malloc ( i + 1 )		52814	1					
ANR	52854	CastTarget	char *		52814	0					
ANR	52855	CallExpression	malloc ( i + 1 )		52814	1					
ANR	52856	Callee	malloc		52814	0					
ANR	52857	Identifier	malloc		52814	0					
ANR	52858	ArgumentList	i + 1		52814	1					
ANR	52859	Argument	i + 1		52814	0					
ANR	52860	AdditiveExpression	i + 1		52814	0		+			
ANR	52861	Identifier	i		52814	0					
ANR	52862	PrimaryExpression	1		52814	1					
ANR	52863	IfStatement	if ( reversedString == NULL )		52814	2					
ANR	52864	Condition	reversedString == NULL	27:12:773:794	52814	0	True				
ANR	52865	EqualityExpression	reversedString == NULL		52814	0		==			
ANR	52866	Identifier	reversedString		52814	0					
ANR	52867	Identifier	NULL		52814	1					
ANR	52868	CompoundStatement		9:36:218:218	52814	1					
ANR	52869	ExpressionStatement	exit ( - 1 )	27:37:798:806	52814	0	True				
ANR	52870	CallExpression	exit ( - 1 )		52814	0					
ANR	52871	Callee	exit		52814	0					
ANR	52872	Identifier	exit		52814	0					
ANR	52873	ArgumentList	- 1		52814	1					
ANR	52874	Argument	- 1		52814	0					
ANR	52875	UnaryOperationExpression	- 1		52814	0					
ANR	52876	UnaryOperator	-		52814	0					
ANR	52877	PrimaryExpression	1		52814	1					
ANR	52878	ForStatement	for ( j = 0 ; j < i ; j ++ )		52814	3					
ANR	52879	ForInit	j = 0 ;	28:13:822:827	52814	0	True				
ANR	52880	AssignmentExpression	j = 0		52814	0		=			
ANR	52881	Identifier	j		52814	0					
ANR	52882	PrimaryExpression	0		52814	1					
ANR	52883	Condition	j < i	28:20:829:833	52814	1	True				
ANR	52884	RelationalExpression	j < i		52814	0		<			
ANR	52885	Identifier	j		52814	0					
ANR	52886	Identifier	i		52814	1					
ANR	52887	PostIncDecOperationExpression	j ++	28:27:836:838	52814	2	True				
ANR	52888	Identifier	j		52814	0					
ANR	52889	IncDec	++		52814	1					
ANR	52890	CompoundStatement		11:8:271:271	52814	3					
ANR	52891	ExpressionStatement	reversedString [ j ] = aString [ i - j - 1 ]	30:12:865:899	52814	0	True				
ANR	52892	AssignmentExpression	reversedString [ j ] = aString [ i - j - 1 ]		52814	0		=			
ANR	52893	ArrayIndexing	reversedString [ j ]		52814	0					
ANR	52894	Identifier	reversedString		52814	0					
ANR	52895	Identifier	j		52814	1					
ANR	52896	ArrayIndexing	aString [ i - j - 1 ]		52814	1					
ANR	52897	Identifier	aString		52814	0					
ANR	52898	AdditiveExpression	i - j - 1		52814	1		-			
ANR	52899	Identifier	i		52814	0					
ANR	52900	AdditiveExpression	j - 1		52814	1		-			
ANR	52901	Identifier	j		52814	0					
ANR	52902	PrimaryExpression	1		52814	1					
ANR	52903	ExpressionStatement	reversedString [ i ] = '\\0'	32:8:921:945	52814	4	True				
ANR	52904	AssignmentExpression	reversedString [ i ] = '\\0'		52814	0		=			
ANR	52905	ArrayIndexing	reversedString [ i ]		52814	0					
ANR	52906	Identifier	reversedString		52814	0					
ANR	52907	Identifier	i		52814	1					
ANR	52908	PrimaryExpression	'\\0'		52814	1					
ANR	52909	ExpressionStatement	free ( reversedString )	34:8:1049:1069	52814	5	True				
ANR	52910	CallExpression	free ( reversedString )		52814	0					
ANR	52911	Callee	free		52814	0					
ANR	52912	Identifier	free		52814	0					
ANR	52913	ArgumentList	reversedString		52814	1					
ANR	52914	Argument	reversedString		52814	0					
ANR	52915	Identifier	reversedString		52814	0					
ANR	52916	ReturnStatement	return reversedString ;	35:8:1080:1101	52814	6	True				
ANR	52917	Identifier	reversedString		52814	0					
ANR	52918	ElseStatement	else		52814	0					
ANR	52919	CompoundStatement		20:4:546:546	52814	0					
ANR	52920	ReturnStatement	return NULL ;	39:8:1136:1147	52814	0	True				
ANR	52921	Identifier	NULL		52814	0					
ANR	52922	ReturnType	static char *		52814	1					
ANR	52923	Identifier	helperBad		52814	2					
ANR	52924	ParameterList	char * aString		52814	3					
ANR	52925	Parameter	char * aString	18:24:561:574	52814	0	True				
ANR	52926	ParameterType	char *		52814	0					
ANR	52927	Identifier	aString		52814	1					
ANR	52928	CFGEntryNode	ENTRY		52814		True				
ANR	52929	CFGExitNode	EXIT		52814		True				
ANR	52930	Symbol	strlen		52814						
ANR	52931	Symbol	malloc		52814						
ANR	52932	Symbol	NULL		52814						
ANR	52933	Symbol	* i		52814						
ANR	52934	Symbol	aString		52814						
ANR	52935	Symbol	* j		52814						
ANR	52936	Symbol	reversedString		52814						
ANR	52937	Symbol	i		52814						
ANR	52938	Symbol	* reversedString		52814						
ANR	52939	Symbol	j		52814						
ANR	52940	Symbol	* aString		52814						
ANR	52941	Function	helperGood	43:0:1162:1719							
ANR	52942	FunctionDef	helperGood (char * aString)		52941	0					
ANR	52943	CompoundStatement		44:0:1204:1719	52941	0					
ANR	52944	IdentifierDeclStatement	size_t i = 0 ;	45:4:1211:1223	52941	0	True				
ANR	52945	IdentifierDecl	i = 0		52941	0					
ANR	52946	IdentifierDeclType	size_t		52941	0					
ANR	52947	Identifier	i		52941	1					
ANR	52948	AssignmentExpression	i = 0		52941	2		=			
ANR	52949	Identifier	i		52941	0					
ANR	52950	PrimaryExpression	0		52941	1					
ANR	52951	IdentifierDeclStatement	size_t j ;	46:4:1230:1238	52941	1	True				
ANR	52952	IdentifierDecl	j		52941	0					
ANR	52953	IdentifierDeclType	size_t		52941	0					
ANR	52954	Identifier	j		52941	1					
ANR	52955	IdentifierDeclStatement	char * reversedString = NULL ;	47:4:1245:1273	52941	2	True				
ANR	52956	IdentifierDecl	* reversedString = NULL		52941	0					
ANR	52957	IdentifierDeclType	char *		52941	0					
ANR	52958	Identifier	reversedString		52941	1					
ANR	52959	AssignmentExpression	* reversedString = NULL		52941	2		=			
ANR	52960	Identifier	NULL		52941	0					
ANR	52961	Identifier	NULL		52941	1					
ANR	52962	IfStatement	if ( aString != NULL )		52941	3					
ANR	52963	Condition	aString != NULL	48:8:1284:1298	52941	0	True				
ANR	52964	EqualityExpression	aString != NULL		52941	0		!=			
ANR	52965	Identifier	aString		52941	0					
ANR	52966	Identifier	NULL		52941	1					
ANR	52967	CompoundStatement		6:4:101:101	52941	1					
ANR	52968	ExpressionStatement	i = strlen ( aString )	50:8:1317:1336	52941	0	True				
ANR	52969	AssignmentExpression	i = strlen ( aString )		52941	0		=			
ANR	52970	Identifier	i		52941	0					
ANR	52971	CallExpression	strlen ( aString )		52941	1					
ANR	52972	Callee	strlen		52941	0					
ANR	52973	Identifier	strlen		52941	0					
ANR	52974	ArgumentList	aString		52941	1					
ANR	52975	Argument	aString		52941	0					
ANR	52976	Identifier	aString		52941	0					
ANR	52977	ExpressionStatement	reversedString = ( char * ) malloc ( i + 1 )	51:8:1347:1384	52941	1	True				
ANR	52978	AssignmentExpression	reversedString = ( char * ) malloc ( i + 1 )		52941	0		=			
ANR	52979	Identifier	reversedString		52941	0					
ANR	52980	CastExpression	( char * ) malloc ( i + 1 )		52941	1					
ANR	52981	CastTarget	char *		52941	0					
ANR	52982	CallExpression	malloc ( i + 1 )		52941	1					
ANR	52983	Callee	malloc		52941	0					
ANR	52984	Identifier	malloc		52941	0					
ANR	52985	ArgumentList	i + 1		52941	1					
ANR	52986	Argument	i + 1		52941	0					
ANR	52987	AdditiveExpression	i + 1		52941	0		+			
ANR	52988	Identifier	i		52941	0					
ANR	52989	PrimaryExpression	1		52941	1					
ANR	52990	IfStatement	if ( reversedString == NULL )		52941	2					
ANR	52991	Condition	reversedString == NULL	52:12:1399:1420	52941	0	True				
ANR	52992	EqualityExpression	reversedString == NULL		52941	0		==			
ANR	52993	Identifier	reversedString		52941	0					
ANR	52994	Identifier	NULL		52941	1					
ANR	52995	CompoundStatement		9:36:218:218	52941	1					
ANR	52996	ExpressionStatement	exit ( - 1 )	52:37:1424:1432	52941	0	True				
ANR	52997	CallExpression	exit ( - 1 )		52941	0					
ANR	52998	Callee	exit		52941	0					
ANR	52999	Identifier	exit		52941	0					
ANR	53000	ArgumentList	- 1		52941	1					
ANR	53001	Argument	- 1		52941	0					
ANR	53002	UnaryOperationExpression	- 1		52941	0					
ANR	53003	UnaryOperator	-		52941	0					
ANR	53004	PrimaryExpression	1		52941	1					
ANR	53005	ForStatement	for ( j = 0 ; j < i ; j ++ )		52941	3					
ANR	53006	ForInit	j = 0 ;	53:13:1448:1453	52941	0	True				
ANR	53007	AssignmentExpression	j = 0		52941	0		=			
ANR	53008	Identifier	j		52941	0					
ANR	53009	PrimaryExpression	0		52941	1					
ANR	53010	Condition	j < i	53:20:1455:1459	52941	1	True				
ANR	53011	RelationalExpression	j < i		52941	0		<			
ANR	53012	Identifier	j		52941	0					
ANR	53013	Identifier	i		52941	1					
ANR	53014	PostIncDecOperationExpression	j ++	53:27:1462:1464	52941	2	True				
ANR	53015	Identifier	j		52941	0					
ANR	53016	IncDec	++		52941	1					
ANR	53017	CompoundStatement		11:8:271:271	52941	3					
ANR	53018	ExpressionStatement	reversedString [ j ] = aString [ i - j - 1 ]	55:12:1491:1525	52941	0	True				
ANR	53019	AssignmentExpression	reversedString [ j ] = aString [ i - j - 1 ]		52941	0		=			
ANR	53020	ArrayIndexing	reversedString [ j ]		52941	0					
ANR	53021	Identifier	reversedString		52941	0					
ANR	53022	Identifier	j		52941	1					
ANR	53023	ArrayIndexing	aString [ i - j - 1 ]		52941	1					
ANR	53024	Identifier	aString		52941	0					
ANR	53025	AdditiveExpression	i - j - 1		52941	1		-			
ANR	53026	Identifier	i		52941	0					
ANR	53027	AdditiveExpression	j - 1		52941	1		-			
ANR	53028	Identifier	j		52941	0					
ANR	53029	PrimaryExpression	1		52941	1					
ANR	53030	ExpressionStatement	reversedString [ i ] = '\\0'	57:8:1547:1571	52941	4	True				
ANR	53031	AssignmentExpression	reversedString [ i ] = '\\0'		52941	0		=			
ANR	53032	ArrayIndexing	reversedString [ i ]		52941	0					
ANR	53033	Identifier	reversedString		52941	0					
ANR	53034	Identifier	i		52941	1					
ANR	53035	PrimaryExpression	'\\0'		52941	1					
ANR	53036	ReturnStatement	return reversedString ;	59:8:1642:1663	52941	5	True				
ANR	53037	Identifier	reversedString		52941	0					
ANR	53038	ElseStatement	else		52941	0					
ANR	53039	CompoundStatement		19:4:482:482	52941	0					
ANR	53040	ReturnStatement	return NULL ;	63:8:1698:1709	52941	0	True				
ANR	53041	Identifier	NULL		52941	0					
ANR	53042	ReturnType	static char *		52941	1					
ANR	53043	Identifier	helperGood		52941	2					
ANR	53044	ParameterList	char * aString		52941	3					
ANR	53045	Parameter	char * aString	43:25:1187:1200	52941	0	True				
ANR	53046	ParameterType	char *		52941	0					
ANR	53047	Identifier	aString		52941	1					
ANR	53048	CFGEntryNode	ENTRY		52941		True				
ANR	53049	CFGExitNode	EXIT		52941		True				
ANR	53050	Symbol	strlen		52941						
ANR	53051	Symbol	malloc		52941						
ANR	53052	Symbol	NULL		52941						
ANR	53053	Symbol	* i		52941						
ANR	53054	Symbol	aString		52941						
ANR	53055	Symbol	* j		52941						
ANR	53056	Symbol	reversedString		52941						
ANR	53057	Symbol	i		52941						
ANR	53058	Symbol	* reversedString		52941						
ANR	53059	Symbol	j		52941						
ANR	53060	Symbol	* aString		52941						
ANR	53061	Function	CWE416_Use_After_Free__return_freed_ptr_14_bad	69:0:1743:2270							
ANR	53062	FunctionDef	CWE416_Use_After_Free__return_freed_ptr_14_bad ()		53061	0					
ANR	53063	CompoundStatement		70:0:1798:2270	53061	0					
ANR	53064	IfStatement	if ( globalFive == 5 )		53061	0					
ANR	53065	Condition	globalFive == 5	71:7:1808:1820	53061	0	True				
ANR	53066	EqualityExpression	globalFive == 5		53061	0		==			
ANR	53067	Identifier	globalFive		53061	0					
ANR	53068	PrimaryExpression	5		53061	1					
ANR	53069	CompoundStatement		3:4:29:29	53061	1					
ANR	53070	CompoundStatement		6:12:103:147	53061	0					
ANR	53071	IdentifierDeclStatement	"char * reversedString = helperBad ( ""BadSink"" ) ;"	75:12:1902:1946	53061	0	True				
ANR	53072	IdentifierDecl	"* reversedString = helperBad ( ""BadSink"" )"		53061	0					
ANR	53073	IdentifierDeclType	char *		53061	0					
ANR	53074	Identifier	reversedString		53061	1					
ANR	53075	AssignmentExpression	"* reversedString = helperBad ( ""BadSink"" )"		53061	2		=			
ANR	53076	Identifier	reversedString		53061	0					
ANR	53077	CallExpression	"helperBad ( ""BadSink"" )"		53061	1					
ANR	53078	Callee	helperBad		53061	0					
ANR	53079	Identifier	helperBad		53061	0					
ANR	53080	ArgumentList	"""BadSink"""		53061	1					
ANR	53081	Argument	"""BadSink"""		53061	0					
ANR	53082	PrimaryExpression	"""BadSink"""		53061	0					
ANR	53083	ExpressionStatement	printLine ( reversedString )	76:12:1961:1986	53061	1	True				
ANR	53084	CallExpression	printLine ( reversedString )		53061	0					
ANR	53085	Callee	printLine		53061	0					
ANR	53086	Identifier	printLine		53061	0					
ANR	53087	ArgumentList	reversedString		53061	1					
ANR	53088	Argument	reversedString		53061	0					
ANR	53089	Identifier	reversedString		53061	0					
ANR	53090	ReturnType	void		53061	1					
ANR	53091	Identifier	CWE416_Use_After_Free__return_freed_ptr_14_bad		53061	2					
ANR	53092	ParameterList			53061	3					
ANR	53093	CFGEntryNode	ENTRY		53061		True				
ANR	53094	CFGExitNode	EXIT		53061		True				
ANR	53095	Symbol	helperBad		53061						
ANR	53096	Symbol	reversedString		53061						
ANR	53097	Symbol	globalFive		53061						
ANR	53098	Function	good1	90:0:2386:3026							
ANR	53099	FunctionDef	good1 ()		53098	0					
ANR	53100	CompoundStatement		91:0:2407:3026	53098	0					
ANR	53101	IfStatement	if ( globalFive != 5 )		53098	0					
ANR	53102	Condition	globalFive != 5	92:7:2417:2429	53098	0	True				
ANR	53103	EqualityExpression	globalFive != 5		53098	0		!=			
ANR	53104	Identifier	globalFive		53098	0					
ANR	53105	PrimaryExpression	5		53098	1					
ANR	53106	CompoundStatement		3:4:29:29	53098	1					
ANR	53107	ExpressionStatement	"printLine ( ""Benign, fixed string"" )"	95:8:2524:2557	53098	0	True				
ANR	53108	CallExpression	"printLine ( ""Benign, fixed string"" )"		53098	0					
ANR	53109	Callee	printLine		53098	0					
ANR	53110	Identifier	printLine		53098	0					
ANR	53111	ArgumentList	"""Benign, fixed string"""		53098	1					
ANR	53112	Argument	"""Benign, fixed string"""		53098	0					
ANR	53113	PrimaryExpression	"""Benign, fixed string"""		53098	0					
ANR	53114	ElseStatement	else		53098	0					
ANR	53115	CompoundStatement		8:4:173:173	53098	0					
ANR	53116	CompoundStatement		11:12:248:294	53098	0					
ANR	53117	IdentifierDeclStatement	"char * reversedString = helperGood ( ""GoodSink"" ) ;"	101:12:2656:2702	53098	0	True				
ANR	53118	IdentifierDecl	"* reversedString = helperGood ( ""GoodSink"" )"		53098	0					
ANR	53119	IdentifierDeclType	char *		53098	0					
ANR	53120	Identifier	reversedString		53098	1					
ANR	53121	AssignmentExpression	"* reversedString = helperGood ( ""GoodSink"" )"		53098	2		=			
ANR	53122	Identifier	reversedString		53098	0					
ANR	53123	CallExpression	"helperGood ( ""GoodSink"" )"		53098	1					
ANR	53124	Callee	helperGood		53098	0					
ANR	53125	Identifier	helperGood		53098	0					
ANR	53126	ArgumentList	"""GoodSink"""		53098	1					
ANR	53127	Argument	"""GoodSink"""		53098	0					
ANR	53128	PrimaryExpression	"""GoodSink"""		53098	0					
ANR	53129	ExpressionStatement	printLine ( reversedString )	102:12:2717:2742	53098	1	True				
ANR	53130	CallExpression	printLine ( reversedString )		53098	0					
ANR	53131	Callee	printLine		53098	0					
ANR	53132	Identifier	printLine		53098	0					
ANR	53133	ArgumentList	reversedString		53098	1					
ANR	53134	Argument	reversedString		53098	0					
ANR	53135	Identifier	reversedString		53098	0					
ANR	53136	ReturnType	static void		53098	1					
ANR	53137	Identifier	good1		53098	2					
ANR	53138	ParameterList			53098	3					
ANR	53139	CFGEntryNode	ENTRY		53098		True				
ANR	53140	CFGExitNode	EXIT		53098		True				
ANR	53141	Symbol	reversedString		53098						
ANR	53142	Symbol	helperGood		53098						
ANR	53143	Symbol	globalFive		53098						
ANR	53144	Function	good2	112:0:3086:3582							
ANR	53145	FunctionDef	good2 ()		53144	0					
ANR	53146	CompoundStatement		113:0:3107:3582	53144	0					
ANR	53147	IfStatement	if ( globalFive == 5 )		53144	0					
ANR	53148	Condition	globalFive == 5	114:7:3117:3129	53144	0	True				
ANR	53149	EqualityExpression	globalFive == 5		53144	0		==			
ANR	53150	Identifier	globalFive		53144	0					
ANR	53151	PrimaryExpression	5		53144	1					
ANR	53152	CompoundStatement		3:4:29:29	53144	1					
ANR	53153	CompoundStatement		6:12:104:150	53144	0					
ANR	53154	IdentifierDeclStatement	"char * reversedString = helperGood ( ""GoodSink"" ) ;"	118:12:3212:3258	53144	0	True				
ANR	53155	IdentifierDecl	"* reversedString = helperGood ( ""GoodSink"" )"		53144	0					
ANR	53156	IdentifierDeclType	char *		53144	0					
ANR	53157	Identifier	reversedString		53144	1					
ANR	53158	AssignmentExpression	"* reversedString = helperGood ( ""GoodSink"" )"		53144	2		=			
ANR	53159	Identifier	reversedString		53144	0					
ANR	53160	CallExpression	"helperGood ( ""GoodSink"" )"		53144	1					
ANR	53161	Callee	helperGood		53144	0					
ANR	53162	Identifier	helperGood		53144	0					
ANR	53163	ArgumentList	"""GoodSink"""		53144	1					
ANR	53164	Argument	"""GoodSink"""		53144	0					
ANR	53165	PrimaryExpression	"""GoodSink"""		53144	0					
ANR	53166	ExpressionStatement	printLine ( reversedString )	119:12:3273:3298	53144	1	True				
ANR	53167	CallExpression	printLine ( reversedString )		53144	0					
ANR	53168	Callee	printLine		53144	0					
ANR	53169	Identifier	printLine		53144	0					
ANR	53170	ArgumentList	reversedString		53144	1					
ANR	53171	Argument	reversedString		53144	0					
ANR	53172	Identifier	reversedString		53144	0					
ANR	53173	ReturnType	static void		53144	1					
ANR	53174	Identifier	good2		53144	2					
ANR	53175	ParameterList			53144	3					
ANR	53176	CFGEntryNode	ENTRY		53144		True				
ANR	53177	CFGExitNode	EXIT		53144		True				
ANR	53178	Symbol	reversedString		53144						
ANR	53179	Symbol	helperGood		53144						
ANR	53180	Symbol	globalFive		53144						
ANR	53181	Function	CWE416_Use_After_Free__return_freed_ptr_14_good	128:0:3587:3674							
ANR	53182	FunctionDef	CWE416_Use_After_Free__return_freed_ptr_14_good ()		53181	0					
ANR	53183	CompoundStatement		129:0:3643:3674	53181	0					
ANR	53184	ExpressionStatement	good1 ( )	130:4:3650:3657	53181	0	True				
ANR	53185	CallExpression	good1 ( )		53181	0					
ANR	53186	Callee	good1		53181	0					
ANR	53187	Identifier	good1		53181	0					
ANR	53188	ArgumentList			53181	1					
ANR	53189	ExpressionStatement	good2 ( )	131:4:3664:3671	53181	1	True				
ANR	53190	CallExpression	good2 ( )		53181	0					
ANR	53191	Callee	good2		53181	0					
ANR	53192	Identifier	good2		53181	0					
ANR	53193	ArgumentList			53181	1					
ANR	53194	ReturnType	void		53181	1					
ANR	53195	Identifier	CWE416_Use_After_Free__return_freed_ptr_14_good		53181	2					
ANR	53196	ParameterList			53181	3					
ANR	53197	CFGEntryNode	ENTRY		53181		True				
ANR	53198	CFGExitNode	EXIT		53181		True				
ANR	53199	Function	main	143:0:4021:4470							
ANR	53200	FunctionDef	"main (int argc , char * argv [ ])"		53199	0					
ANR	53201	CompoundStatement		144:0:4056:4470	53199	0					
ANR	53202	ExpressionStatement	srand ( ( unsigned ) time ( NULL ) )	146:4:4090:4119	53199	0	True				
ANR	53203	CallExpression	srand ( ( unsigned ) time ( NULL ) )		53199	0					
ANR	53204	Callee	srand		53199	0					
ANR	53205	Identifier	srand		53199	0					
ANR	53206	ArgumentList	( unsigned ) time ( NULL )		53199	1					
ANR	53207	Argument	( unsigned ) time ( NULL )		53199	0					
ANR	53208	CastExpression	( unsigned ) time ( NULL )		53199	0					
ANR	53209	CastTarget	unsigned		53199	0					
ANR	53210	CallExpression	time ( NULL )		53199	1					
ANR	53211	Callee	time		53199	0					
ANR	53212	Identifier	time		53199	0					
ANR	53213	ArgumentList	NULL		53199	1					
ANR	53214	Argument	NULL		53199	0					
ANR	53215	Identifier	NULL		53199	0					
ANR	53216	ExpressionStatement	"printLine ( ""Calling good()..."" )"	148:4:4144:4174	53199	1	True				
ANR	53217	CallExpression	"printLine ( ""Calling good()..."" )"		53199	0					
ANR	53218	Callee	printLine		53199	0					
ANR	53219	Identifier	printLine		53199	0					
ANR	53220	ArgumentList	"""Calling good()..."""		53199	1					
ANR	53221	Argument	"""Calling good()..."""		53199	0					
ANR	53222	PrimaryExpression	"""Calling good()..."""		53199	0					
ANR	53223	ExpressionStatement	CWE416_Use_After_Free__return_freed_ptr_14_good ( )	149:4:4181:4230	53199	2	True				
ANR	53224	CallExpression	CWE416_Use_After_Free__return_freed_ptr_14_good ( )		53199	0					
ANR	53225	Callee	CWE416_Use_After_Free__return_freed_ptr_14_good		53199	0					
ANR	53226	Identifier	CWE416_Use_After_Free__return_freed_ptr_14_good		53199	0					
ANR	53227	ArgumentList			53199	1					
ANR	53228	ExpressionStatement	"printLine ( ""Finished good()"" )"	150:4:4237:4265	53199	3	True				
ANR	53229	CallExpression	"printLine ( ""Finished good()"" )"		53199	0					
ANR	53230	Callee	printLine		53199	0					
ANR	53231	Identifier	printLine		53199	0					
ANR	53232	ArgumentList	"""Finished good()"""		53199	1					
ANR	53233	Argument	"""Finished good()"""		53199	0					
ANR	53234	PrimaryExpression	"""Finished good()"""		53199	0					
ANR	53235	ExpressionStatement	"printLine ( ""Calling bad()..."" )"	153:4:4312:4341	53199	4	True				
ANR	53236	CallExpression	"printLine ( ""Calling bad()..."" )"		53199	0					
ANR	53237	Callee	printLine		53199	0					
ANR	53238	Identifier	printLine		53199	0					
ANR	53239	ArgumentList	"""Calling bad()..."""		53199	1					
ANR	53240	Argument	"""Calling bad()..."""		53199	0					
ANR	53241	PrimaryExpression	"""Calling bad()..."""		53199	0					
ANR	53242	ExpressionStatement	CWE416_Use_After_Free__return_freed_ptr_14_bad ( )	154:4:4348:4396	53199	5	True				
ANR	53243	CallExpression	CWE416_Use_After_Free__return_freed_ptr_14_bad ( )		53199	0					
ANR	53244	Callee	CWE416_Use_After_Free__return_freed_ptr_14_bad		53199	0					
ANR	53245	Identifier	CWE416_Use_After_Free__return_freed_ptr_14_bad		53199	0					
ANR	53246	ArgumentList			53199	1					
ANR	53247	ExpressionStatement	"printLine ( ""Finished bad()"" )"	155:4:4403:4430	53199	6	True				
ANR	53248	CallExpression	"printLine ( ""Finished bad()"" )"		53199	0					
ANR	53249	Callee	printLine		53199	0					
ANR	53250	Identifier	printLine		53199	0					
ANR	53251	ArgumentList	"""Finished bad()"""		53199	1					
ANR	53252	Argument	"""Finished bad()"""		53199	0					
ANR	53253	PrimaryExpression	"""Finished bad()"""		53199	0					
ANR	53254	ReturnStatement	return 0 ;	157:4:4459:4467	53199	7	True				
ANR	53255	PrimaryExpression	0		53199	0					
ANR	53256	ReturnType	int		53199	1					
ANR	53257	Identifier	main		53199	2					
ANR	53258	ParameterList	"int argc , char * argv [ ]"		53199	3					
ANR	53259	Parameter	int argc	143:9:4030:4037	53199	0	True				
ANR	53260	ParameterType	int		53199	0					
ANR	53261	Identifier	argc		53199	1					
ANR	53262	Parameter	char * argv [ ]	143:19:4040:4052	53199	1	True				
ANR	53263	ParameterType	char * [ ]		53199	0					
ANR	53264	Identifier	argv		53199	1					
ANR	53265	CFGEntryNode	ENTRY		53199		True				
ANR	53266	CFGExitNode	EXIT		53199		True				
ANR	53267	Symbol	argc		53199						
ANR	53268	Symbol	NULL		53199						
ANR	53269	Symbol	time		53199						
ANR	53270	Symbol	argv		53199						
