command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	100485	File	/develop/joernDwkProcess/joern-dev/./output/data/CWE119/source-code/119-100-c/testcases/shared/108/io.c								
ANR	100486	Function	printLine	11:0:174:281							
ANR	100487	FunctionDef	printLine (const char * line)		100486	0					
ANR	100488	CompoundStatement		12:0:210:281	100486	0					
ANR	100489	IfStatement	if ( line != NULL )		100486	0					
ANR	100490	Condition	line != NULL	13:7:220:231	100486	0	True				
ANR	100491	EqualityExpression	line != NULL		100486	0		!=			
ANR	100492	Identifier	line		100486	0					
ANR	100493	Identifier	NULL		100486	1					
ANR	100494	CompoundStatement		3:4:29:29	100486	1					
ANR	100495	ExpressionStatement	"printf ( ""%s\\n"" , line )"	15:8:251:271	100486	0	True				
ANR	100496	CallExpression	"printf ( ""%s\\n"" , line )"		100486	0					
ANR	100497	Callee	printf		100486	0					
ANR	100498	Identifier	printf		100486	0					
ANR	100499	ArgumentList	"""%s\\n"""		100486	1					
ANR	100500	Argument	"""%s\\n"""		100486	0					
ANR	100501	PrimaryExpression	"""%s\\n"""		100486	0					
ANR	100502	Argument	line		100486	1					
ANR	100503	Identifier	line		100486	0					
ANR	100504	ReturnType	void		100486	1					
ANR	100505	Identifier	printLine		100486	2					
ANR	100506	ParameterList	const char * line		100486	3					
ANR	100507	Parameter	const char * line	11:16:190:206	100486	0	True				
ANR	100508	ParameterType	const char *		100486	0					
ANR	100509	Identifier	line		100486	1					
ANR	100510	CFGEntryNode	ENTRY		100486		True				
ANR	100511	CFGExitNode	EXIT		100486		True				
ANR	100512	Symbol	NULL		100486						
ANR	100513	Symbol	line		100486						
ANR	100514	Function	printWLine	19:0:286:400							
ANR	100515	FunctionDef	printWLine (const wchar_t * line)		100514	0					
ANR	100516	CompoundStatement		20:0:326:400	100514	0					
ANR	100517	IfStatement	if ( line != NULL )		100514	0					
ANR	100518	Condition	line != NULL	21:7:336:347	100514	0	True				
ANR	100519	EqualityExpression	line != NULL		100514	0		!=			
ANR	100520	Identifier	line		100514	0					
ANR	100521	Identifier	NULL		100514	1					
ANR	100522	CompoundStatement		3:4:29:29	100514	1					
ANR	100523	Statement	wprintf	23:8:367:373	100514	0	True				
ANR	100524	Statement	(	23:15:374:374	100514	1	True				
ANR	100525	Statement	L	23:16:375:375	100514	2	True				
ANR	100526	Statement	"""%ls\\n"""	23:17:376:382	100514	3	True				
ANR	100527	Statement	","	23:24:383:383	100514	4	True				
ANR	100528	Statement	line	23:26:385:388	100514	5	True				
ANR	100529	Statement	)	23:30:389:389	100514	6	True				
ANR	100530	ExpressionStatement		23:31:390:390	100514	7	True				
ANR	100531	ReturnType	void		100514	1					
ANR	100532	Identifier	printWLine		100514	2					
ANR	100533	ParameterList	const wchar_t * line		100514	3					
ANR	100534	Parameter	const wchar_t * line	19:17:303:322	100514	0	True				
ANR	100535	ParameterType	const wchar_t *		100514	0					
ANR	100536	Identifier	line		100514	1					
ANR	100537	CFGEntryNode	ENTRY		100514		True				
ANR	100538	CFGExitNode	EXIT		100514		True				
ANR	100539	Symbol	NULL		100514						
ANR	100540	Symbol	line		100514						
ANR	100541	Function	printIntLine	27:0:405:475							
ANR	100542	FunctionDef	printIntLine (int intNumber)		100541	0					
ANR	100543	CompoundStatement		28:0:440:475	100541	0					
ANR	100544	ExpressionStatement	"printf ( ""%d\\n"" , intNumber )"	29:4:447:472	100541	0	True				
ANR	100545	CallExpression	"printf ( ""%d\\n"" , intNumber )"		100541	0					
ANR	100546	Callee	printf		100541	0					
ANR	100547	Identifier	printf		100541	0					
ANR	100548	ArgumentList	"""%d\\n"""		100541	1					
ANR	100549	Argument	"""%d\\n"""		100541	0					
ANR	100550	PrimaryExpression	"""%d\\n"""		100541	0					
ANR	100551	Argument	intNumber		100541	1					
ANR	100552	Identifier	intNumber		100541	0					
ANR	100553	ReturnType	void		100541	1					
ANR	100554	Identifier	printIntLine		100541	2					
ANR	100555	ParameterList	int intNumber		100541	3					
ANR	100556	Parameter	int intNumber	27:19:424:436	100541	0	True				
ANR	100557	ParameterType	int		100541	0					
ANR	100558	Identifier	intNumber		100541	1					
ANR	100559	CFGEntryNode	ENTRY		100541		True				
ANR	100560	CFGExitNode	EXIT		100541		True				
ANR	100561	Symbol	intNumber		100541						
ANR	100562	Function	printShortLine	32:0:480:559							
ANR	100563	FunctionDef	printShortLine (short shortNumber)		100562	0					
ANR	100564	CompoundStatement		33:0:521:559	100562	0					
ANR	100565	ExpressionStatement	"printf ( ""%hd\\n"" , shortNumber )"	34:4:528:556	100562	0	True				
ANR	100566	CallExpression	"printf ( ""%hd\\n"" , shortNumber )"		100562	0					
ANR	100567	Callee	printf		100562	0					
ANR	100568	Identifier	printf		100562	0					
ANR	100569	ArgumentList	"""%hd\\n"""		100562	1					
ANR	100570	Argument	"""%hd\\n"""		100562	0					
ANR	100571	PrimaryExpression	"""%hd\\n"""		100562	0					
ANR	100572	Argument	shortNumber		100562	1					
ANR	100573	Identifier	shortNumber		100562	0					
ANR	100574	ReturnType	void		100562	1					
ANR	100575	Identifier	printShortLine		100562	2					
ANR	100576	ParameterList	short shortNumber		100562	3					
ANR	100577	Parameter	short shortNumber	32:21:501:517	100562	0	True				
ANR	100578	ParameterType	short		100562	0					
ANR	100579	Identifier	shortNumber		100562	1					
ANR	100580	CFGEntryNode	ENTRY		100562		True				
ANR	100581	CFGExitNode	EXIT		100562		True				
ANR	100582	Symbol	shortNumber		100562						
ANR	100583	Function	printFloatLine	37:0:564:642							
ANR	100584	FunctionDef	printFloatLine (float floatNumber)		100583	0					
ANR	100585	CompoundStatement		38:0:605:642	100583	0					
ANR	100586	ExpressionStatement	"printf ( ""%f\\n"" , floatNumber )"	39:4:612:639	100583	0	True				
ANR	100587	CallExpression	"printf ( ""%f\\n"" , floatNumber )"		100583	0					
ANR	100588	Callee	printf		100583	0					
ANR	100589	Identifier	printf		100583	0					
ANR	100590	ArgumentList	"""%f\\n"""		100583	1					
ANR	100591	Argument	"""%f\\n"""		100583	0					
ANR	100592	PrimaryExpression	"""%f\\n"""		100583	0					
ANR	100593	Argument	floatNumber		100583	1					
ANR	100594	Identifier	floatNumber		100583	0					
ANR	100595	ReturnType	void		100583	1					
ANR	100596	Identifier	printFloatLine		100583	2					
ANR	100597	ParameterList	float floatNumber		100583	3					
ANR	100598	Parameter	float floatNumber	37:21:585:601	100583	0	True				
ANR	100599	ParameterType	float		100583	0					
ANR	100600	Identifier	floatNumber		100583	1					
ANR	100601	CFGEntryNode	ENTRY		100583		True				
ANR	100602	CFGExitNode	EXIT		100583		True				
ANR	100603	Symbol	floatNumber		100583						
ANR	100604	Function	printLongLine	42:0:647:722							
ANR	100605	FunctionDef	printLongLine (long longNumber)		100604	0					
ANR	100606	CompoundStatement		43:0:685:722	100604	0					
ANR	100607	ExpressionStatement	"printf ( ""%ld\\n"" , longNumber )"	44:4:692:719	100604	0	True				
ANR	100608	CallExpression	"printf ( ""%ld\\n"" , longNumber )"		100604	0					
ANR	100609	Callee	printf		100604	0					
ANR	100610	Identifier	printf		100604	0					
ANR	100611	ArgumentList	"""%ld\\n"""		100604	1					
ANR	100612	Argument	"""%ld\\n"""		100604	0					
ANR	100613	PrimaryExpression	"""%ld\\n"""		100604	0					
ANR	100614	Argument	longNumber		100604	1					
ANR	100615	Identifier	longNumber		100604	0					
ANR	100616	ReturnType	void		100604	1					
ANR	100617	Identifier	printLongLine		100604	2					
ANR	100618	ParameterList	long longNumber		100604	3					
ANR	100619	Parameter	long longNumber	42:20:667:681	100604	0	True				
ANR	100620	ParameterType	long		100604	0					
ANR	100621	Identifier	longNumber		100604	1					
ANR	100622	CFGEntryNode	ENTRY		100604		True				
ANR	100623	CFGExitNode	EXIT		100604		True				
ANR	100624	Symbol	longNumber		100604						
ANR	100625	Function	printLongLongLine	47:0:727:831							
ANR	100626	FunctionDef	printLongLongLine (int64_t longLongIntNumber)		100625	0					
ANR	100627	CompoundStatement		48:0:779:831	100625	0					
ANR	100628	Statement	printf	49:4:786:791	100625	0	True				
ANR	100629	Statement	(	49:10:792:792	100625	1	True				
ANR	100630	Statement	"""%"""	49:11:793:795	100625	2	True				
ANR	100631	Statement	PRId64	49:15:797:802	100625	3	True				
ANR	100632	Statement	"""\\n"""	49:22:804:807	100625	4	True				
ANR	100633	Statement	","	49:26:808:808	100625	5	True				
ANR	100634	Statement	longLongIntNumber	49:28:810:826	100625	6	True				
ANR	100635	Statement	)	49:45:827:827	100625	7	True				
ANR	100636	ExpressionStatement		49:46:828:828	100625	8	True				
ANR	100637	ReturnType	void		100625	1					
ANR	100638	Identifier	printLongLongLine		100625	2					
ANR	100639	ParameterList	int64_t longLongIntNumber		100625	3					
ANR	100640	Parameter	int64_t longLongIntNumber	47:24:751:775	100625	0	True				
ANR	100641	ParameterType	int64_t		100625	0					
ANR	100642	Identifier	longLongIntNumber		100625	1					
ANR	100643	CFGEntryNode	ENTRY		100625		True				
ANR	100644	CFGExitNode	EXIT		100625		True				
ANR	100645	Symbol	longLongIntNumber		100625						
ANR	100646	Function	printSizeTLine	52:0:836:916							
ANR	100647	FunctionDef	printSizeTLine (size_t sizeTNumber)		100646	0					
ANR	100648	CompoundStatement		53:0:878:916	100646	0					
ANR	100649	ExpressionStatement	"printf ( ""%zu\\n"" , sizeTNumber )"	54:4:885:913	100646	0	True				
ANR	100650	CallExpression	"printf ( ""%zu\\n"" , sizeTNumber )"		100646	0					
ANR	100651	Callee	printf		100646	0					
ANR	100652	Identifier	printf		100646	0					
ANR	100653	ArgumentList	"""%zu\\n"""		100646	1					
ANR	100654	Argument	"""%zu\\n"""		100646	0					
ANR	100655	PrimaryExpression	"""%zu\\n"""		100646	0					
ANR	100656	Argument	sizeTNumber		100646	1					
ANR	100657	Identifier	sizeTNumber		100646	0					
ANR	100658	ReturnType	void		100646	1					
ANR	100659	Identifier	printSizeTLine		100646	2					
ANR	100660	ParameterList	size_t sizeTNumber		100646	3					
ANR	100661	Parameter	size_t sizeTNumber	52:21:857:874	100646	0	True				
ANR	100662	ParameterType	size_t		100646	0					
ANR	100663	Identifier	sizeTNumber		100646	1					
ANR	100664	CFGEntryNode	ENTRY		100646		True				
ANR	100665	CFGExitNode	EXIT		100646		True				
ANR	100666	Symbol	sizeTNumber		100646						
ANR	100667	Function	printHexCharLine	57:0:921:994							
ANR	100668	FunctionDef	printHexCharLine (char charHex)		100667	0					
ANR	100669	CompoundStatement		58:0:959:994	100667	0					
ANR	100670	ExpressionStatement	"printf ( ""%02x\\n"" , charHex )"	59:4:966:991	100667	0	True				
ANR	100671	CallExpression	"printf ( ""%02x\\n"" , charHex )"		100667	0					
ANR	100672	Callee	printf		100667	0					
ANR	100673	Identifier	printf		100667	0					
ANR	100674	ArgumentList	"""%02x\\n"""		100667	1					
ANR	100675	Argument	"""%02x\\n"""		100667	0					
ANR	100676	PrimaryExpression	"""%02x\\n"""		100667	0					
ANR	100677	Argument	charHex		100667	1					
ANR	100678	Identifier	charHex		100667	0					
ANR	100679	ReturnType	void		100667	1					
ANR	100680	Identifier	printHexCharLine		100667	2					
ANR	100681	ParameterList	char charHex		100667	3					
ANR	100682	Parameter	char charHex	57:23:944:955	100667	0	True				
ANR	100683	ParameterType	char		100667	0					
ANR	100684	Identifier	charHex		100667	1					
ANR	100685	CFGEntryNode	ENTRY		100667		True				
ANR	100686	CFGExitNode	EXIT		100667		True				
ANR	100687	Symbol	charHex		100667						
ANR	100688	Function	printWcharLine	62:0:999:1254							
ANR	100689	FunctionDef	printWcharLine (wchar_t wideChar)		100688	0					
ANR	100690	CompoundStatement		63:0:1039:1254	100688	0					
ANR	100691	IdentifierDeclStatement	wchar_t s [ 2 ] ;	66:4:1165:1177	100688	0	True				
ANR	100692	IdentifierDecl	s [ 2 ]		100688	0					
ANR	100693	IdentifierDeclType	wchar_t [ 2 ]		100688	0					
ANR	100694	Identifier	s		100688	1					
ANR	100695	PrimaryExpression	2		100688	2					
ANR	100696	ExpressionStatement	s [ 0 ] = wideChar	67:8:1188:1203	100688	1	True				
ANR	100697	AssignmentExpression	s [ 0 ] = wideChar		100688	0		=			
ANR	100698	ArrayIndexing	s [ 0 ]		100688	0					
ANR	100699	Identifier	s		100688	0					
ANR	100700	PrimaryExpression	0		100688	1					
ANR	100701	Identifier	wideChar		100688	1					
ANR	100702	Statement	s	68:8:1214:1214	100688	2	True				
ANR	100703	Statement	[	68:9:1215:1215	100688	3	True				
ANR	100704	Statement	1	68:10:1216:1216	100688	4	True				
ANR	100705	Statement	]	68:11:1217:1217	100688	5	True				
ANR	100706	Statement	=	68:13:1219:1219	100688	6	True				
ANR	100707	Statement	L	68:15:1221:1221	100688	7	True				
ANR	100708	ExpressionStatement	'\\0'	68:16:1222:1226	100688	8	True				
ANR	100709	PrimaryExpression	'\\0'		100688	0					
ANR	100710	ExpressionStatement	"printf ( ""%ls\\n"" , s )"	69:4:1233:1251	100688	9	True				
ANR	100711	CallExpression	"printf ( ""%ls\\n"" , s )"		100688	0					
ANR	100712	Callee	printf		100688	0					
ANR	100713	Identifier	printf		100688	0					
ANR	100714	ArgumentList	"""%ls\\n"""		100688	1					
ANR	100715	Argument	"""%ls\\n"""		100688	0					
ANR	100716	PrimaryExpression	"""%ls\\n"""		100688	0					
ANR	100717	Argument	s		100688	1					
ANR	100718	Identifier	s		100688	0					
ANR	100719	ReturnType	void		100688	1					
ANR	100720	Identifier	printWcharLine		100688	2					
ANR	100721	ParameterList	wchar_t wideChar		100688	3					
ANR	100722	Parameter	wchar_t wideChar	62:20:1019:1034	100688	0	True				
ANR	100723	ParameterType	wchar_t		100688	0					
ANR	100724	Identifier	wideChar		100688	1					
ANR	100725	CFGEntryNode	ENTRY		100688		True				
ANR	100726	CFGExitNode	EXIT		100688		True				
ANR	100727	Symbol	s		100688						
ANR	100728	Symbol	wideChar		100688						
ANR	100729	Symbol	* s		100688						
ANR	100730	Function	printUnsignedLine	72:0:1259:1349							
ANR	100731	FunctionDef	printUnsignedLine (unsigned unsignedNumber)		100730	0					
ANR	100732	CompoundStatement		73:0:1309:1349	100730	0					
ANR	100733	ExpressionStatement	"printf ( ""%u\\n"" , unsignedNumber )"	74:4:1316:1346	100730	0	True				
ANR	100734	CallExpression	"printf ( ""%u\\n"" , unsignedNumber )"		100730	0					
ANR	100735	Callee	printf		100730	0					
ANR	100736	Identifier	printf		100730	0					
ANR	100737	ArgumentList	"""%u\\n"""		100730	1					
ANR	100738	Argument	"""%u\\n"""		100730	0					
ANR	100739	PrimaryExpression	"""%u\\n"""		100730	0					
ANR	100740	Argument	unsignedNumber		100730	1					
ANR	100741	Identifier	unsignedNumber		100730	0					
ANR	100742	ReturnType	void		100730	1					
ANR	100743	Identifier	printUnsignedLine		100730	2					
ANR	100744	ParameterList	unsigned unsignedNumber		100730	3					
ANR	100745	Parameter	unsigned unsignedNumber	72:23:1282:1304	100730	0	True				
ANR	100746	ParameterType	unsigned		100730	0					
ANR	100747	Identifier	unsignedNumber		100730	1					
ANR	100748	CFGEntryNode	ENTRY		100730		True				
ANR	100749	CFGExitNode	EXIT		100730		True				
ANR	100750	Symbol	unsignedNumber		100730						
ANR	100751	Function	printHexUnsignedCharLine	77:0:1354:1464							
ANR	100752	FunctionDef	printHexUnsignedCharLine (unsigned char unsignedCharacter)		100751	0					
ANR	100753	CompoundStatement		78:0:1419:1464	100751	0					
ANR	100754	ExpressionStatement	"printf ( ""%02x\\n"" , unsignedCharacter )"	79:4:1426:1461	100751	0	True				
ANR	100755	CallExpression	"printf ( ""%02x\\n"" , unsignedCharacter )"		100751	0					
ANR	100756	Callee	printf		100751	0					
ANR	100757	Identifier	printf		100751	0					
ANR	100758	ArgumentList	"""%02x\\n"""		100751	1					
ANR	100759	Argument	"""%02x\\n"""		100751	0					
ANR	100760	PrimaryExpression	"""%02x\\n"""		100751	0					
ANR	100761	Argument	unsignedCharacter		100751	1					
ANR	100762	Identifier	unsignedCharacter		100751	0					
ANR	100763	ReturnType	void		100751	1					
ANR	100764	Identifier	printHexUnsignedCharLine		100751	2					
ANR	100765	ParameterList	unsigned char unsignedCharacter		100751	3					
ANR	100766	Parameter	unsigned char unsignedCharacter	77:30:1384:1414	100751	0	True				
ANR	100767	ParameterType	unsigned char		100751	0					
ANR	100768	Identifier	unsignedCharacter		100751	1					
ANR	100769	CFGEntryNode	ENTRY		100751		True				
ANR	100770	CFGExitNode	EXIT		100751		True				
ANR	100771	Symbol	unsignedCharacter		100751						
ANR	100772	Function	printDoubleLine	82:0:1469:1551							
ANR	100773	FunctionDef	printDoubleLine (double doubleNumber)		100772	0					
ANR	100774	CompoundStatement		83:0:1513:1551	100772	0					
ANR	100775	ExpressionStatement	"printf ( ""%g\\n"" , doubleNumber )"	84:4:1520:1548	100772	0	True				
ANR	100776	CallExpression	"printf ( ""%g\\n"" , doubleNumber )"		100772	0					
ANR	100777	Callee	printf		100772	0					
ANR	100778	Identifier	printf		100772	0					
ANR	100779	ArgumentList	"""%g\\n"""		100772	1					
ANR	100780	Argument	"""%g\\n"""		100772	0					
ANR	100781	PrimaryExpression	"""%g\\n"""		100772	0					
ANR	100782	Argument	doubleNumber		100772	1					
ANR	100783	Identifier	doubleNumber		100772	0					
ANR	100784	ReturnType	void		100772	1					
ANR	100785	Identifier	printDoubleLine		100772	2					
ANR	100786	ParameterList	double doubleNumber		100772	3					
ANR	100787	Parameter	double doubleNumber	82:21:1490:1508	100772	0	True				
ANR	100788	ParameterType	double		100772	0					
ANR	100789	Identifier	doubleNumber		100772	1					
ANR	100790	CFGEntryNode	ENTRY		100772		True				
ANR	100791	CFGExitNode	EXIT		100772		True				
ANR	100792	Symbol	doubleNumber		100772						
ANR	100793	Function	printStructLine	87:0:1556:1710							
ANR	100794	FunctionDef	printStructLine (const twoIntsStruct * structTwoIntsStruct)		100793	0					
ANR	100795	CompoundStatement		88:0:1622:1710	100793	0					
ANR	100796	ExpressionStatement	"printf ( ""%d -- %d\\n"" , structTwoIntsStruct -> intOne , structTwoIntsStruct -> intTwo )"	89:4:1629:1707	100793	0	True				
ANR	100797	CallExpression	"printf ( ""%d -- %d\\n"" , structTwoIntsStruct -> intOne , structTwoIntsStruct -> intTwo )"		100793	0					
ANR	100798	Callee	printf		100793	0					
ANR	100799	Identifier	printf		100793	0					
ANR	100800	ArgumentList	"""%d -- %d\\n"""		100793	1					
ANR	100801	Argument	"""%d -- %d\\n"""		100793	0					
ANR	100802	PrimaryExpression	"""%d -- %d\\n"""		100793	0					
ANR	100803	Argument	structTwoIntsStruct -> intOne		100793	1					
ANR	100804	PtrMemberAccess	structTwoIntsStruct -> intOne		100793	0					
ANR	100805	Identifier	structTwoIntsStruct		100793	0					
ANR	100806	Identifier	intOne		100793	1					
ANR	100807	Argument	structTwoIntsStruct -> intTwo		100793	2					
ANR	100808	PtrMemberAccess	structTwoIntsStruct -> intTwo		100793	0					
ANR	100809	Identifier	structTwoIntsStruct		100793	0					
ANR	100810	Identifier	intTwo		100793	1					
ANR	100811	ReturnType	void		100793	1					
ANR	100812	Identifier	printStructLine		100793	2					
ANR	100813	ParameterList	const twoIntsStruct * structTwoIntsStruct		100793	3					
ANR	100814	Parameter	const twoIntsStruct * structTwoIntsStruct	87:22:1578:1618	100793	0	True				
ANR	100815	ParameterType	const twoIntsStruct *		100793	0					
ANR	100816	Identifier	structTwoIntsStruct		100793	1					
ANR	100817	CFGEntryNode	ENTRY		100793		True				
ANR	100818	CFGExitNode	EXIT		100793		True				
ANR	100819	Symbol	structTwoIntsStruct		100793						
ANR	100820	Symbol	structTwoIntsStruct -> intTwo		100793						
ANR	100821	Symbol	* structTwoIntsStruct		100793						
ANR	100822	Symbol	structTwoIntsStruct -> intOne		100793						
ANR	100823	Function	printBytesLine	92:0:1715:1921							
ANR	100824	FunctionDef	"printBytesLine (const unsigned char * bytes , size_t numBytes)"		100823	0					
ANR	100825	CompoundStatement		93:0:1782:1921	100823	0					
ANR	100826	IdentifierDeclStatement	size_t i ;	94:4:1789:1797	100823	0	True				
ANR	100827	IdentifierDecl	i		100823	0					
ANR	100828	IdentifierDeclType	size_t		100823	0					
ANR	100829	Identifier	i		100823	1					
ANR	100830	ForStatement	for ( i = 0 ; i < numBytes ; ++ i )		100823	1					
ANR	100831	ForInit	i = 0 ;	95:9:1809:1814	100823	0	True				
ANR	100832	AssignmentExpression	i = 0		100823	0		=			
ANR	100833	Identifier	i		100823	0					
ANR	100834	PrimaryExpression	0		100823	1					
ANR	100835	Condition	i < numBytes	95:16:1816:1827	100823	1	True				
ANR	100836	RelationalExpression	i < numBytes		100823	0		<			
ANR	100837	Identifier	i		100823	0					
ANR	100838	Identifier	numBytes		100823	1					
ANR	100839	UnaryExpression	++ i	95:30:1830:1832	100823	2	True				
ANR	100840	IncDec	++		100823	0					
ANR	100841	Identifier	i		100823	1					
ANR	100842	CompoundStatement		4:4:57:57	100823	3					
ANR	100843	ExpressionStatement	"printf ( ""%02x"" , bytes [ i ] )"	97:8:1851:1875	100823	0	True				
ANR	100844	CallExpression	"printf ( ""%02x"" , bytes [ i ] )"		100823	0					
ANR	100845	Callee	printf		100823	0					
ANR	100846	Identifier	printf		100823	0					
ANR	100847	ArgumentList	"""%02x"""		100823	1					
ANR	100848	Argument	"""%02x"""		100823	0					
ANR	100849	PrimaryExpression	"""%02x"""		100823	0					
ANR	100850	Argument	bytes [ i ]		100823	1					
ANR	100851	ArrayIndexing	bytes [ i ]		100823	0					
ANR	100852	Identifier	bytes		100823	0					
ANR	100853	Identifier	i		100823	1					
ANR	100854	ExpressionStatement	"puts ( """" )"	99:4:1889:1897	100823	2	True				
ANR	100855	CallExpression	"puts ( """" )"		100823	0					
ANR	100856	Callee	puts		100823	0					
ANR	100857	Identifier	puts		100823	0					
ANR	100858	ArgumentList	""""""		100823	1					
ANR	100859	Argument	""""""		100823	0					
ANR	100860	PrimaryExpression	""""""		100823	0					
ANR	100861	ReturnType	void		100823	1					
ANR	100862	Identifier	printBytesLine		100823	2					
ANR	100863	ParameterList	"const unsigned char * bytes , size_t numBytes"		100823	3					
ANR	100864	Parameter	const unsigned char * bytes	92:20:1735:1761	100823	0	True				
ANR	100865	ParameterType	const unsigned char *		100823	0					
ANR	100866	Identifier	bytes		100823	1					
ANR	100867	Parameter	size_t numBytes	92:49:1764:1778	100823	1	True				
ANR	100868	ParameterType	size_t		100823	0					
ANR	100869	Identifier	numBytes		100823	1					
ANR	100870	CFGEntryNode	ENTRY		100823		True				
ANR	100871	CFGExitNode	EXIT		100823		True				
ANR	100872	Symbol	numBytes		100823						
ANR	100873	Symbol	* i		100823						
ANR	100874	Symbol	bytes		100823						
ANR	100875	Symbol	i		100823						
ANR	100876	Symbol	* bytes		100823						
ANR	100877	Function	decodeHexChars	105:0:2143:2882							
ANR	100878	FunctionDef	"decodeHexChars (unsigned char * bytes , size_t numBytes , const char * hex)"		100877	0					
ANR	100879	CompoundStatement		106:0:2224:2882	100877	0					
ANR	100880	IdentifierDeclStatement	size_t numWritten = 0 ;	107:4:2231:2252	100877	0	True				
ANR	100881	IdentifierDecl	numWritten = 0		100877	0					
ANR	100882	IdentifierDeclType	size_t		100877	0					
ANR	100883	Identifier	numWritten		100877	1					
ANR	100884	AssignmentExpression	numWritten = 0		100877	2		=			
ANR	100885	Identifier	numWritten		100877	0					
ANR	100886	PrimaryExpression	0		100877	1					
ANR	100887	WhileStatement	while ( numWritten < numBytes && isxdigit ( hex [ 2 * numWritten ] ) && isxdigit ( hex [ 2 * numWritten + 1 ] ) )		100877	1					
ANR	100888	Condition	numWritten < numBytes && isxdigit ( hex [ 2 * numWritten ] ) && isxdigit ( hex [ 2 * numWritten + 1 ] )	113:11:2601:2691	100877	0	True				
ANR	100889	AndExpression	numWritten < numBytes && isxdigit ( hex [ 2 * numWritten ] ) && isxdigit ( hex [ 2 * numWritten + 1 ] )		100877	0		&&			
ANR	100890	RelationalExpression	numWritten < numBytes		100877	0		<			
ANR	100891	Identifier	numWritten		100877	0					
ANR	100892	Identifier	numBytes		100877	1					
ANR	100893	AndExpression	isxdigit ( hex [ 2 * numWritten ] ) && isxdigit ( hex [ 2 * numWritten + 1 ] )		100877	1		&&			
ANR	100894	CallExpression	isxdigit ( hex [ 2 * numWritten ] )		100877	0					
ANR	100895	Callee	isxdigit		100877	0					
ANR	100896	Identifier	isxdigit		100877	0					
ANR	100897	ArgumentList	hex [ 2 * numWritten ]		100877	1					
ANR	100898	Argument	hex [ 2 * numWritten ]		100877	0					
ANR	100899	ArrayIndexing	hex [ 2 * numWritten ]		100877	0					
ANR	100900	Identifier	hex		100877	0					
ANR	100901	MultiplicativeExpression	2 * numWritten		100877	1		*			
ANR	100902	PrimaryExpression	2		100877	0					
ANR	100903	Identifier	numWritten		100877	1					
ANR	100904	CallExpression	isxdigit ( hex [ 2 * numWritten + 1 ] )		100877	1					
ANR	100905	Callee	isxdigit		100877	0					
ANR	100906	Identifier	isxdigit		100877	0					
ANR	100907	ArgumentList	hex [ 2 * numWritten + 1 ]		100877	1					
ANR	100908	Argument	hex [ 2 * numWritten + 1 ]		100877	0					
ANR	100909	ArrayIndexing	hex [ 2 * numWritten + 1 ]		100877	0					
ANR	100910	Identifier	hex		100877	0					
ANR	100911	AdditiveExpression	2 * numWritten + 1		100877	1		+			
ANR	100912	MultiplicativeExpression	2 * numWritten		100877	0		*			
ANR	100913	PrimaryExpression	2		100877	0					
ANR	100914	Identifier	numWritten		100877	1					
ANR	100915	PrimaryExpression	1		100877	1					
ANR	100916	CompoundStatement		10:8:485:493	100877	1					
ANR	100917	IdentifierDeclStatement	int byte ;	115:8:2710:2718	100877	0	True				
ANR	100918	IdentifierDecl	byte		100877	0					
ANR	100919	IdentifierDeclType	int		100877	0					
ANR	100920	Identifier	byte		100877	1					
ANR	100921	ExpressionStatement	"sscanf ( & hex [ 2 * numWritten ] , ""%02x"" , & byte )"	116:8:2729:2772	100877	1	True				
ANR	100922	CallExpression	"sscanf ( & hex [ 2 * numWritten ] , ""%02x"" , & byte )"		100877	0					
ANR	100923	Callee	sscanf		100877	0					
ANR	100924	Identifier	sscanf		100877	0					
ANR	100925	ArgumentList	& hex [ 2 * numWritten ]		100877	1					
ANR	100926	Argument	& hex [ 2 * numWritten ]		100877	0					
ANR	100927	UnaryOperationExpression	& hex [ 2 * numWritten ]		100877	0					
ANR	100928	UnaryOperator	&		100877	0					
ANR	100929	ArrayIndexing	hex [ 2 * numWritten ]		100877	1					
ANR	100930	Identifier	hex		100877	0					
ANR	100931	MultiplicativeExpression	2 * numWritten		100877	1		*			
ANR	100932	PrimaryExpression	2		100877	0					
ANR	100933	Identifier	numWritten		100877	1					
ANR	100934	Argument	"""%02x"""		100877	1					
ANR	100935	PrimaryExpression	"""%02x"""		100877	0					
ANR	100936	Argument	& byte		100877	2					
ANR	100937	UnaryOperationExpression	& byte		100877	0					
ANR	100938	UnaryOperator	&		100877	0					
ANR	100939	Identifier	byte		100877	1					
ANR	100940	ExpressionStatement	bytes [ numWritten ] = ( unsigned char ) byte	117:8:2783:2823	100877	2	True				
ANR	100941	AssignmentExpression	bytes [ numWritten ] = ( unsigned char ) byte		100877	0		=			
ANR	100942	ArrayIndexing	bytes [ numWritten ]		100877	0					
ANR	100943	Identifier	bytes		100877	0					
ANR	100944	Identifier	numWritten		100877	1					
ANR	100945	CastExpression	( unsigned char ) byte		100877	1					
ANR	100946	CastTarget	unsigned char		100877	0					
ANR	100947	Identifier	byte		100877	1					
ANR	100948	ExpressionStatement	++ numWritten	118:8:2834:2846	100877	3	True				
ANR	100949	UnaryExpression	++ numWritten		100877	0					
ANR	100950	IncDec	++		100877	0					
ANR	100951	Identifier	numWritten		100877	1					
ANR	100952	ReturnStatement	return numWritten ;	121:4:2862:2879	100877	2	True				
ANR	100953	Identifier	numWritten		100877	0					
ANR	100954	ReturnType	size_t		100877	1					
ANR	100955	Identifier	decodeHexChars		100877	2					
ANR	100956	ParameterList	"unsigned char * bytes , size_t numBytes , const char * hex"		100877	3					
ANR	100957	Parameter	unsigned char * bytes	105:22:2165:2185	100877	0	True				
ANR	100958	ParameterType	unsigned char *		100877	0					
ANR	100959	Identifier	bytes		100877	1					
ANR	100960	Parameter	size_t numBytes	105:45:2188:2202	100877	1	True				
ANR	100961	ParameterType	size_t		100877	0					
ANR	100962	Identifier	numBytes		100877	1					
ANR	100963	Parameter	const char * hex	105:62:2205:2220	100877	2	True				
ANR	100964	ParameterType	const char *		100877	0					
ANR	100965	Identifier	hex		100877	1					
ANR	100966	CFGEntryNode	ENTRY		100877		True				
ANR	100967	CFGExitNode	EXIT		100877		True				
ANR	100968	Symbol	numBytes		100877						
ANR	100969	Symbol	* numWritten		100877						
ANR	100970	Symbol	bytes		100877						
ANR	100971	Symbol	byte		100877						
ANR	100972	Symbol	hex		100877						
ANR	100973	Symbol	* hex		100877						
ANR	100974	Symbol	numWritten		100877						
ANR	100975	Symbol	& byte		100877						
ANR	100976	Symbol	* bytes		100877						
ANR	100977	Symbol	isxdigit		100877						
ANR	100978	Function	decodeHexWChars	127:1:3105:3855							
ANR	100979	FunctionDef	"decodeHexWChars (unsigned char * bytes , size_t numBytes , const wchar_t * hex)"		100978	0					
ANR	100980	CompoundStatement		128:1:3191:3855	100978	0					
ANR	100981	IdentifierDeclStatement	size_t numWritten = 0 ;	129:4:3198:3219	100978	0	True				
ANR	100982	IdentifierDecl	numWritten = 0		100978	0					
ANR	100983	IdentifierDeclType	size_t		100978	0					
ANR	100984	Identifier	numWritten		100978	1					
ANR	100985	AssignmentExpression	numWritten = 0		100978	2		=			
ANR	100986	Identifier	numWritten		100978	0					
ANR	100987	PrimaryExpression	0		100978	1					
ANR	100988	WhileStatement	while ( numWritten < numBytes && iswxdigit ( hex [ 2 * numWritten ] ) && iswxdigit ( hex [ 2 * numWritten + 1 ] ) )		100978	1					
ANR	100989	Condition	numWritten < numBytes && iswxdigit ( hex [ 2 * numWritten ] ) && iswxdigit ( hex [ 2 * numWritten + 1 ] )	135:11:3570:3662	100978	0	True				
ANR	100990	AndExpression	numWritten < numBytes && iswxdigit ( hex [ 2 * numWritten ] ) && iswxdigit ( hex [ 2 * numWritten + 1 ] )		100978	0		&&			
ANR	100991	RelationalExpression	numWritten < numBytes		100978	0		<			
ANR	100992	Identifier	numWritten		100978	0					
ANR	100993	Identifier	numBytes		100978	1					
ANR	100994	AndExpression	iswxdigit ( hex [ 2 * numWritten ] ) && iswxdigit ( hex [ 2 * numWritten + 1 ] )		100978	1		&&			
ANR	100995	CallExpression	iswxdigit ( hex [ 2 * numWritten ] )		100978	0					
ANR	100996	Callee	iswxdigit		100978	0					
ANR	100997	Identifier	iswxdigit		100978	0					
ANR	100998	ArgumentList	hex [ 2 * numWritten ]		100978	1					
ANR	100999	Argument	hex [ 2 * numWritten ]		100978	0					
ANR	101000	ArrayIndexing	hex [ 2 * numWritten ]		100978	0					
ANR	101001	Identifier	hex		100978	0					
ANR	101002	MultiplicativeExpression	2 * numWritten		100978	1		*			
ANR	101003	PrimaryExpression	2		100978	0					
ANR	101004	Identifier	numWritten		100978	1					
ANR	101005	CallExpression	iswxdigit ( hex [ 2 * numWritten + 1 ] )		100978	1					
ANR	101006	Callee	iswxdigit		100978	0					
ANR	101007	Identifier	iswxdigit		100978	0					
ANR	101008	ArgumentList	hex [ 2 * numWritten + 1 ]		100978	1					
ANR	101009	Argument	hex [ 2 * numWritten + 1 ]		100978	0					
ANR	101010	ArrayIndexing	hex [ 2 * numWritten + 1 ]		100978	0					
ANR	101011	Identifier	hex		100978	0					
ANR	101012	AdditiveExpression	2 * numWritten + 1		100978	1		+			
ANR	101013	MultiplicativeExpression	2 * numWritten		100978	0		*			
ANR	101014	PrimaryExpression	2		100978	0					
ANR	101015	Identifier	numWritten		100978	1					
ANR	101016	PrimaryExpression	1		100978	1					
ANR	101017	CompoundStatement		10:8:489:497	100978	1					
ANR	101018	IdentifierDeclStatement	int byte ;	137:8:3681:3689	100978	0	True				
ANR	101019	IdentifierDecl	byte		100978	0					
ANR	101020	IdentifierDeclType	int		100978	0					
ANR	101021	Identifier	byte		100978	1					
ANR	101022	Statement	swscanf	138:8:3700:3706	100978	1	True				
ANR	101023	Statement	(	138:15:3707:3707	100978	2	True				
ANR	101024	Statement	&	138:16:3708:3708	100978	3	True				
ANR	101025	Statement	hex	138:17:3709:3711	100978	4	True				
ANR	101026	Statement	[	138:20:3712:3712	100978	5	True				
ANR	101027	Statement	2	138:21:3713:3713	100978	6	True				
ANR	101028	Statement	*	138:23:3715:3715	100978	7	True				
ANR	101029	Statement	numWritten	138:25:3717:3726	100978	8	True				
ANR	101030	Statement	]	138:35:3727:3727	100978	9	True				
ANR	101031	Statement	","	138:36:3728:3728	100978	10	True				
ANR	101032	Statement	L	138:38:3730:3730	100978	11	True				
ANR	101033	Statement	"""%02x"""	138:39:3731:3736	100978	12	True				
ANR	101034	Statement	","	138:45:3737:3737	100978	13	True				
ANR	101035	Statement	&	138:47:3739:3739	100978	14	True				
ANR	101036	Statement	byte	138:48:3740:3743	100978	15	True				
ANR	101037	Statement	)	138:52:3744:3744	100978	16	True				
ANR	101038	ExpressionStatement		138:53:3745:3745	100978	17	True				
ANR	101039	ExpressionStatement	bytes [ numWritten ] = ( unsigned char ) byte	139:8:3756:3796	100978	18	True				
ANR	101040	AssignmentExpression	bytes [ numWritten ] = ( unsigned char ) byte		100978	0		=			
ANR	101041	ArrayIndexing	bytes [ numWritten ]		100978	0					
ANR	101042	Identifier	bytes		100978	0					
ANR	101043	Identifier	numWritten		100978	1					
ANR	101044	CastExpression	( unsigned char ) byte		100978	1					
ANR	101045	CastTarget	unsigned char		100978	0					
ANR	101046	Identifier	byte		100978	1					
ANR	101047	ExpressionStatement	++ numWritten	140:8:3807:3819	100978	19	True				
ANR	101048	UnaryExpression	++ numWritten		100978	0					
ANR	101049	IncDec	++		100978	0					
ANR	101050	Identifier	numWritten		100978	1					
ANR	101051	ReturnStatement	return numWritten ;	143:4:3835:3852	100978	2	True				
ANR	101052	Identifier	numWritten		100978	0					
ANR	101053	ReturnType	size_t		100978	1					
ANR	101054	Identifier	decodeHexWChars		100978	2					
ANR	101055	ParameterList	"unsigned char * bytes , size_t numBytes , const wchar_t * hex"		100978	3					
ANR	101056	Parameter	unsigned char * bytes	127:24:3128:3148	100978	0	True				
ANR	101057	ParameterType	unsigned char *		100978	0					
ANR	101058	Identifier	bytes		100978	1					
ANR	101059	Parameter	size_t numBytes	127:47:3151:3165	100978	1	True				
ANR	101060	ParameterType	size_t		100978	0					
ANR	101061	Identifier	numBytes		100978	1					
ANR	101062	Parameter	const wchar_t * hex	127:64:3168:3186	100978	2	True				
ANR	101063	ParameterType	const wchar_t *		100978	0					
ANR	101064	Identifier	hex		100978	1					
ANR	101065	CFGEntryNode	ENTRY		100978		True				
ANR	101066	CFGExitNode	EXIT		100978		True				
ANR	101067	Symbol	numBytes		100978						
ANR	101068	Symbol	* numWritten		100978						
ANR	101069	Symbol	iswxdigit		100978						
ANR	101070	Symbol	bytes		100978						
ANR	101071	Symbol	byte		100978						
ANR	101072	Symbol	hex		100978						
ANR	101073	Symbol	* hex		100978						
ANR	101074	Symbol	numWritten		100978						
ANR	101075	Symbol	* bytes		100978						
ANR	101076	Function	globalReturnsTrue	148:0:4010:4054							
ANR	101077	FunctionDef	globalReturnsTrue ()		101076	0					
ANR	101078	CompoundStatement		149:0:4036:4054	101076	0					
ANR	101079	ReturnStatement	return 1 ;	150:4:4043:4051	101076	0	True				
ANR	101080	PrimaryExpression	1		101076	0					
ANR	101081	ReturnType	int		101076	1					
ANR	101082	Identifier	globalReturnsTrue		101076	2					
ANR	101083	ParameterList			101076	3					
ANR	101084	CFGEntryNode	ENTRY		101076		True				
ANR	101085	CFGExitNode	EXIT		101076		True				
ANR	101086	Function	globalReturnsFalse	153:0:4059:4104							
ANR	101087	FunctionDef	globalReturnsFalse ()		101086	0					
ANR	101088	CompoundStatement		154:0:4086:4104	101086	0					
ANR	101089	ReturnStatement	return 0 ;	155:4:4093:4101	101086	0	True				
ANR	101090	PrimaryExpression	0		101086	0					
ANR	101091	ReturnType	int		101086	1					
ANR	101092	Identifier	globalReturnsFalse		101086	2					
ANR	101093	ParameterList			101086	3					
ANR	101094	CFGEntryNode	ENTRY		101086		True				
ANR	101095	CFGExitNode	EXIT		101086		True				
ANR	101096	Function	globalReturnsTrueOrFalse	158:0:4109:4171							
ANR	101097	FunctionDef	globalReturnsTrueOrFalse ()		101096	0					
ANR	101098	CompoundStatement		159:0:4142:4171	101096	0					
ANR	101099	ReturnStatement	return ( rand ( ) % 2 ) ;	160:4:4149:4168	101096	0	True				
ANR	101100	MultiplicativeExpression	rand ( ) % 2		101096	0		%			
ANR	101101	CallExpression	rand ( )		101096	0					
ANR	101102	Callee	rand		101096	0					
ANR	101103	Identifier	rand		101096	0					
ANR	101104	ArgumentList			101096	1					
ANR	101105	PrimaryExpression	2		101096	1					
ANR	101106	ReturnType	int		101096	1					
ANR	101107	Identifier	globalReturnsTrueOrFalse		101096	2					
ANR	101108	ParameterList			101096	3					
ANR	101109	CFGEntryNode	ENTRY		101096		True				
ANR	101110	CFGExitNode	EXIT		101096		True				
ANR	101111	Symbol	rand		101096						
ANR	101112	DeclStmt									
ANR	101113	Decl							const int	const int	GLOBAL_CONST_TRUE
ANR	101114	DeclStmt									
ANR	101115	Decl							const int	const int	GLOBAL_CONST_FALSE
ANR	101116	DeclStmt									
ANR	101117	Decl							const int	const int	GLOBAL_CONST_FIVE
ANR	101118	DeclStmt									
ANR	101119	Decl							int	int	globalTrue
ANR	101120	DeclStmt									
ANR	101121	Decl							int	int	globalFalse
ANR	101122	DeclStmt									
ANR	101123	Decl							int	int	globalFive
ANR	101124	Function	good1	179:0:4905:4920							
ANR	101125	FunctionDef	good1 ()		101124	0					
ANR	101126	CompoundStatement		179:13:4918:4920	101124	0					
ANR	101127	ReturnType	void		101124	1					
ANR	101128	Identifier	good1		101124	2					
ANR	101129	ParameterList			101124	3					
ANR	101130	CFGEntryNode	ENTRY		101124		True				
ANR	101131	CFGExitNode	EXIT		101124		True				
ANR	101132	Function	good2	180:0:4923:4938							
ANR	101133	FunctionDef	good2 ()		101132	0					
ANR	101134	CompoundStatement		180:13:4936:4938	101132	0					
ANR	101135	ReturnType	void		101132	1					
ANR	101136	Identifier	good2		101132	2					
ANR	101137	ParameterList			101132	3					
ANR	101138	CFGEntryNode	ENTRY		101132		True				
ANR	101139	CFGExitNode	EXIT		101132		True				
ANR	101140	Function	good3	181:0:4941:4956							
ANR	101141	FunctionDef	good3 ()		101140	0					
ANR	101142	CompoundStatement		181:13:4954:4956	101140	0					
ANR	101143	ReturnType	void		101140	1					
ANR	101144	Identifier	good3		101140	2					
ANR	101145	ParameterList			101140	3					
ANR	101146	CFGEntryNode	ENTRY		101140		True				
ANR	101147	CFGExitNode	EXIT		101140		True				
ANR	101148	Function	good4	182:0:4959:4974							
ANR	101149	FunctionDef	good4 ()		101148	0					
ANR	101150	CompoundStatement		182:13:4972:4974	101148	0					
ANR	101151	ReturnType	void		101148	1					
ANR	101152	Identifier	good4		101148	2					
ANR	101153	ParameterList			101148	3					
ANR	101154	CFGEntryNode	ENTRY		101148		True				
ANR	101155	CFGExitNode	EXIT		101148		True				
ANR	101156	Function	good5	183:0:4977:4992							
ANR	101157	FunctionDef	good5 ()		101156	0					
ANR	101158	CompoundStatement		183:13:4990:4992	101156	0					
ANR	101159	ReturnType	void		101156	1					
ANR	101160	Identifier	good5		101156	2					
ANR	101161	ParameterList			101156	3					
ANR	101162	CFGEntryNode	ENTRY		101156		True				
ANR	101163	CFGExitNode	EXIT		101156		True				
ANR	101164	Function	good6	184:0:4995:5010							
ANR	101165	FunctionDef	good6 ()		101164	0					
ANR	101166	CompoundStatement		184:13:5008:5010	101164	0					
ANR	101167	ReturnType	void		101164	1					
ANR	101168	Identifier	good6		101164	2					
ANR	101169	ParameterList			101164	3					
ANR	101170	CFGEntryNode	ENTRY		101164		True				
ANR	101171	CFGExitNode	EXIT		101164		True				
ANR	101172	Function	good7	185:0:5013:5028							
ANR	101173	FunctionDef	good7 ()		101172	0					
ANR	101174	CompoundStatement		185:13:5026:5028	101172	0					
ANR	101175	ReturnType	void		101172	1					
ANR	101176	Identifier	good7		101172	2					
ANR	101177	ParameterList			101172	3					
ANR	101178	CFGEntryNode	ENTRY		101172		True				
ANR	101179	CFGExitNode	EXIT		101172		True				
ANR	101180	Function	good8	186:0:5031:5046							
ANR	101181	FunctionDef	good8 ()		101180	0					
ANR	101182	CompoundStatement		186:13:5044:5046	101180	0					
ANR	101183	ReturnType	void		101180	1					
ANR	101184	Identifier	good8		101180	2					
ANR	101185	ParameterList			101180	3					
ANR	101186	CFGEntryNode	ENTRY		101180		True				
ANR	101187	CFGExitNode	EXIT		101180		True				
ANR	101188	Function	good9	187:0:5049:5064							
ANR	101189	FunctionDef	good9 ()		101188	0					
ANR	101190	CompoundStatement		187:13:5062:5064	101188	0					
ANR	101191	ReturnType	void		101188	1					
ANR	101192	Identifier	good9		101188	2					
ANR	101193	ParameterList			101188	3					
ANR	101194	CFGEntryNode	ENTRY		101188		True				
ANR	101195	CFGExitNode	EXIT		101188		True				
ANR	101196	Function	bad1	190:0:5112:5126							
ANR	101197	FunctionDef	bad1 ()		101196	0					
ANR	101198	CompoundStatement		190:12:5124:5126	101196	0					
ANR	101199	ReturnType	void		101196	1					
ANR	101200	Identifier	bad1		101196	2					
ANR	101201	ParameterList			101196	3					
ANR	101202	CFGEntryNode	ENTRY		101196		True				
ANR	101203	CFGExitNode	EXIT		101196		True				
ANR	101204	Function	bad2	191:0:5129:5143							
ANR	101205	FunctionDef	bad2 ()		101204	0					
ANR	101206	CompoundStatement		191:12:5141:5143	101204	0					
ANR	101207	ReturnType	void		101204	1					
ANR	101208	Identifier	bad2		101204	2					
ANR	101209	ParameterList			101204	3					
ANR	101210	CFGEntryNode	ENTRY		101204		True				
ANR	101211	CFGExitNode	EXIT		101204		True				
ANR	101212	Function	bad3	192:0:5146:5160							
ANR	101213	FunctionDef	bad3 ()		101212	0					
ANR	101214	CompoundStatement		192:12:5158:5160	101212	0					
ANR	101215	ReturnType	void		101212	1					
ANR	101216	Identifier	bad3		101212	2					
ANR	101217	ParameterList			101212	3					
ANR	101218	CFGEntryNode	ENTRY		101212		True				
ANR	101219	CFGExitNode	EXIT		101212		True				
ANR	101220	Function	bad4	193:0:5163:5177							
ANR	101221	FunctionDef	bad4 ()		101220	0					
ANR	101222	CompoundStatement		193:12:5175:5177	101220	0					
ANR	101223	ReturnType	void		101220	1					
ANR	101224	Identifier	bad4		101220	2					
ANR	101225	ParameterList			101220	3					
ANR	101226	CFGEntryNode	ENTRY		101220		True				
ANR	101227	CFGExitNode	EXIT		101220		True				
ANR	101228	Function	bad5	194:0:5180:5194							
ANR	101229	FunctionDef	bad5 ()		101228	0					
ANR	101230	CompoundStatement		194:12:5192:5194	101228	0					
ANR	101231	ReturnType	void		101228	1					
ANR	101232	Identifier	bad5		101228	2					
ANR	101233	ParameterList			101228	3					
ANR	101234	CFGEntryNode	ENTRY		101228		True				
ANR	101235	CFGExitNode	EXIT		101228		True				
ANR	101236	Function	bad6	195:0:5197:5211							
ANR	101237	FunctionDef	bad6 ()		101236	0					
ANR	101238	CompoundStatement		195:12:5209:5211	101236	0					
ANR	101239	ReturnType	void		101236	1					
ANR	101240	Identifier	bad6		101236	2					
ANR	101241	ParameterList			101236	3					
ANR	101242	CFGEntryNode	ENTRY		101236		True				
ANR	101243	CFGExitNode	EXIT		101236		True				
ANR	101244	Function	bad7	196:0:5214:5228							
ANR	101245	FunctionDef	bad7 ()		101244	0					
ANR	101246	CompoundStatement		196:12:5226:5228	101244	0					
ANR	101247	ReturnType	void		101244	1					
ANR	101248	Identifier	bad7		101244	2					
ANR	101249	ParameterList			101244	3					
ANR	101250	CFGEntryNode	ENTRY		101244		True				
ANR	101251	CFGExitNode	EXIT		101244		True				
ANR	101252	Function	bad8	197:0:5231:5245							
ANR	101253	FunctionDef	bad8 ()		101252	0					
ANR	101254	CompoundStatement		197:12:5243:5245	101252	0					
ANR	101255	ReturnType	void		101252	1					
ANR	101256	Identifier	bad8		101252	2					
ANR	101257	ParameterList			101252	3					
ANR	101258	CFGEntryNode	ENTRY		101252		True				
ANR	101259	CFGExitNode	EXIT		101252		True				
ANR	101260	Function	bad9	198:0:5248:5262							
ANR	101261	FunctionDef	bad9 ()		101260	0					
ANR	101262	CompoundStatement		198:12:5260:5262	101260	0					
ANR	101263	ReturnType	void		101260	1					
ANR	101264	Identifier	bad9		101260	2					
ANR	101265	ParameterList			101260	3					
ANR	101266	CFGEntryNode	ENTRY		101260		True				
ANR	101267	CFGExitNode	EXIT		101260		True				
ANR	101268	DeclStmt									
ANR	101269	Decl							int	int	globalArgc
ANR	101270	DeclStmt									
ANR	101271	Decl							char	char * *	globalArgv
