command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	366463	File	/develop/joernDwkProcess/joern-dev/./output/data/CWE119/source-code/119-1600-c/testcases/000/233/461/CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_09.c								
ANR	366464	Function	CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_09_bad	23:0:621:1458							
ANR	366465	FunctionDef	CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_09_bad ()		366464	0					
ANR	366466	CompoundStatement		24:0:690:1458	366464	0					
ANR	366467	IdentifierDeclStatement	char * data ;	25:4:697:708	366464	0	True				
ANR	366468	IdentifierDecl	* data		366464	0					
ANR	366469	IdentifierDeclType	char *		366464	0					
ANR	366470	Identifier	data		366464	1					
ANR	366471	ExpressionStatement	data = ( char * ) malloc ( 100 * sizeof ( char ) )	26:4:715:754	366464	1	True				
ANR	366472	AssignmentExpression	data = ( char * ) malloc ( 100 * sizeof ( char ) )		366464	0		=			
ANR	366473	Identifier	data		366464	0					
ANR	366474	CastExpression	( char * ) malloc ( 100 * sizeof ( char ) )		366464	1					
ANR	366475	CastTarget	char *		366464	0					
ANR	366476	CallExpression	malloc ( 100 * sizeof ( char ) )		366464	1					
ANR	366477	Callee	malloc		366464	0					
ANR	366478	Identifier	malloc		366464	0					
ANR	366479	ArgumentList	100 * sizeof ( char )		366464	1					
ANR	366480	Argument	100 * sizeof ( char )		366464	0					
ANR	366481	MultiplicativeExpression	100 * sizeof ( char )		366464	0		*			
ANR	366482	PrimaryExpression	100		366464	0					
ANR	366483	SizeofExpression	sizeof ( char )		366464	1					
ANR	366484	Sizeof	sizeof		366464	0					
ANR	366485	SizeofOperand	char		366464	1					
ANR	366486	IfStatement	if ( data == NULL )		366464	2					
ANR	366487	Condition	data == NULL	27:8:765:776	366464	0	True				
ANR	366488	EqualityExpression	data == NULL		366464	0		==			
ANR	366489	Identifier	data		366464	0					
ANR	366490	Identifier	NULL		366464	1					
ANR	366491	CompoundStatement		4:22:88:88	366464	1					
ANR	366492	ExpressionStatement	exit ( - 1 )	27:23:780:788	366464	0	True				
ANR	366493	CallExpression	exit ( - 1 )		366464	0					
ANR	366494	Callee	exit		366464	0					
ANR	366495	Identifier	exit		366464	0					
ANR	366496	ArgumentList	- 1		366464	1					
ANR	366497	Argument	- 1		366464	0					
ANR	366498	UnaryOperationExpression	- 1		366464	0					
ANR	366499	UnaryOperator	-		366464	0					
ANR	366500	PrimaryExpression	1		366464	1					
ANR	366501	IfStatement	if ( GLOBAL_CONST_TRUE )		366464	3					
ANR	366502	Condition	GLOBAL_CONST_TRUE	28:7:798:814	366464	0	True				
ANR	366503	Identifier	GLOBAL_CONST_TRUE		366464	0					
ANR	366504	CompoundStatement		6:4:131:131	366464	1					
ANR	366505	ExpressionStatement	"memset ( data , 'A' , 100 - 1 )"	31:8:942:966	366464	0	True				
ANR	366506	CallExpression	"memset ( data , 'A' , 100 - 1 )"		366464	0					
ANR	366507	Callee	memset		366464	0					
ANR	366508	Identifier	memset		366464	0					
ANR	366509	ArgumentList	data		366464	1					
ANR	366510	Argument	data		366464	0					
ANR	366511	Identifier	data		366464	0					
ANR	366512	Argument	'A'		366464	1					
ANR	366513	PrimaryExpression	'A'		366464	0					
ANR	366514	Argument	100 - 1		366464	2					
ANR	366515	AdditiveExpression	100 - 1		366464	0		-			
ANR	366516	PrimaryExpression	100		366464	0					
ANR	366517	PrimaryExpression	1		366464	1					
ANR	366518	ExpressionStatement	data [ 100 - 1 ] = '\\0'	32:8:998:1016	366464	1	True				
ANR	366519	AssignmentExpression	data [ 100 - 1 ] = '\\0'		366464	0		=			
ANR	366520	ArrayIndexing	data [ 100 - 1 ]		366464	0					
ANR	366521	Identifier	data		366464	0					
ANR	366522	AdditiveExpression	100 - 1		366464	1		-			
ANR	366523	PrimaryExpression	100		366464	0					
ANR	366524	PrimaryExpression	1		366464	1					
ANR	366525	PrimaryExpression	'\\0'		366464	1					
ANR	366526	CompoundStatement		13:8:400:417	366464	4					
ANR	366527	IdentifierDeclStatement	"char dest [ 50 ] = """" ;"	35:8:1062:1080	366464	0	True				
ANR	366528	IdentifierDecl	"dest [ 50 ] = """""		366464	0					
ANR	366529	IdentifierDeclType	char [ 50 ]		366464	0					
ANR	366530	Identifier	dest		366464	1					
ANR	366531	PrimaryExpression	50		366464	2					
ANR	366532	AssignmentExpression	"dest [ 50 ] = """""		366464	3		=			
ANR	366533	Identifier	dest		366464	0					
ANR	366534	PrimaryExpression	""""""		366464	1					
ANR	366535	IdentifierDeclStatement	"size_t i , dataLen ;"	36:8:1091:1108	366464	1	True				
ANR	366536	IdentifierDecl	i		366464	0					
ANR	366537	IdentifierDeclType	size_t		366464	0					
ANR	366538	Identifier	i		366464	1					
ANR	366539	IdentifierDecl	dataLen		366464	1					
ANR	366540	IdentifierDeclType	size_t		366464	0					
ANR	366541	Identifier	dataLen		366464	1					
ANR	366542	ExpressionStatement	dataLen = strlen ( data )	37:8:1119:1141	366464	2	True				
ANR	366543	AssignmentExpression	dataLen = strlen ( data )		366464	0		=			
ANR	366544	Identifier	dataLen		366464	0					
ANR	366545	CallExpression	strlen ( data )		366464	1					
ANR	366546	Callee	strlen		366464	0					
ANR	366547	Identifier	strlen		366464	0					
ANR	366548	ArgumentList	data		366464	1					
ANR	366549	Argument	data		366464	0					
ANR	366550	Identifier	data		366464	0					
ANR	366551	ForStatement	for ( i = 0 ; i < dataLen ; i ++ )		366464	3					
ANR	366552	ForInit	i = 0 ;	39:13:1241:1246	366464	0	True				
ANR	366553	AssignmentExpression	i = 0		366464	0		=			
ANR	366554	Identifier	i		366464	0					
ANR	366555	PrimaryExpression	0		366464	1					
ANR	366556	Condition	i < dataLen	39:20:1248:1258	366464	1	True				
ANR	366557	RelationalExpression	i < dataLen		366464	0		<			
ANR	366558	Identifier	i		366464	0					
ANR	366559	Identifier	dataLen		366464	1					
ANR	366560	PostIncDecOperationExpression	i ++	39:33:1261:1263	366464	2	True				
ANR	366561	Identifier	i		366464	0					
ANR	366562	IncDec	++		366464	1					
ANR	366563	CompoundStatement		17:8:584:584	366464	3					
ANR	366564	ExpressionStatement	dest [ i ] = data [ i ]	41:12:1290:1307	366464	0	True				
ANR	366565	AssignmentExpression	dest [ i ] = data [ i ]		366464	0		=			
ANR	366566	ArrayIndexing	dest [ i ]		366464	0					
ANR	366567	Identifier	dest		366464	0					
ANR	366568	Identifier	i		366464	1					
ANR	366569	ArrayIndexing	data [ i ]		366464	1					
ANR	366570	Identifier	data		366464	0					
ANR	366571	Identifier	i		366464	1					
ANR	366572	ExpressionStatement	dest [ 50 - 1 ] = '\\0'	43:8:1329:1346	366464	4	True				
ANR	366573	AssignmentExpression	dest [ 50 - 1 ] = '\\0'		366464	0		=			
ANR	366574	ArrayIndexing	dest [ 50 - 1 ]		366464	0					
ANR	366575	Identifier	dest		366464	0					
ANR	366576	AdditiveExpression	50 - 1		366464	1		-			
ANR	366577	PrimaryExpression	50		366464	0					
ANR	366578	PrimaryExpression	1		366464	1					
ANR	366579	PrimaryExpression	'\\0'		366464	1					
ANR	366580	ExpressionStatement	printLine ( data )	44:8:1412:1427	366464	5	True				
ANR	366581	CallExpression	printLine ( data )		366464	0					
ANR	366582	Callee	printLine		366464	0					
ANR	366583	Identifier	printLine		366464	0					
ANR	366584	ArgumentList	data		366464	1					
ANR	366585	Argument	data		366464	0					
ANR	366586	Identifier	data		366464	0					
ANR	366587	ExpressionStatement	free ( data )	45:8:1438:1448	366464	6	True				
ANR	366588	CallExpression	free ( data )		366464	0					
ANR	366589	Callee	free		366464	0					
ANR	366590	Identifier	free		366464	0					
ANR	366591	ArgumentList	data		366464	1					
ANR	366592	Argument	data		366464	0					
ANR	366593	Identifier	data		366464	0					
ANR	366594	ReturnType	void		366464	1					
ANR	366595	Identifier	CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_09_bad		366464	2					
ANR	366596	ParameterList			366464	3					
ANR	366597	CFGEntryNode	ENTRY		366464		True				
ANR	366598	CFGExitNode	EXIT		366464		True				
ANR	366599	Symbol	malloc		366464						
ANR	366600	Symbol	strlen		366464						
ANR	366601	Symbol	NULL		366464						
ANR	366602	Symbol	* i		366464						
ANR	366603	Symbol	data		366464						
ANR	366604	Symbol	* dest		366464						
ANR	366605	Symbol	GLOBAL_CONST_TRUE		366464						
ANR	366606	Symbol	i		366464						
ANR	366607	Symbol	dest		366464						
ANR	366608	Symbol	* data		366464						
ANR	366609	Symbol	dataLen		366464						
ANR	366610	Function	goodG2B1	54:0:1610:2554							
ANR	366611	FunctionDef	goodG2B1 ()		366610	0					
ANR	366612	CompoundStatement		55:0:1634:2554	366610	0					
ANR	366613	IdentifierDeclStatement	char * data ;	56:4:1641:1652	366610	0	True				
ANR	366614	IdentifierDecl	* data		366610	0					
ANR	366615	IdentifierDeclType	char *		366610	0					
ANR	366616	Identifier	data		366610	1					
ANR	366617	ExpressionStatement	data = ( char * ) malloc ( 100 * sizeof ( char ) )	57:4:1659:1698	366610	1	True				
ANR	366618	AssignmentExpression	data = ( char * ) malloc ( 100 * sizeof ( char ) )		366610	0		=			
ANR	366619	Identifier	data		366610	0					
ANR	366620	CastExpression	( char * ) malloc ( 100 * sizeof ( char ) )		366610	1					
ANR	366621	CastTarget	char *		366610	0					
ANR	366622	CallExpression	malloc ( 100 * sizeof ( char ) )		366610	1					
ANR	366623	Callee	malloc		366610	0					
ANR	366624	Identifier	malloc		366610	0					
ANR	366625	ArgumentList	100 * sizeof ( char )		366610	1					
ANR	366626	Argument	100 * sizeof ( char )		366610	0					
ANR	366627	MultiplicativeExpression	100 * sizeof ( char )		366610	0		*			
ANR	366628	PrimaryExpression	100		366610	0					
ANR	366629	SizeofExpression	sizeof ( char )		366610	1					
ANR	366630	Sizeof	sizeof		366610	0					
ANR	366631	SizeofOperand	char		366610	1					
ANR	366632	IfStatement	if ( data == NULL )		366610	2					
ANR	366633	Condition	data == NULL	58:8:1709:1720	366610	0	True				
ANR	366634	EqualityExpression	data == NULL		366610	0		==			
ANR	366635	Identifier	data		366610	0					
ANR	366636	Identifier	NULL		366610	1					
ANR	366637	CompoundStatement		4:22:88:88	366610	1					
ANR	366638	ExpressionStatement	exit ( - 1 )	58:23:1724:1732	366610	0	True				
ANR	366639	CallExpression	exit ( - 1 )		366610	0					
ANR	366640	Callee	exit		366610	0					
ANR	366641	Identifier	exit		366610	0					
ANR	366642	ArgumentList	- 1		366610	1					
ANR	366643	Argument	- 1		366610	0					
ANR	366644	UnaryOperationExpression	- 1		366610	0					
ANR	366645	UnaryOperator	-		366610	0					
ANR	366646	PrimaryExpression	1		366610	1					
ANR	366647	IfStatement	if ( GLOBAL_CONST_FALSE )		366610	3					
ANR	366648	Condition	GLOBAL_CONST_FALSE	59:7:1742:1759	366610	0	True				
ANR	366649	Identifier	GLOBAL_CONST_FALSE		366610	0					
ANR	366650	CompoundStatement		6:4:132:132	366610	1					
ANR	366651	ExpressionStatement	"printLine ( ""Benign, fixed string"" )"	62:8:1854:1887	366610	0	True				
ANR	366652	CallExpression	"printLine ( ""Benign, fixed string"" )"		366610	0					
ANR	366653	Callee	printLine		366610	0					
ANR	366654	Identifier	printLine		366610	0					
ANR	366655	ArgumentList	"""Benign, fixed string"""		366610	1					
ANR	366656	Argument	"""Benign, fixed string"""		366610	0					
ANR	366657	PrimaryExpression	"""Benign, fixed string"""		366610	0					
ANR	366658	ElseStatement	else		366610	0					
ANR	366659	CompoundStatement		11:4:276:276	366610	0					
ANR	366660	ExpressionStatement	"memset ( data , 'A' , 50 - 1 )"	67:8:2040:2063	366610	0	True				
ANR	366661	CallExpression	"memset ( data , 'A' , 50 - 1 )"		366610	0					
ANR	366662	Callee	memset		366610	0					
ANR	366663	Identifier	memset		366610	0					
ANR	366664	ArgumentList	data		366610	1					
ANR	366665	Argument	data		366610	0					
ANR	366666	Identifier	data		366610	0					
ANR	366667	Argument	'A'		366610	1					
ANR	366668	PrimaryExpression	'A'		366610	0					
ANR	366669	Argument	50 - 1		366610	2					
ANR	366670	AdditiveExpression	50 - 1		366610	0		-			
ANR	366671	PrimaryExpression	50		366610	0					
ANR	366672	PrimaryExpression	1		366610	1					
ANR	366673	ExpressionStatement	data [ 50 - 1 ] = '\\0'	68:8:2095:2112	366610	1	True				
ANR	366674	AssignmentExpression	data [ 50 - 1 ] = '\\0'		366610	0		=			
ANR	366675	ArrayIndexing	data [ 50 - 1 ]		366610	0					
ANR	366676	Identifier	data		366610	0					
ANR	366677	AdditiveExpression	50 - 1		366610	1		-			
ANR	366678	PrimaryExpression	50		366610	0					
ANR	366679	PrimaryExpression	1		366610	1					
ANR	366680	PrimaryExpression	'\\0'		366610	1					
ANR	366681	CompoundStatement		18:8:552:569	366610	4					
ANR	366682	IdentifierDeclStatement	"char dest [ 50 ] = """" ;"	71:8:2158:2176	366610	0	True				
ANR	366683	IdentifierDecl	"dest [ 50 ] = """""		366610	0					
ANR	366684	IdentifierDeclType	char [ 50 ]		366610	0					
ANR	366685	Identifier	dest		366610	1					
ANR	366686	PrimaryExpression	50		366610	2					
ANR	366687	AssignmentExpression	"dest [ 50 ] = """""		366610	3		=			
ANR	366688	Identifier	dest		366610	0					
ANR	366689	PrimaryExpression	""""""		366610	1					
ANR	366690	IdentifierDeclStatement	"size_t i , dataLen ;"	72:8:2187:2204	366610	1	True				
ANR	366691	IdentifierDecl	i		366610	0					
ANR	366692	IdentifierDeclType	size_t		366610	0					
ANR	366693	Identifier	i		366610	1					
ANR	366694	IdentifierDecl	dataLen		366610	1					
ANR	366695	IdentifierDeclType	size_t		366610	0					
ANR	366696	Identifier	dataLen		366610	1					
ANR	366697	ExpressionStatement	dataLen = strlen ( data )	73:8:2215:2237	366610	2	True				
ANR	366698	AssignmentExpression	dataLen = strlen ( data )		366610	0		=			
ANR	366699	Identifier	dataLen		366610	0					
ANR	366700	CallExpression	strlen ( data )		366610	1					
ANR	366701	Callee	strlen		366610	0					
ANR	366702	Identifier	strlen		366610	0					
ANR	366703	ArgumentList	data		366610	1					
ANR	366704	Argument	data		366610	0					
ANR	366705	Identifier	data		366610	0					
ANR	366706	ForStatement	for ( i = 0 ; i < dataLen ; i ++ )		366610	3					
ANR	366707	ForInit	i = 0 ;	75:13:2337:2342	366610	0	True				
ANR	366708	AssignmentExpression	i = 0		366610	0		=			
ANR	366709	Identifier	i		366610	0					
ANR	366710	PrimaryExpression	0		366610	1					
ANR	366711	Condition	i < dataLen	75:20:2344:2354	366610	1	True				
ANR	366712	RelationalExpression	i < dataLen		366610	0		<			
ANR	366713	Identifier	i		366610	0					
ANR	366714	Identifier	dataLen		366610	1					
ANR	366715	PostIncDecOperationExpression	i ++	75:33:2357:2359	366610	2	True				
ANR	366716	Identifier	i		366610	0					
ANR	366717	IncDec	++		366610	1					
ANR	366718	CompoundStatement		22:8:736:736	366610	3					
ANR	366719	ExpressionStatement	dest [ i ] = data [ i ]	77:12:2386:2403	366610	0	True				
ANR	366720	AssignmentExpression	dest [ i ] = data [ i ]		366610	0		=			
ANR	366721	ArrayIndexing	dest [ i ]		366610	0					
ANR	366722	Identifier	dest		366610	0					
ANR	366723	Identifier	i		366610	1					
ANR	366724	ArrayIndexing	data [ i ]		366610	1					
ANR	366725	Identifier	data		366610	0					
ANR	366726	Identifier	i		366610	1					
ANR	366727	ExpressionStatement	dest [ 50 - 1 ] = '\\0'	79:8:2425:2442	366610	4	True				
ANR	366728	AssignmentExpression	dest [ 50 - 1 ] = '\\0'		366610	0		=			
ANR	366729	ArrayIndexing	dest [ 50 - 1 ]		366610	0					
ANR	366730	Identifier	dest		366610	0					
ANR	366731	AdditiveExpression	50 - 1		366610	1		-			
ANR	366732	PrimaryExpression	50		366610	0					
ANR	366733	PrimaryExpression	1		366610	1					
ANR	366734	PrimaryExpression	'\\0'		366610	1					
ANR	366735	ExpressionStatement	printLine ( data )	80:8:2508:2523	366610	5	True				
ANR	366736	CallExpression	printLine ( data )		366610	0					
ANR	366737	Callee	printLine		366610	0					
ANR	366738	Identifier	printLine		366610	0					
ANR	366739	ArgumentList	data		366610	1					
ANR	366740	Argument	data		366610	0					
ANR	366741	Identifier	data		366610	0					
ANR	366742	ExpressionStatement	free ( data )	81:8:2534:2544	366610	6	True				
ANR	366743	CallExpression	free ( data )		366610	0					
ANR	366744	Callee	free		366610	0					
ANR	366745	Identifier	free		366610	0					
ANR	366746	ArgumentList	data		366610	1					
ANR	366747	Argument	data		366610	0					
ANR	366748	Identifier	data		366610	0					
ANR	366749	ReturnType	static void		366610	1					
ANR	366750	Identifier	goodG2B1		366610	2					
ANR	366751	ParameterList			366610	3					
ANR	366752	CFGEntryNode	ENTRY		366610		True				
ANR	366753	CFGExitNode	EXIT		366610		True				
ANR	366754	Symbol	GLOBAL_CONST_FALSE		366610						
ANR	366755	Symbol	malloc		366610						
ANR	366756	Symbol	strlen		366610						
ANR	366757	Symbol	NULL		366610						
ANR	366758	Symbol	* i		366610						
ANR	366759	Symbol	data		366610						
ANR	366760	Symbol	* dest		366610						
ANR	366761	Symbol	i		366610						
ANR	366762	Symbol	dest		366610						
ANR	366763	Symbol	* data		366610						
ANR	366764	Symbol	dataLen		366610						
ANR	366765	Function	goodG2B2	86:0:2650:3449							
ANR	366766	FunctionDef	goodG2B2 ()		366765	0					
ANR	366767	CompoundStatement		87:0:2674:3449	366765	0					
ANR	366768	IdentifierDeclStatement	char * data ;	88:4:2681:2692	366765	0	True				
ANR	366769	IdentifierDecl	* data		366765	0					
ANR	366770	IdentifierDeclType	char *		366765	0					
ANR	366771	Identifier	data		366765	1					
ANR	366772	ExpressionStatement	data = ( char * ) malloc ( 100 * sizeof ( char ) )	89:4:2699:2738	366765	1	True				
ANR	366773	AssignmentExpression	data = ( char * ) malloc ( 100 * sizeof ( char ) )		366765	0		=			
ANR	366774	Identifier	data		366765	0					
ANR	366775	CastExpression	( char * ) malloc ( 100 * sizeof ( char ) )		366765	1					
ANR	366776	CastTarget	char *		366765	0					
ANR	366777	CallExpression	malloc ( 100 * sizeof ( char ) )		366765	1					
ANR	366778	Callee	malloc		366765	0					
ANR	366779	Identifier	malloc		366765	0					
ANR	366780	ArgumentList	100 * sizeof ( char )		366765	1					
ANR	366781	Argument	100 * sizeof ( char )		366765	0					
ANR	366782	MultiplicativeExpression	100 * sizeof ( char )		366765	0		*			
ANR	366783	PrimaryExpression	100		366765	0					
ANR	366784	SizeofExpression	sizeof ( char )		366765	1					
ANR	366785	Sizeof	sizeof		366765	0					
ANR	366786	SizeofOperand	char		366765	1					
ANR	366787	IfStatement	if ( data == NULL )		366765	2					
ANR	366788	Condition	data == NULL	90:8:2749:2760	366765	0	True				
ANR	366789	EqualityExpression	data == NULL		366765	0		==			
ANR	366790	Identifier	data		366765	0					
ANR	366791	Identifier	NULL		366765	1					
ANR	366792	CompoundStatement		4:22:88:88	366765	1					
ANR	366793	ExpressionStatement	exit ( - 1 )	90:23:2764:2772	366765	0	True				
ANR	366794	CallExpression	exit ( - 1 )		366765	0					
ANR	366795	Callee	exit		366765	0					
ANR	366796	Identifier	exit		366765	0					
ANR	366797	ArgumentList	- 1		366765	1					
ANR	366798	Argument	- 1		366765	0					
ANR	366799	UnaryOperationExpression	- 1		366765	0					
ANR	366800	UnaryOperator	-		366765	0					
ANR	366801	PrimaryExpression	1		366765	1					
ANR	366802	IfStatement	if ( GLOBAL_CONST_TRUE )		366765	3					
ANR	366803	Condition	GLOBAL_CONST_TRUE	91:7:2782:2798	366765	0	True				
ANR	366804	Identifier	GLOBAL_CONST_TRUE		366765	0					
ANR	366805	CompoundStatement		6:4:131:131	366765	1					
ANR	366806	ExpressionStatement	"memset ( data , 'A' , 50 - 1 )"	94:8:2935:2958	366765	0	True				
ANR	366807	CallExpression	"memset ( data , 'A' , 50 - 1 )"		366765	0					
ANR	366808	Callee	memset		366765	0					
ANR	366809	Identifier	memset		366765	0					
ANR	366810	ArgumentList	data		366765	1					
ANR	366811	Argument	data		366765	0					
ANR	366812	Identifier	data		366765	0					
ANR	366813	Argument	'A'		366765	1					
ANR	366814	PrimaryExpression	'A'		366765	0					
ANR	366815	Argument	50 - 1		366765	2					
ANR	366816	AdditiveExpression	50 - 1		366765	0		-			
ANR	366817	PrimaryExpression	50		366765	0					
ANR	366818	PrimaryExpression	1		366765	1					
ANR	366819	ExpressionStatement	data [ 50 - 1 ] = '\\0'	95:8:2990:3007	366765	1	True				
ANR	366820	AssignmentExpression	data [ 50 - 1 ] = '\\0'		366765	0		=			
ANR	366821	ArrayIndexing	data [ 50 - 1 ]		366765	0					
ANR	366822	Identifier	data		366765	0					
ANR	366823	AdditiveExpression	50 - 1		366765	1		-			
ANR	366824	PrimaryExpression	50		366765	0					
ANR	366825	PrimaryExpression	1		366765	1					
ANR	366826	PrimaryExpression	'\\0'		366765	1					
ANR	366827	CompoundStatement		13:8:407:424	366765	4					
ANR	366828	IdentifierDeclStatement	"char dest [ 50 ] = """" ;"	98:8:3053:3071	366765	0	True				
ANR	366829	IdentifierDecl	"dest [ 50 ] = """""		366765	0					
ANR	366830	IdentifierDeclType	char [ 50 ]		366765	0					
ANR	366831	Identifier	dest		366765	1					
ANR	366832	PrimaryExpression	50		366765	2					
ANR	366833	AssignmentExpression	"dest [ 50 ] = """""		366765	3		=			
ANR	366834	Identifier	dest		366765	0					
ANR	366835	PrimaryExpression	""""""		366765	1					
ANR	366836	IdentifierDeclStatement	"size_t i , dataLen ;"	99:8:3082:3099	366765	1	True				
ANR	366837	IdentifierDecl	i		366765	0					
ANR	366838	IdentifierDeclType	size_t		366765	0					
ANR	366839	Identifier	i		366765	1					
ANR	366840	IdentifierDecl	dataLen		366765	1					
ANR	366841	IdentifierDeclType	size_t		366765	0					
ANR	366842	Identifier	dataLen		366765	1					
ANR	366843	ExpressionStatement	dataLen = strlen ( data )	100:8:3110:3132	366765	2	True				
ANR	366844	AssignmentExpression	dataLen = strlen ( data )		366765	0		=			
ANR	366845	Identifier	dataLen		366765	0					
ANR	366846	CallExpression	strlen ( data )		366765	1					
ANR	366847	Callee	strlen		366765	0					
ANR	366848	Identifier	strlen		366765	0					
ANR	366849	ArgumentList	data		366765	1					
ANR	366850	Argument	data		366765	0					
ANR	366851	Identifier	data		366765	0					
ANR	366852	ForStatement	for ( i = 0 ; i < dataLen ; i ++ )		366765	3					
ANR	366853	ForInit	i = 0 ;	102:13:3232:3237	366765	0	True				
ANR	366854	AssignmentExpression	i = 0		366765	0		=			
ANR	366855	Identifier	i		366765	0					
ANR	366856	PrimaryExpression	0		366765	1					
ANR	366857	Condition	i < dataLen	102:20:3239:3249	366765	1	True				
ANR	366858	RelationalExpression	i < dataLen		366765	0		<			
ANR	366859	Identifier	i		366765	0					
ANR	366860	Identifier	dataLen		366765	1					
ANR	366861	PostIncDecOperationExpression	i ++	102:33:3252:3254	366765	2	True				
ANR	366862	Identifier	i		366765	0					
ANR	366863	IncDec	++		366765	1					
ANR	366864	CompoundStatement		17:8:591:591	366765	3					
ANR	366865	ExpressionStatement	dest [ i ] = data [ i ]	104:12:3281:3298	366765	0	True				
ANR	366866	AssignmentExpression	dest [ i ] = data [ i ]		366765	0		=			
ANR	366867	ArrayIndexing	dest [ i ]		366765	0					
ANR	366868	Identifier	dest		366765	0					
ANR	366869	Identifier	i		366765	1					
ANR	366870	ArrayIndexing	data [ i ]		366765	1					
ANR	366871	Identifier	data		366765	0					
ANR	366872	Identifier	i		366765	1					
ANR	366873	ExpressionStatement	dest [ 50 - 1 ] = '\\0'	106:8:3320:3337	366765	4	True				
ANR	366874	AssignmentExpression	dest [ 50 - 1 ] = '\\0'		366765	0		=			
ANR	366875	ArrayIndexing	dest [ 50 - 1 ]		366765	0					
ANR	366876	Identifier	dest		366765	0					
ANR	366877	AdditiveExpression	50 - 1		366765	1		-			
ANR	366878	PrimaryExpression	50		366765	0					
ANR	366879	PrimaryExpression	1		366765	1					
ANR	366880	PrimaryExpression	'\\0'		366765	1					
ANR	366881	ExpressionStatement	printLine ( data )	107:8:3403:3418	366765	5	True				
ANR	366882	CallExpression	printLine ( data )		366765	0					
ANR	366883	Callee	printLine		366765	0					
ANR	366884	Identifier	printLine		366765	0					
ANR	366885	ArgumentList	data		366765	1					
ANR	366886	Argument	data		366765	0					
ANR	366887	Identifier	data		366765	0					
ANR	366888	ExpressionStatement	free ( data )	108:8:3429:3439	366765	6	True				
ANR	366889	CallExpression	free ( data )		366765	0					
ANR	366890	Callee	free		366765	0					
ANR	366891	Identifier	free		366765	0					
ANR	366892	ArgumentList	data		366765	1					
ANR	366893	Argument	data		366765	0					
ANR	366894	Identifier	data		366765	0					
ANR	366895	ReturnType	static void		366765	1					
ANR	366896	Identifier	goodG2B2		366765	2					
ANR	366897	ParameterList			366765	3					
ANR	366898	CFGEntryNode	ENTRY		366765		True				
ANR	366899	CFGExitNode	EXIT		366765		True				
ANR	366900	Symbol	malloc		366765						
ANR	366901	Symbol	strlen		366765						
ANR	366902	Symbol	NULL		366765						
ANR	366903	Symbol	* i		366765						
ANR	366904	Symbol	data		366765						
ANR	366905	Symbol	* dest		366765						
ANR	366906	Symbol	GLOBAL_CONST_TRUE		366765						
ANR	366907	Symbol	i		366765						
ANR	366908	Symbol	dest		366765						
ANR	366909	Symbol	* data		366765						
ANR	366910	Symbol	dataLen		366765						
ANR	366911	Function	CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_09_good	112:0:3454:3561							
ANR	366912	FunctionDef	CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_09_good ()		366911	0					
ANR	366913	CompoundStatement		113:0:3524:3561	366911	0					
ANR	366914	ExpressionStatement	goodG2B1 ( )	114:4:3531:3541	366911	0	True				
ANR	366915	CallExpression	goodG2B1 ( )		366911	0					
ANR	366916	Callee	goodG2B1		366911	0					
ANR	366917	Identifier	goodG2B1		366911	0					
ANR	366918	ArgumentList			366911	1					
ANR	366919	ExpressionStatement	goodG2B2 ( )	115:4:3548:3558	366911	1	True				
ANR	366920	CallExpression	goodG2B2 ( )		366911	0					
ANR	366921	Callee	goodG2B2		366911	0					
ANR	366922	Identifier	goodG2B2		366911	0					
ANR	366923	ArgumentList			366911	1					
ANR	366924	ReturnType	void		366911	1					
ANR	366925	Identifier	CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_09_good		366911	2					
ANR	366926	ParameterList			366911	3					
ANR	366927	CFGEntryNode	ENTRY		366911		True				
ANR	366928	CFGExitNode	EXIT		366911		True				
ANR	366929	Function	main	128:0:3910:4387							
ANR	366930	FunctionDef	"main (int argc , char * argv [ ])"		366929	0					
ANR	366931	CompoundStatement		129:0:3945:4387	366929	0					
ANR	366932	ExpressionStatement	srand ( ( unsigned ) time ( NULL ) )	131:4:3979:4008	366929	0	True				
ANR	366933	CallExpression	srand ( ( unsigned ) time ( NULL ) )		366929	0					
ANR	366934	Callee	srand		366929	0					
ANR	366935	Identifier	srand		366929	0					
ANR	366936	ArgumentList	( unsigned ) time ( NULL )		366929	1					
ANR	366937	Argument	( unsigned ) time ( NULL )		366929	0					
ANR	366938	CastExpression	( unsigned ) time ( NULL )		366929	0					
ANR	366939	CastTarget	unsigned		366929	0					
ANR	366940	CallExpression	time ( NULL )		366929	1					
ANR	366941	Callee	time		366929	0					
ANR	366942	Identifier	time		366929	0					
ANR	366943	ArgumentList	NULL		366929	1					
ANR	366944	Argument	NULL		366929	0					
ANR	366945	Identifier	NULL		366929	0					
ANR	366946	ExpressionStatement	"printLine ( ""Calling good()..."" )"	133:4:4033:4063	366929	1	True				
ANR	366947	CallExpression	"printLine ( ""Calling good()..."" )"		366929	0					
ANR	366948	Callee	printLine		366929	0					
ANR	366949	Identifier	printLine		366929	0					
ANR	366950	ArgumentList	"""Calling good()..."""		366929	1					
ANR	366951	Argument	"""Calling good()..."""		366929	0					
ANR	366952	PrimaryExpression	"""Calling good()..."""		366929	0					
ANR	366953	ExpressionStatement	CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_09_good ( )	134:4:4070:4133	366929	2	True				
ANR	366954	CallExpression	CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_09_good ( )		366929	0					
ANR	366955	Callee	CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_09_good		366929	0					
ANR	366956	Identifier	CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_09_good		366929	0					
ANR	366957	ArgumentList			366929	1					
ANR	366958	ExpressionStatement	"printLine ( ""Finished good()"" )"	135:4:4140:4168	366929	3	True				
ANR	366959	CallExpression	"printLine ( ""Finished good()"" )"		366929	0					
ANR	366960	Callee	printLine		366929	0					
ANR	366961	Identifier	printLine		366929	0					
ANR	366962	ArgumentList	"""Finished good()"""		366929	1					
ANR	366963	Argument	"""Finished good()"""		366929	0					
ANR	366964	PrimaryExpression	"""Finished good()"""		366929	0					
ANR	366965	ExpressionStatement	"printLine ( ""Calling bad()..."" )"	138:4:4215:4244	366929	4	True				
ANR	366966	CallExpression	"printLine ( ""Calling bad()..."" )"		366929	0					
ANR	366967	Callee	printLine		366929	0					
ANR	366968	Identifier	printLine		366929	0					
ANR	366969	ArgumentList	"""Calling bad()..."""		366929	1					
ANR	366970	Argument	"""Calling bad()..."""		366929	0					
ANR	366971	PrimaryExpression	"""Calling bad()..."""		366929	0					
ANR	366972	ExpressionStatement	CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_09_bad ( )	139:4:4251:4313	366929	5	True				
ANR	366973	CallExpression	CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_09_bad ( )		366929	0					
ANR	366974	Callee	CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_09_bad		366929	0					
ANR	366975	Identifier	CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_09_bad		366929	0					
ANR	366976	ArgumentList			366929	1					
ANR	366977	ExpressionStatement	"printLine ( ""Finished bad()"" )"	140:4:4320:4347	366929	6	True				
ANR	366978	CallExpression	"printLine ( ""Finished bad()"" )"		366929	0					
ANR	366979	Callee	printLine		366929	0					
ANR	366980	Identifier	printLine		366929	0					
ANR	366981	ArgumentList	"""Finished bad()"""		366929	1					
ANR	366982	Argument	"""Finished bad()"""		366929	0					
ANR	366983	PrimaryExpression	"""Finished bad()"""		366929	0					
ANR	366984	ReturnStatement	return 0 ;	142:4:4376:4384	366929	7	True				
ANR	366985	PrimaryExpression	0		366929	0					
ANR	366986	ReturnType	int		366929	1					
ANR	366987	Identifier	main		366929	2					
ANR	366988	ParameterList	"int argc , char * argv [ ]"		366929	3					
ANR	366989	Parameter	int argc	128:9:3919:3926	366929	0	True				
ANR	366990	ParameterType	int		366929	0					
ANR	366991	Identifier	argc		366929	1					
ANR	366992	Parameter	char * argv [ ]	128:19:3929:3941	366929	1	True				
ANR	366993	ParameterType	char * [ ]		366929	0					
ANR	366994	Identifier	argv		366929	1					
ANR	366995	CFGEntryNode	ENTRY		366929		True				
ANR	366996	CFGExitNode	EXIT		366929		True				
ANR	366997	Symbol	argc		366929						
ANR	366998	Symbol	NULL		366929						
ANR	366999	Symbol	time		366929						
ANR	367000	Symbol	argv		366929						
